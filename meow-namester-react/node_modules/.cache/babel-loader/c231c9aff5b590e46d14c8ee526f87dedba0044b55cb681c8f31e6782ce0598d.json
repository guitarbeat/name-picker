{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js\",\n  _s = $RefreshSig$();\n/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport './Tournament.css';\nimport { useUserSession } from '../../hooks/useUserSession';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tournament({\n  onComplete,\n  existingRatings = {},\n  names = [],\n  userName\n}) {\n  _s();\n  const {\n    saveTournamentProgress,\n    tournamentProgress,\n    saveStatus,\n    lastSaved\n  } = useUserSession();\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  useEffect(() => {\n    if (tournamentProgress) {\n      setRoundNumber(tournamentProgress.round_number);\n      setCurrentMatchNumber(tournamentProgress.current_match);\n      setTotalMatches(tournamentProgress.total_matches);\n      // Reconstruct sorter state if needed\n      if (tournamentProgress.sorter_state) {\n        const newSorter = new PreferenceSorter(tournamentProgress.names);\n        newSorter.namMember = tournamentProgress.sorter_state.namMember;\n        newSorter.ranks = tournamentProgress.sorter_state.ranks;\n        setSorter(newSorter);\n      }\n    } else {\n      startNewTournament();\n    }\n  }, [tournamentProgress]);\n  useEffect(() => {\n    if (sorter && currentMatch) {\n      saveTournamentProgress({\n        roundNumber,\n        currentMatch: currentMatchNumber,\n        totalMatches,\n        names,\n        sorterState: {\n          namMember: sorter.namMember,\n          ranks: sorter.ranks\n        }\n      });\n    }\n  }, [roundNumber, currentMatchNumber, totalMatches, sorter, currentMatch, saveTournamentProgress, names]);\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n    runTournament(newSorter);\n  };\n  const runTournament = async tournamentSorter => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({\n          left,\n          right\n        });\n        return new Promise(resolve => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // Create ratings array with preserved order\n      const ratingsArray = sortedResults.map((name, index) => {\n        // Get existing rating or default\n        const currentRating = typeof existingRatings[name] === 'object' ? existingRatings[name].rating : existingRatings[name] || 1500;\n\n        // Calculate new rating based on position (higher index = better rank)\n        const totalNames = sortedResults.length;\n        const position = index; // Keep original index (winners at start)\n        const ratingSpread = 500; // Total rating spread from top to bottom\n        const positionValue = (totalNames - position - 1) / (totalNames - 1) * ratingSpread;\n\n        // Blend existing rating with new position-based rating\n        const blendFactor = 0.7; // 70% new rating, 30% existing rating\n        const newRating = Math.round(blendFactor * (1500 + positionValue) + (1 - blendFactor) * currentRating);\n\n        // Ensure rating stays within bounds\n        const finalRating = Math.max(1000, Math.min(2000, newRating));\n        return {\n          name,\n          rating: finalRating\n        };\n      });\n      onComplete(ratingsArray);\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n  const handleVote = useCallback(result => {\n    if (isTransitioning || !resolveVote) return;\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    let voteValue;\n    switch (result) {\n      case 'left':\n        voteValue = -1;\n        break;\n      case 'right':\n        voteValue = 1;\n        break;\n      case 'both':\n        voteValue = -0.1;\n        break;\n      case 'none':\n        voteValue = 0;\n        break;\n      default:\n        voteValue = 0;\n    }\n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (isTransitioning) return;\n      switch (event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  // Render save status indicator\n  const renderSaveStatus = () => {\n    const getStatusColor = () => {\n      switch (saveStatus) {\n        case 'saving':\n          return '#6b46c1';\n        // Purple\n        case 'saved':\n          return '#48bb78';\n        // Green\n        case 'error':\n          return '#e53e3e';\n        // Red\n        default:\n          return '#718096';\n        // Gray\n      }\n    };\n    const getStatusText = () => {\n      switch (saveStatus) {\n        case 'saving':\n          return 'Saving...';\n        case 'saved':\n          return lastSaved ? `Saved ${new Date(lastSaved).toLocaleTimeString()}` : 'Saved';\n        case 'error':\n          return 'Save failed';\n        default:\n          return '';\n      }\n    };\n    if (saveStatus === 'idle') return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"save-status\",\n      style: {\n        color: getStatusColor()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"save-icon\",\n        children: [saveStatus === 'saving' && '⟳', saveStatus === 'saved' && '✓', saveStatus === 'error' && '⚠']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"save-text\",\n        children: getStatusText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  };\n  if (!currentMatch) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading tournament...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 29\n  }, this);\n  const progress = Math.round(currentMatchNumber / totalMatches * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"round-number\",\n          children: [\"Round \", roundNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"match-count\",\n          children: [\"Match \", currentMatchNumber, \" of \", totalMatches]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-info\",\n        children: [progress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), renderSaveStatus()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"names-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'left' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('left'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2190 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.left\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vs-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vs-text\",\n            children: \"vs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'right' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('right'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2192 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.right\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('both'),\n          disabled: isTransitioning,\n          title: \"Press 'B' key\",\n          children: \"Like Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('none'),\n          disabled: isTransitioning,\n          title: \"Press 'N' key\",\n          children: \"No Opinion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on a name to choose it, or select an option below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-hints\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keyboard shortcuts: \\u2190 Left, \\u2192 Right, B (Both), N (No Opinion)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournament, \"vrpMuSEshbMK2V74QQvjbk3oYd4=\", false, function () {\n  return [useUserSession];\n});\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","PreferenceSorter","EloRating","useUserSession","jsxDEV","_jsxDEV","Tournament","onComplete","existingRatings","names","userName","_s","saveTournamentProgress","tournamentProgress","saveStatus","lastSaved","currentMatch","setCurrentMatch","isTransitioning","setIsTransitioning","roundNumber","setRoundNumber","currentMatchNumber","setCurrentMatchNumber","totalMatches","setTotalMatches","sorter","setSorter","elo","resolveVote","setResolveVote","selectedOption","setSelectedOption","round_number","current_match","total_matches","sorter_state","newSorter","namMember","ranks","startNewTournament","sorterState","length","n","estimatedMatches","Math","ceil","log2","runTournament","tournamentSorter","sortedResults","sort","left","right","Promise","resolve","ratingsArray","map","name","index","currentRating","rating","totalNames","position","ratingSpread","positionValue","blendFactor","newRating","round","finalRating","max","min","error","console","handleVote","result","voteValue","prev","setTimeout","handleKeyPress","event","key","window","addEventListener","removeEventListener","renderSaveStatus","getStatusColor","getStatusText","Date","toLocaleTimeString","className","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","onClick","role","tabIndex","title","disabled","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js"],"sourcesContent":["/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport './Tournament.css';\nimport { useUserSession } from '../../hooks/useUserSession';\n\nfunction Tournament({ onComplete, existingRatings = {}, names = [], userName }) {\n  const { saveTournamentProgress, tournamentProgress, saveStatus, lastSaved } = useUserSession();\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  useEffect(() => {\n    if (tournamentProgress) {\n      setRoundNumber(tournamentProgress.round_number);\n      setCurrentMatchNumber(tournamentProgress.current_match);\n      setTotalMatches(tournamentProgress.total_matches);\n      // Reconstruct sorter state if needed\n      if (tournamentProgress.sorter_state) {\n        const newSorter = new PreferenceSorter(tournamentProgress.names);\n        newSorter.namMember = tournamentProgress.sorter_state.namMember;\n        newSorter.ranks = tournamentProgress.sorter_state.ranks;\n        setSorter(newSorter);\n      }\n    } else {\n      startNewTournament();\n    }\n  }, [tournamentProgress]);\n\n  useEffect(() => {\n    if (sorter && currentMatch) {\n      saveTournamentProgress({\n        roundNumber,\n        currentMatch: currentMatchNumber,\n        totalMatches,\n        names,\n        sorterState: {\n          namMember: sorter.namMember,\n          ranks: sorter.ranks\n        }\n      });\n    }\n  }, [roundNumber, currentMatchNumber, totalMatches, sorter, currentMatch, saveTournamentProgress, names]);\n\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    \n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n\n    runTournament(newSorter);\n  };\n\n  const runTournament = async (tournamentSorter) => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({ left, right });\n        return new Promise((resolve) => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // Create ratings array with preserved order\n      const ratingsArray = sortedResults.map((name, index) => {\n        // Get existing rating or default\n        const currentRating = typeof existingRatings[name] === 'object'\n          ? existingRatings[name].rating\n          : (existingRatings[name] || 1500);\n        \n        // Calculate new rating based on position (higher index = better rank)\n        const totalNames = sortedResults.length;\n        const position = index; // Keep original index (winners at start)\n        const ratingSpread = 500; // Total rating spread from top to bottom\n        const positionValue = ((totalNames - position - 1) / (totalNames - 1)) * ratingSpread;\n        \n        // Blend existing rating with new position-based rating\n        const blendFactor = 0.7; // 70% new rating, 30% existing rating\n        const newRating = Math.round(\n          (blendFactor * (1500 + positionValue)) +\n          ((1 - blendFactor) * currentRating)\n        );\n\n        // Ensure rating stays within bounds\n        const finalRating = Math.max(1000, Math.min(2000, newRating));\n        \n        return {\n          name,\n          rating: finalRating\n        };\n      });\n\n      onComplete(ratingsArray);\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n\n  const handleVote = useCallback((result) => {\n    if (isTransitioning || !resolveVote) return;\n\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    \n    let voteValue;\n    switch (result) {\n      case 'left':\n        voteValue = -1;\n        break;\n      case 'right':\n        voteValue = 1;\n        break;\n      case 'both':\n        voteValue = -0.1;\n        break;\n      case 'none':\n        voteValue = 0;\n        break;\n      default:\n        voteValue = 0;\n    }\n    \n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    \n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (isTransitioning) return;\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  // Render save status indicator\n  const renderSaveStatus = () => {\n    const getStatusColor = () => {\n      switch (saveStatus) {\n        case 'saving': return '#6b46c1';  // Purple\n        case 'saved': return '#48bb78';   // Green\n        case 'error': return '#e53e3e';   // Red\n        default: return '#718096';        // Gray\n      }\n    };\n\n    const getStatusText = () => {\n      switch (saveStatus) {\n        case 'saving': return 'Saving...';\n        case 'saved': return lastSaved ? `Saved ${new Date(lastSaved).toLocaleTimeString()}` : 'Saved';\n        case 'error': return 'Save failed';\n        default: return '';\n      }\n    };\n\n    if (saveStatus === 'idle') return null;\n\n    return (\n      <div className=\"save-status\" style={{ color: getStatusColor() }}>\n        <span className=\"save-icon\">\n          {saveStatus === 'saving' && '⟳'}\n          {saveStatus === 'saved' && '✓'}\n          {saveStatus === 'error' && '⚠'}\n        </span>\n        <span className=\"save-text\">{getStatusText()}</span>\n      </div>\n    );\n  };\n\n  if (!currentMatch) return <div>Loading tournament...</div>;\n\n  const progress = Math.round((currentMatchNumber / totalMatches) * 100);\n\n  return (\n    <div className=\"tournament\">\n      <div className=\"progress-info\">\n        <div className=\"round-info\">\n          <span className=\"round-number\">Round {roundNumber}</span>\n          <span className=\"match-count\">Match {currentMatchNumber} of {totalMatches}</span>\n        </div>\n        <div className=\"percentage-info\">{progress}% Complete</div>\n        {renderSaveStatus()}\n      </div>\n\n      <div className=\"matchup\">\n        <div className=\"names-row\">\n          <div className=\"name-container left\">\n            <div \n              className={`name-card ${selectedOption === 'left' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('left')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press ← arrow key\"\n            >\n              <h3>{currentMatch.left}</h3>\n            </div>\n          </div>\n\n          <div className=\"vs-section\">\n            <div className=\"vs-text\">vs</div>\n          </div>\n\n          <div className=\"name-container right\">\n            <div \n              className={`name-card ${selectedOption === 'right' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('right')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press → arrow key\"\n            >\n              <h3>{currentMatch.right}</h3>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"center-options\">\n          <button\n            className={`extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('both')}\n            disabled={isTransitioning}\n            title=\"Press 'B' key\"\n          >\n            Like Both\n          </button>\n          <button\n            className={`extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('none')}\n            disabled={isTransitioning}\n            title=\"Press 'N' key\"\n          >\n            No Opinion\n          </button>\n        </div>\n      </div>\n\n      <div className=\"tournament-instructions\">\n        <p>Click on a name to choose it, or select an option below</p>\n      </div>\n\n      <div className=\"keyboard-hints\">\n        <p>Keyboard shortcuts: ← Left, → Right, B (Both), N (No Opinion)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Tournament; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}