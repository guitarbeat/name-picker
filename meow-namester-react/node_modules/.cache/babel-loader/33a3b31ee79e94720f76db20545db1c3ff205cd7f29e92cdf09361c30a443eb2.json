{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/App.js\",\n  _s = $RefreshSig$();\n/**\n * @module App\n * @description Main application component for the cat name tournament app.\n * Manages the overall application state and tournament flow, including:\n * - Name input and management\n * - Tournament progression\n * - Rating calculations\n * - Results display\n * \n * Uses the Elo rating system for ranking and a custom sorting algorithm\n * for determining the best cat name through user preferences.\n * \n * @component\n * @returns {JSX.Element} The complete application UI\n */\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { ErrorBoundary, LoadingSpinner, Results, Tournament, Bracket } from './components';\nimport useSupabaseStorage from './lib/supabase/useSupabaseStorage';\nimport { PreferenceSorter } from './utils/sortingAlgorithm';\nimport EloRating from './utils/EloRating';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [nameOptions, setNameOptions] = useState([]);\n  const [currentPair, setCurrentPair] = useState({\n    left: null,\n    right: null\n  });\n  const [isSorting, setIsSorting] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState([]);\n  const [sorter, setSorter] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [totalComparisons, setTotalComparisons] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ratings, setRatings] = useSupabaseStorage('cat_names', []);\n  const [newOption, setNewOption] = useState('');\n  const elo = useMemo(() => new EloRating(), []);\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    const fetchOptions = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('/options.txt');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.text();\n        const optionsArray = data.split('\\n').filter(option => option.trim() !== '');\n        if (optionsArray.length > 1) {\n          setNameOptions(shuffleArray(optionsArray));\n        } else {\n          console.error('Insufficient options to perform sorting.');\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error loading options:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchOptions();\n  }, []);\n  const addNewOption = () => {\n    if (newOption.trim() === '') {\n      return;\n    }\n    setNameOptions(prev => [...prev, newOption.trim()]);\n    const newCat = {\n      name: newOption.trim(),\n      rating: elo.defaultRating\n    };\n    setRatings(prev => [...prev, newCat]);\n    setNewOption('');\n  };\n  const handleChoice = useCallback(choice => {\n    if (!window.resolveComparison) {\n      return;\n    }\n    const {\n      left,\n      right\n    } = currentPair;\n    const leftCat = ratings.find(cat => cat.name === left) || {\n      name: left,\n      rating: elo.defaultRating\n    };\n    const rightCat = ratings.find(cat => cat.name === right) || {\n      name: right,\n      rating: elo.defaultRating\n    };\n    const newRatings = elo.calculateNewRatings(leftCat.rating, rightCat.rating, choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n    const updatedRatings = ratings.filter(cat => cat.name !== left && cat.name !== right);\n    updatedRatings.push({\n      name: left,\n      rating: newRatings.newRatingA\n    }, {\n      name: right,\n      rating: newRatings.newRatingB\n    });\n    setRatings(updatedRatings);\n    setMatches(prev => [...prev, {\n      id: prev.length + 1,\n      name1: left,\n      name2: right,\n      winner: choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2\n    }]);\n    window.resolveComparison(choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n  }, [currentPair, ratings, elo]);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (!isSorting) {\n        return;\n      }\n      switch (event.key) {\n        case 'ArrowLeft':\n          handleChoice('left');\n          break;\n        case 'ArrowRight':\n          handleChoice('right');\n          break;\n        case 'b':\n        case 'B':\n          handleChoice('both');\n          break;\n        case 'n':\n        case 'N':\n          handleChoice('none');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isSorting, handleChoice]);\n  useEffect(() => {\n    if (isSorting) {\n      const handleTabKey = e => {\n        if (e.key === 'Tab') {\n          const focusableElements = document.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n          const firstFocusableElement = focusableElements[0];\n          const lastFocusableElement = focusableElements[focusableElements.length - 1];\n          if (e.shiftKey && document.activeElement === firstFocusableElement) {\n            e.preventDefault();\n            lastFocusableElement.focus();\n          } else if (!e.shiftKey && document.activeElement === lastFocusableElement) {\n            e.preventDefault();\n            firstFocusableElement.focus();\n          }\n        }\n      };\n      document.addEventListener('keydown', handleTabKey);\n      return () => document.removeEventListener('keydown', handleTabKey);\n    }\n  }, [isSorting]);\n  const handleStart = async () => {\n    if (userName.trim() === '') {\n      alert('Please enter your name to start the quiz.');\n      return;\n    }\n    if (nameOptions.length < 2) {\n      alert('Not enough options to start sorting.');\n      return;\n    }\n    const newSorter = new PreferenceSorter(nameOptions);\n    setSorter(newSorter);\n    setIsSorting(true);\n    const n = nameOptions.length;\n    const estimatedComparisons = Math.ceil(n * Math.log2(n));\n    setTotalComparisons(estimatedComparisons);\n    setProgress(0);\n    try {\n      let comparisons = 0;\n      const sortedResults = await newSorter.sort(async (a, b) => {\n        setCurrentPair({\n          left: a,\n          right: b\n        });\n        comparisons++;\n        setProgress(Math.floor(comparisons / estimatedComparisons * 100));\n        return new Promise(resolve => {\n          window.resolveComparison = resolve;\n        });\n      });\n      setResults(sortedResults);\n      setShowResults(true);\n      setIsSorting(false);\n    } catch (error) {\n      console.error('Sorting error:', error);\n    }\n  };\n  const shuffleArray = array => {\n    // Fisher-Yates shuffle algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const handleRedo = () => {\n    setCurrentPair({\n      left: null,\n      right: null\n    });\n    setIsSorting(false);\n    setShowResults(false);\n    setResults([]);\n    setSorter(null);\n    setMatches([]);\n    setNameOptions(shuffleArray([...nameOptions]));\n  };\n  const sortedResults = showResults ? results.map(name => {\n    const cat = ratings.find(r => r.name === name) || {\n      name,\n      rating: elo.defaultRating\n    };\n    return cat;\n  }).sort((a, b) => b.rating - a.rating) : [];\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#main\",\n        className: \"skip-link\",\n        children: \"Skip to main content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/cat.gif\",\n          alt: \"Cute cat animation\",\n          className: \"cat-gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Help Me Name My Cat!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to the ultimate cat name sorter! Help decide the perfect name through fun matchups.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"main\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!isSorting && !showResults && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"setup-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"userName\",\n                children: \"Your Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"userName\",\n                value: userName,\n                onChange: e => setUserName(e.target.value),\n                placeholder: \"Enter your name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-management\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Name Options\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newOption,\n                  onChange: e => setNewOption(e.target.value),\n                  placeholder: \"Add a new name option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: addNewOption,\n                  children: \"Add Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"options-list\",\n                children: nameOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"option-item\",\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"primary-button\",\n              onClick: handleStart,\n              disabled: nameOptions.length < 2 || userName.trim() === '',\n              children: \"Start Sorting!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), isSorting && /*#__PURE__*/_jsxDEV(Tournament, {\n            currentPair: currentPair,\n            onChoice: handleChoice,\n            progress: progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), showResults && /*#__PURE__*/_jsxDEV(Results, {\n            results: sortedResults,\n            onRedo: handleRedo,\n            matches: matches\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Cu2fbtHNGUxL1MTpjLcv5TqlqXM=\", false, function () {\n  return [useSupabaseStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","ErrorBoundary","LoadingSpinner","Results","Tournament","Bracket","useSupabaseStorage","PreferenceSorter","EloRating","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userName","setUserName","nameOptions","setNameOptions","currentPair","setCurrentPair","left","right","isSorting","setIsSorting","showResults","setShowResults","results","setResults","sorter","setSorter","progress","setProgress","totalComparisons","setTotalComparisons","isLoading","setIsLoading","ratings","setRatings","newOption","setNewOption","elo","matches","setMatches","fetchOptions","response","fetch","ok","Error","data","text","optionsArray","split","filter","option","trim","length","shuffleArray","console","error","addNewOption","prev","newCat","name","rating","defaultRating","handleChoice","choice","window","resolveComparison","leftCat","find","cat","rightCat","newRatings","calculateNewRatings","updatedRatings","push","newRatingA","newRatingB","id","name1","name2","winner","handleKeyPress","event","key","addEventListener","removeEventListener","handleTabKey","e","focusableElements","document","querySelectorAll","firstFocusableElement","lastFocusableElement","shiftKey","activeElement","preventDefault","focus","handleStart","alert","newSorter","n","estimatedComparisons","Math","ceil","log2","comparisons","sortedResults","sort","a","b","floor","Promise","resolve","array","i","j","random","handleRedo","map","r","children","className","href","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","htmlFor","type","value","onChange","target","placeholder","required","onClick","index","disabled","onChoice","onRedo","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/App.js"],"sourcesContent":["/**\n * @module App\n * @description Main application component for the cat name tournament app.\n * Manages the overall application state and tournament flow, including:\n * - Name input and management\n * - Tournament progression\n * - Rating calculations\n * - Results display\n * \n * Uses the Elo rating system for ranking and a custom sorting algorithm\n * for determining the best cat name through user preferences.\n * \n * @component\n * @returns {JSX.Element} The complete application UI\n */\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport {\n  ErrorBoundary,\n  LoadingSpinner,\n  Results,\n  Tournament,\n  Bracket\n} from './components';\nimport useSupabaseStorage from './lib/supabase/useSupabaseStorage';\nimport { PreferenceSorter } from './utils/sortingAlgorithm';\nimport EloRating from './utils/EloRating';\nimport './index.css';\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [nameOptions, setNameOptions] = useState([]);\n  const [currentPair, setCurrentPair] = useState({ left: null, right: null });\n  const [isSorting, setIsSorting] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState([]);\n  const [sorter, setSorter] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [totalComparisons, setTotalComparisons] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ratings, setRatings] = useSupabaseStorage('cat_names', []);\n  const [newOption, setNewOption] = useState('');\n  const elo = useMemo(() => new EloRating(), []);\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('/options.txt');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.text();\n        const optionsArray = data.split('\\n').filter(option => option.trim() !== '');\n        if (optionsArray.length > 1) {\n          setNameOptions(shuffleArray(optionsArray));\n        } else {\n          console.error('Insufficient options to perform sorting.');\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error loading options:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchOptions();\n  }, []);\n\n  const addNewOption = () => {\n    if (newOption.trim() === '') {\n      return;\n    }\n    setNameOptions(prev => [...prev, newOption.trim()]);\n    const newCat = { name: newOption.trim(), rating: elo.defaultRating };\n    setRatings(prev => [...prev, newCat]);\n    setNewOption('');\n  };\n\n  const handleChoice = useCallback((choice) => {\n    if (!window.resolveComparison) {\n      return;\n    }\n    \n    const {left, right} = currentPair;\n    const leftCat = ratings.find(cat => cat.name === left) || { name: left, rating: elo.defaultRating };\n    const rightCat = ratings.find(cat => cat.name === right) || { name: right, rating: elo.defaultRating };\n    \n    const newRatings = elo.calculateNewRatings(leftCat.rating, rightCat.rating, choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n    \n    const updatedRatings = ratings.filter(cat => cat.name !== left && cat.name !== right);\n    updatedRatings.push(\n      { name: left, rating: newRatings.newRatingA },\n      { name: right, rating: newRatings.newRatingB }\n    );\n    \n    setRatings(updatedRatings);\n\n    setMatches(prev => [...prev, {\n      id: prev.length + 1,\n      name1: left,\n      name2: right,\n      winner: choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2\n    }]);\n\n    window.resolveComparison(choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n  }, [currentPair, ratings, elo]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (!isSorting) {\n        return;\n      }\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleChoice('left');\n          break;\n        case 'ArrowRight':\n          handleChoice('right');\n          break;\n        case 'b':\n        case 'B':\n          handleChoice('both');\n          break;\n        case 'n':\n        case 'N':\n          handleChoice('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isSorting, handleChoice]);\n\n  useEffect(() => {\n    if (isSorting) {\n      const handleTabKey = (e) => {\n        if (e.key === 'Tab') {\n          const focusableElements = document.querySelectorAll(\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n          );\n          const firstFocusableElement = focusableElements[0];\n          const lastFocusableElement = focusableElements[focusableElements.length - 1];\n\n          if (e.shiftKey && document.activeElement === firstFocusableElement) {\n            e.preventDefault();\n            lastFocusableElement.focus();\n          } else if (!e.shiftKey && document.activeElement === lastFocusableElement) {\n            e.preventDefault();\n            firstFocusableElement.focus();\n          }\n        }\n      };\n\n      document.addEventListener('keydown', handleTabKey);\n      return () => document.removeEventListener('keydown', handleTabKey);\n    }\n  }, [isSorting]);\n\n  const handleStart = async () => {\n    if (userName.trim() === '') {\n      alert('Please enter your name to start the quiz.');\n      return;\n    }\n    if (nameOptions.length < 2) {\n      alert('Not enough options to start sorting.');\n      return;\n    }\n    const newSorter = new PreferenceSorter(nameOptions);\n    setSorter(newSorter);\n    setIsSorting(true);\n    const n = nameOptions.length;\n    const estimatedComparisons = Math.ceil(n * Math.log2(n));\n    setTotalComparisons(estimatedComparisons);\n    setProgress(0);\n    \n    try {\n      let comparisons = 0;\n      const sortedResults = await newSorter.sort(async (a, b) => {\n        setCurrentPair({ left: a, right: b });\n        comparisons++;\n        setProgress(Math.floor((comparisons / estimatedComparisons) * 100));\n        return new Promise((resolve) => {\n          window.resolveComparison = resolve;\n        });\n      });\n      setResults(sortedResults);\n      setShowResults(true);\n      setIsSorting(false);\n    } catch (error) {\n      console.error('Sorting error:', error);\n    }\n  };\n\n  const shuffleArray = (array) => {\n    // Fisher-Yates shuffle algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const handleRedo = () => {\n    setCurrentPair({ left: null, right: null });\n    setIsSorting(false);\n    setShowResults(false);\n    setResults([]);\n    setSorter(null);\n    setMatches([]);\n    setNameOptions(shuffleArray([...nameOptions]));\n  };\n\n  const sortedResults = showResults ? \n    results.map(name => {\n      const cat = ratings.find(r => r.name === name) || { name, rating: elo.defaultRating };\n      return cat;\n    }).sort((a, b) => b.rating - a.rating) : [];\n\n  return (\n    <ErrorBoundary>\n      <div className=\"App\">\n        <a href=\"#main\" className=\"skip-link\">\n          Skip to main content\n        </a>\n        <header className=\"App-header\">\n          <img \n            src=\"/images/cat.gif\" \n            alt=\"Cute cat animation\" \n            className=\"cat-gif\"\n          />\n          <h1>Help Me Name My Cat!</h1>\n          <p>Welcome to the ultimate cat name sorter! Help decide the perfect name through fun matchups.</p>\n        </header>\n\n        <main id=\"main\">\n          {isLoading ? (\n            <LoadingSpinner />\n          ) : (\n            <>\n              {!isSorting && !showResults && (\n                <section className=\"setup-section\">\n                  <div className=\"user-input\">\n                    <label htmlFor=\"userName\">Your Name:</label>\n                    <input \n                      type=\"text\" \n                      id=\"userName\" \n                      value={userName} \n                      onChange={(e) => setUserName(e.target.value)} \n                      placeholder=\"Enter your name\" \n                      required \n                    />\n                  </div>\n\n                  <div className=\"options-management\">\n                    <h2>Name Options</h2>\n                    <div className=\"add-option\">\n                      <input\n                        type=\"text\"\n                        value={newOption}\n                        onChange={(e) => setNewOption(e.target.value)}\n                        placeholder=\"Add a new name option\"\n                      />\n                      <button onClick={addNewOption}>Add Name</button>\n                    </div>\n                    <div className=\"options-list\">\n                      {nameOptions.map((option, index) => (\n                        <div key={index} className=\"option-item\">\n                          {option}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <button \n                    className=\"primary-button\"\n                    onClick={handleStart}\n                    disabled={nameOptions.length < 2 || userName.trim() === ''}\n                  >\n                    Start Sorting!\n                  </button>\n                </section>\n              )}\n\n              {isSorting && (\n                <Tournament\n                  currentPair={currentPair}\n                  onChoice={handleChoice}\n                  progress={progress}\n                />\n              )}\n\n              {showResults && (\n                <Results \n                  results={sortedResults}\n                  onRedo={handleRedo}\n                  matches={matches}\n                />\n              )}\n            </>\n          )}\n        </main>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}