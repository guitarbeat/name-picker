{"ast":null,"code":"import React,{useState,useEffect}from'react';import useSupabaseStorage from'../../supabase/useSupabaseStorage';import{supabase}from'../../supabase/supabaseClient';import'./Profile.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Profile(_ref){let{userName,onStartNewTournament}=_ref;const[ratings,setRatings,{loading,error}]=useSupabaseStorage('cat_name_ratings',[],userName);const[isAdmin,setIsAdmin]=useState(false);const[allUsersRatings,setAllUsersRatings]=useState([]);const[selectedUser,setSelectedUser]=useState(userName);const[loadingAllUsers,setLoadingAllUsers]=useState(false);const[hiddenNames,setHiddenNames]=useState(new Set());const[viewMode,setViewMode]=useState('individual');// 'individual' or 'aggregated'\nconst[aggregatedStats,setAggregatedStats]=useState({});const[sortConfig,setSortConfig]=useState({key:'avgRating',direction:'desc'});const[showDeleteConfirm,setShowDeleteConfirm]=useState(false);const[userToDelete,setUserToDelete]=useState(null);const[deleteStatus,setDeleteStatus]=useState({loading:false,error:null});const[showCopyToast,setShowCopyToast]=useState(false);useEffect(()=>{setIsAdmin(userName.toLowerCase()==='aaron');},[userName]);useEffect(()=>{if(isAdmin){fetchAllUsersRatings();fetchHiddenNames();}},[isAdmin]);const fetchAllUsersRatings=async()=>{try{setLoadingAllUsers(true);const{data,error:fetchError}=await supabase.from('cat_name_ratings').select(\"\\n          rating,\\n          wins,\\n          losses,\\n          user_name,\\n          updated_at,\\n          name_options (\\n            id,\\n            name,\\n            description\\n          )\\n        \");if(fetchError)throw fetchError;// Process individual user ratings\nconst ratingsByUser=data.reduce((acc,item)=>{const userName=item.user_name;if(!acc[userName]){acc[userName]=[];}acc[userName].push({id:item.name_options.id,name:item.name_options.name,description:item.name_options.description,rating:item.rating,wins:item.wins,losses:item.losses,updated_at:item.updated_at});return acc;},{});// Calculate aggregated statistics\nconst aggregated=data.reduce((acc,item)=>{const nameId=item.name_options.id;const name=item.name_options.name;if(!acc[nameId]){acc[nameId]={id:nameId,name:name,description:item.name_options.description,totalRatings:0,totalWins:0,totalLosses:0,ratings:[],users:new Set()};}acc[nameId].totalRatings++;acc[nameId].totalWins+=item.wins||0;acc[nameId].totalLosses+=item.losses||0;acc[nameId].ratings.push(item.rating);acc[nameId].users.add(item.user_name);return acc;},{});// Calculate averages and other stats\nObject.values(aggregated).forEach(stat=>{stat.avgRating=Math.round(stat.ratings.reduce((sum,r)=>sum+r,0)/stat.ratings.length);stat.minRating=Math.min(...stat.ratings);stat.maxRating=Math.max(...stat.ratings);stat.uniqueUsers=stat.users.size;delete stat.ratings;// Clean up the raw ratings array\ndelete stat.users;// Clean up the users set\n});setAllUsersRatings(ratingsByUser);setAggregatedStats(aggregated);}catch(err){console.error('Error fetching all users ratings:',err);}finally{setLoadingAllUsers(false);}};const fetchHiddenNames=async()=>{try{const{data,error:fetchError}=await supabase.from('hidden_names').select('name_id');if(fetchError)throw fetchError;setHiddenNames(new Set(data.map(item=>item.name_id)));}catch(err){console.error('Error fetching hidden names:',err);}};const handleToggleNameVisibility=async nameId=>{try{if(hiddenNames.has(nameId)){// Unhide name\nawait supabase.from('hidden_names').delete().eq('name_id',nameId);const newHiddenNames=new Set(hiddenNames);newHiddenNames.delete(nameId);setHiddenNames(newHiddenNames);}else{// Hide name\nawait supabase.from('hidden_names').insert([{name_id:nameId}]);const newHiddenNames=new Set(hiddenNames);newHiddenNames.add(nameId);setHiddenNames(newHiddenNames);}// Refresh both the ratings and the names list\nfetchAllUsersRatings();}catch(err){console.error('Error toggling name visibility:',err);}};const handleSort=key=>{setSortConfig(prevConfig=>({key,direction:prevConfig.key===key&&prevConfig.direction==='desc'?'asc':'desc'}));};const getSortedAggregatedStats=()=>{const stats=Object.values(aggregatedStats);const sortedStats=stats.sort((a,b)=>{const aValue=a[sortConfig.key];const bValue=b[sortConfig.key];const modifier=sortConfig.direction==='asc'?1:-1;if(typeof aValue==='number'){return(aValue-bValue)*modifier;}return aValue.localeCompare(bValue)*modifier;});// Separate hidden and active names\nreturn{active:sortedStats.filter(stat=>!hiddenNames.has(stat.id)),hidden:sortedStats.filter(stat=>hiddenNames.has(stat.id))};};// Add a helper function to format dates\nconst formatDate=dateString=>{if(!dateString)return'N/A';const date=new Date(dateString);return new Intl.DateTimeFormat('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'}).format(date);};const handleDeleteUser=async userNameToDelete=>{if(!isAdmin)return;try{setDeleteStatus({loading:true,error:null});// Delete user's ratings\nconst{error:ratingsError}=await supabase.from('cat_name_ratings').delete().eq('user_name',userNameToDelete);if(ratingsError)throw ratingsError;// Delete user's tournament progress\nconst{error:progressError}=await supabase.from('tournament_progress').delete().eq('user_name',userNameToDelete);if(progressError)throw progressError;// Refresh data\nawait fetchAllUsersRatings();// Reset state\nsetShowDeleteConfirm(false);setUserToDelete(null);setDeleteStatus({loading:false,error:null});// If the deleted user was selected, reset to admin's view\nif(selectedUser===userNameToDelete){setSelectedUser(userName);}}catch(err){console.error('Error deleting user:',err);setDeleteStatus({loading:false,error:err.message});}};const copyResultsToClipboard=()=>{const sortedNames=[...currentRatings].sort((a,b)=>(b.rating||1500)-(a.rating||1500)).map(name=>name.name).join('\\n');const today=new Date();const formattedDate=today.toLocaleDateString('en-US',{weekday:'short',month:'short',day:'numeric'});const textToCopy=\"Title: \".concat(formattedDate,\" Cat Names \\uD83D\\uDC08\\u200D\\u2B1B\\nDescription: Cat Name Tournament Results\\n\\n\").concat(sortedNames);navigator.clipboard.writeText(textToCopy).then(()=>{setShowCopyToast(true);setTimeout(()=>setShowCopyToast(false),3000);});};if(loading||loadingAllUsers)return/*#__PURE__*/_jsxs(\"div\",{className:\"profile container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"Loading profile data...\"})]});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"profile container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"subtitle\",children:[\"Error loading profile: \",error.message]})]});const currentRatings=isAdmin&&selectedUser!==userName?allUsersRatings[selectedUser]||[]:ratings;const totalNames=currentRatings.length;const averageRating=totalNames>0?Math.round(currentRatings.reduce((sum,r)=>sum+(r.rating||1500),0)/totalNames):0;const totalMatches=currentRatings.reduce((sum,r)=>sum+(r.wins||0)+(r.losses||0),0);const topNames=[...currentRatings].sort((a,b)=>(b.rating||1500)-(a.rating||1500)).slice(0,5);return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"profile-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-title\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"profile-emoji\",children:\"\\uD83D\\uDE3A\"}),isAdmin?'Admin Dashboard':\"\".concat(userName,\"'s Profile\")]}),isAdmin&&/*#__PURE__*/_jsxs(\"div\",{className:\"admin-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"view-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"view-button \".concat(viewMode==='individual'?'active':''),onClick:()=>setViewMode('individual'),children:\"Individual View\"}),/*#__PURE__*/_jsx(\"button\",{className:\"view-button \".concat(viewMode==='aggregated'?'active':''),onClick:()=>setViewMode('aggregated'),children:\"Aggregated View\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:copyResultsToClipboard,className:\"action-button secondary-button\",title:\"Copy ranked names to clipboard\",children:\"\\uD83D\\uDCCB Copy Results\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchAllUsersRatings,className:\"action-button secondary-button\",children:\"\\uD83D\\uDD04 Refresh Data\"}),showCopyToast&&/*#__PURE__*/_jsx(\"div\",{className:\"toast success\",children:\"Results copied to clipboard!\"}),viewMode==='individual'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-switcher\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"user-avatar \".concat(selectedUser===userName?'active':''),onClick:()=>setSelectedUser(userName),title:\"Your Profile\",children:\"\\uD83D\\uDC64 You\"}),Object.keys(allUsersRatings).filter(user=>user!==userName).sort().map(user=>/*#__PURE__*/_jsxs(\"button\",{className:\"user-avatar \".concat(selectedUser===user?'active':''),onClick:()=>setSelectedUser(user),title:\"View \".concat(user,\"'s profile\"),children:[\"\\uD83D\\uDC64 \",user]},user))]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-controls\",children:selectedUser!==userName&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setUserToDelete(selectedUser);setShowDeleteConfirm(true);},className:\"action-button danger-button\",title:\"Delete this user's data\",children:\"\\uD83D\\uDDD1\\uFE0F Delete User Data\"})})]}),showDeleteConfirm&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u26A0\\uFE0F Delete User Data\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Are you sure you want to delete all data for user \",/*#__PURE__*/_jsx(\"strong\",{children:userToDelete}),\"?\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"warning-text\",children:\"This action cannot be undone!\"}),deleteStatus.error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[\"Error: \",deleteStatus.error]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteUser(userToDelete),className:\"action-button danger-button\",disabled:deleteStatus.loading,children:deleteStatus.loading?'Deleting...':'Yes, Delete User Data'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowDeleteConfirm(false);setUserToDelete(null);setDeleteStatus({loading:false,error:null});},className:\"action-button secondary-button\",disabled:deleteStatus.loading,children:\"Cancel\"})]})]})})]}),!isAdmin&&/*#__PURE__*/_jsx(\"p\",{className:\"profile-subtitle\",children:\"Cat Name Connoisseur\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:onStartNewTournament,className:\"action-button primary-button\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"button-icon\",children:\"\\uD83C\\uDFC6\"}),\"Start New Tournament\"]})]}),viewMode==='individual'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-icon\",children:\"\\uD83D\\uDCCA\"}),\"Overview\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Names Rated\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:totalNames})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Total Matches\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:totalMatches})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Average Rating\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:averageRating})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-icon\",children:\"\\uD83C\\uDFC5\"}),\"Top 5 Names\"]}),topNames.length>0?/*#__PURE__*/_jsx(\"ol\",{className:\"top-names-list\",children:topNames.map((name,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"top-name-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"rank-badge\",children:index+1}),/*#__PURE__*/_jsxs(\"div\",{className:\"name-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name-text\",children:name.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"name-stats\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"rating-badge\",children:Math.round(name.rating||1500)}),/*#__PURE__*/_jsxs(\"span\",{className:\"record-text\",children:[\"W: \",name.wins||0,\" L: \",name.losses||0]})]})]})]},name.id))}):/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"No names rated yet\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ratings-sections\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"active-names-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83C\\uDFAF\"}),\"Active Names\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"ratings-grid\",children:currentRatings.filter(name=>!hiddenNames.has(name.id)).map(name=>/*#__PURE__*/_jsxs(\"div\",{className:\"rating-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rating-card-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"name\",children:name.name}),isAdmin&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleToggleNameVisibility(name.id),className:\"visibility-toggle\",title:\"Click to hide this name from tournaments\",children:\"\\uD83D\\uDC41\\uFE0F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:Math.round(name.rating||1500)}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-text\",children:\"Rating\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:name.wins||0}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-text\",children:\"Wins\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:name.losses||0}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-text\",children:\"Losses\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"timestamps\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"timestamp\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"timestamp-label\",children:\"Last Updated:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"timestamp-value\",children:formatDate(name.updated_at)})]})})]},name.id))})]}),currentRatings.some(name=>hiddenNames.has(name.id))&&/*#__PURE__*/_jsxs(\"section\",{className:\"hidden-names-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83D\\uDEAB\"}),\"Hidden Names\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"ratings-grid\",children:currentRatings.filter(name=>hiddenNames.has(name.id)).map(name=>/*#__PURE__*/_jsxs(\"div\",{className:\"rating-card is-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rating-card-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"name\",children:name.name}),isAdmin&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleToggleNameVisibility(name.id),className:\"visibility-toggle hidden\",title:\"Click to show this name in tournaments\",children:\"\\uD83D\\uDEAB\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:Math.round(name.rating||1500)}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-text\",children:\"Rating\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:name.wins||0}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-text\",children:\"Wins\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:name.losses||0}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-text\",children:\"Losses\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"timestamps\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"timestamp\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"timestamp-label\",children:\"Last Updated:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"timestamp-value\",children:formatDate(name.updated_at)})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"hidden-status\",children:/*#__PURE__*/_jsx(\"p\",{className:\"hidden-text\",children:\"This name is hidden from tournaments\"})})]},name.id))})]})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"aggregated-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"aggregated-stats-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Aggregated Name Statistics\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sort-controls\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Sort by:\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleSort('avgRating'),className:sortConfig.key==='avgRating'?'active':'',children:[\"Average Rating \",sortConfig.key==='avgRating'&&(sortConfig.direction==='desc'?'↓':'↑')]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleSort('totalRatings'),className:sortConfig.key==='totalRatings'?'active':'',children:[\"Times Rated \",sortConfig.key==='totalRatings'&&(sortConfig.direction==='desc'?'↓':'↑')]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleSort('name'),className:sortConfig.key==='name'?'active':'',children:[\"Name \",sortConfig.key==='name'&&(sortConfig.direction==='desc'?'↓':'↑')]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"aggregated-sections\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"active-names-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83C\\uDFAF\"}),\"Active Names\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"aggregated-stats-grid\",children:getSortedAggregatedStats().active.map(stat=>/*#__PURE__*/_jsxs(\"div\",{className:\"aggregated-stat-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"name\",children:stat.name}),stat.description&&/*#__PURE__*/_jsx(\"div\",{className:\"name-description\",title:stat.description,children:\"\\u2139\\uFE0F\"}),isAdmin&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleToggleNameVisibility(stat.id),className:\"visibility-toggle\",title:\"Click to hide this name from tournaments\",children:\"\\uD83D\\uDC41\\uFE0F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"aggregated-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Avg Rating\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:stat.avgRating})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Times Rated\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:stat.totalRatings})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Rating Range\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[stat.minRating,\" - \",stat.maxRating]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Unique Users\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:stat.uniqueUsers})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Total W/L\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[stat.totalWins,\"/\",stat.totalLosses]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Win Rate\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[Math.round(stat.totalWins/(stat.totalWins+stat.totalLosses||1)*100),\"%\"]})]})]})]})]},stat.id))})]}),getSortedAggregatedStats().hidden.length>0&&/*#__PURE__*/_jsxs(\"section\",{className:\"hidden-names-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83D\\uDEAB\"}),\"Hidden Names\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"aggregated-stats-grid\",children:getSortedAggregatedStats().hidden.map(stat=>/*#__PURE__*/_jsxs(\"div\",{className:\"aggregated-stat-card is-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"name\",children:stat.name}),stat.description&&/*#__PURE__*/_jsx(\"div\",{className:\"name-description\",title:stat.description,children:\"\\u2139\\uFE0F\"}),isAdmin&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleToggleNameVisibility(stat.id),className:\"visibility-toggle hidden\",title:\"Click to show this name in tournaments\",children:\"\\uD83D\\uDEAB\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"aggregated-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Avg Rating\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:stat.avgRating})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Times Rated\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:stat.totalRatings})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Rating Range\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[stat.minRating,\" - \",stat.maxRating]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Unique Users\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:stat.uniqueUsers})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Total W/L\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[stat.totalWins,\"/\",stat.totalLosses]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Win Rate\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[Math.round(stat.totalWins/(stat.totalWins+stat.totalLosses||1)*100),\"%\"]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hidden-status\",children:/*#__PURE__*/_jsx(\"p\",{className:\"hidden-text\",children:\"This name is hidden from tournaments\"})})]},stat.id))})]})]})]})]});}export default Profile;","map":{"version":3,"names":["React","useState","useEffect","useSupabaseStorage","supabase","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Profile","_ref","userName","onStartNewTournament","ratings","setRatings","loading","error","isAdmin","setIsAdmin","allUsersRatings","setAllUsersRatings","selectedUser","setSelectedUser","loadingAllUsers","setLoadingAllUsers","hiddenNames","setHiddenNames","Set","viewMode","setViewMode","aggregatedStats","setAggregatedStats","sortConfig","setSortConfig","key","direction","showDeleteConfirm","setShowDeleteConfirm","userToDelete","setUserToDelete","deleteStatus","setDeleteStatus","showCopyToast","setShowCopyToast","toLowerCase","fetchAllUsersRatings","fetchHiddenNames","data","fetchError","from","select","ratingsByUser","reduce","acc","item","user_name","push","id","name_options","name","description","rating","wins","losses","updated_at","aggregated","nameId","totalRatings","totalWins","totalLosses","users","add","Object","values","forEach","stat","avgRating","Math","round","sum","r","length","minRating","min","maxRating","max","uniqueUsers","size","err","console","map","name_id","handleToggleNameVisibility","has","delete","eq","newHiddenNames","insert","handleSort","prevConfig","getSortedAggregatedStats","stats","sortedStats","sort","a","b","aValue","bValue","modifier","localeCompare","active","filter","hidden","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format","handleDeleteUser","userNameToDelete","ratingsError","progressError","message","copyResultsToClipboard","sortedNames","currentRatings","join","today","formattedDate","toLocaleDateString","weekday","textToCopy","concat","navigator","clipboard","writeText","then","setTimeout","className","children","totalNames","averageRating","totalMatches","topNames","slice","onClick","title","keys","user","disabled","index","some"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useSupabaseStorage from '../../supabase/useSupabaseStorage';\nimport { supabase } from '../../supabase/supabaseClient';\nimport './Profile.css';\n\nfunction Profile({ userName, onStartNewTournament }) {\n  const [ratings, setRatings, { loading, error }] = useSupabaseStorage('cat_name_ratings', [], userName);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [allUsersRatings, setAllUsersRatings] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(userName);\n  const [loadingAllUsers, setLoadingAllUsers] = useState(false);\n  const [hiddenNames, setHiddenNames] = useState(new Set());\n  const [viewMode, setViewMode] = useState('individual'); // 'individual' or 'aggregated'\n  const [aggregatedStats, setAggregatedStats] = useState({});\n  const [sortConfig, setSortConfig] = useState({ key: 'avgRating', direction: 'desc' });\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [userToDelete, setUserToDelete] = useState(null);\n  const [deleteStatus, setDeleteStatus] = useState({ loading: false, error: null });\n  const [showCopyToast, setShowCopyToast] = useState(false);\n\n  useEffect(() => {\n    setIsAdmin(userName.toLowerCase() === 'aaron');\n  }, [userName]);\n\n  useEffect(() => {\n    if (isAdmin) {\n      fetchAllUsersRatings();\n      fetchHiddenNames();\n    }\n  }, [isAdmin]);\n\n  const fetchAllUsersRatings = async () => {\n    try {\n      setLoadingAllUsers(true);\n      const { data, error: fetchError } = await supabase\n        .from('cat_name_ratings')\n        .select(`\n          rating,\n          wins,\n          losses,\n          user_name,\n          updated_at,\n          name_options (\n            id,\n            name,\n            description\n          )\n        `);\n\n      if (fetchError) throw fetchError;\n\n      // Process individual user ratings\n      const ratingsByUser = data.reduce((acc, item) => {\n        const userName = item.user_name;\n        if (!acc[userName]) {\n          acc[userName] = [];\n        }\n        acc[userName].push({\n          id: item.name_options.id,\n          name: item.name_options.name,\n          description: item.name_options.description,\n          rating: item.rating,\n          wins: item.wins,\n          losses: item.losses,\n          updated_at: item.updated_at\n        });\n        return acc;\n      }, {});\n\n      // Calculate aggregated statistics\n      const aggregated = data.reduce((acc, item) => {\n        const nameId = item.name_options.id;\n        const name = item.name_options.name;\n        \n        if (!acc[nameId]) {\n          acc[nameId] = {\n            id: nameId,\n            name: name,\n            description: item.name_options.description,\n            totalRatings: 0,\n            totalWins: 0,\n            totalLosses: 0,\n            ratings: [],\n            users: new Set(),\n          };\n        }\n        \n        acc[nameId].totalRatings++;\n        acc[nameId].totalWins += item.wins || 0;\n        acc[nameId].totalLosses += item.losses || 0;\n        acc[nameId].ratings.push(item.rating);\n        acc[nameId].users.add(item.user_name);\n        \n        return acc;\n      }, {});\n\n      // Calculate averages and other stats\n      Object.values(aggregated).forEach(stat => {\n        stat.avgRating = Math.round(\n          stat.ratings.reduce((sum, r) => sum + r, 0) / stat.ratings.length\n        );\n        stat.minRating = Math.min(...stat.ratings);\n        stat.maxRating = Math.max(...stat.ratings);\n        stat.uniqueUsers = stat.users.size;\n        delete stat.ratings; // Clean up the raw ratings array\n        delete stat.users; // Clean up the users set\n      });\n\n      setAllUsersRatings(ratingsByUser);\n      setAggregatedStats(aggregated);\n    } catch (err) {\n      console.error('Error fetching all users ratings:', err);\n    } finally {\n      setLoadingAllUsers(false);\n    }\n  };\n\n  const fetchHiddenNames = async () => {\n    try {\n      const { data, error: fetchError } = await supabase\n        .from('hidden_names')\n        .select('name_id');\n      \n      if (fetchError) throw fetchError;\n      \n      setHiddenNames(new Set(data.map(item => item.name_id)));\n    } catch (err) {\n      console.error('Error fetching hidden names:', err);\n    }\n  };\n\n  const handleToggleNameVisibility = async (nameId) => {\n    try {\n      if (hiddenNames.has(nameId)) {\n        // Unhide name\n        await supabase\n          .from('hidden_names')\n          .delete()\n          .eq('name_id', nameId);\n        \n        const newHiddenNames = new Set(hiddenNames);\n        newHiddenNames.delete(nameId);\n        setHiddenNames(newHiddenNames);\n      } else {\n        // Hide name\n        await supabase\n          .from('hidden_names')\n          .insert([{ name_id: nameId }]);\n        \n        const newHiddenNames = new Set(hiddenNames);\n        newHiddenNames.add(nameId);\n        setHiddenNames(newHiddenNames);\n      }\n      \n      // Refresh both the ratings and the names list\n      fetchAllUsersRatings();\n    } catch (err) {\n      console.error('Error toggling name visibility:', err);\n    }\n  };\n\n  const handleSort = (key) => {\n    setSortConfig(prevConfig => ({\n      key,\n      direction: prevConfig.key === key && prevConfig.direction === 'desc' ? 'asc' : 'desc'\n    }));\n  };\n\n  const getSortedAggregatedStats = () => {\n    const stats = Object.values(aggregatedStats);\n    const sortedStats = stats.sort((a, b) => {\n      const aValue = a[sortConfig.key];\n      const bValue = b[sortConfig.key];\n      const modifier = sortConfig.direction === 'asc' ? 1 : -1;\n      \n      if (typeof aValue === 'number') {\n        return (aValue - bValue) * modifier;\n      }\n      return aValue.localeCompare(bValue) * modifier;\n    });\n\n    // Separate hidden and active names\n    return {\n      active: sortedStats.filter(stat => !hiddenNames.has(stat.id)),\n      hidden: sortedStats.filter(stat => hiddenNames.has(stat.id))\n    };\n  };\n\n  // Add a helper function to format dates\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n\n  const handleDeleteUser = async (userNameToDelete) => {\n    if (!isAdmin) return;\n    \n    try {\n      setDeleteStatus({ loading: true, error: null });\n      \n      // Delete user's ratings\n      const { error: ratingsError } = await supabase\n        .from('cat_name_ratings')\n        .delete()\n        .eq('user_name', userNameToDelete);\n      \n      if (ratingsError) throw ratingsError;\n\n      // Delete user's tournament progress\n      const { error: progressError } = await supabase\n        .from('tournament_progress')\n        .delete()\n        .eq('user_name', userNameToDelete);\n      \n      if (progressError) throw progressError;\n\n      // Refresh data\n      await fetchAllUsersRatings();\n      \n      // Reset state\n      setShowDeleteConfirm(false);\n      setUserToDelete(null);\n      setDeleteStatus({ loading: false, error: null });\n\n      // If the deleted user was selected, reset to admin's view\n      if (selectedUser === userNameToDelete) {\n        setSelectedUser(userName);\n      }\n    } catch (err) {\n      console.error('Error deleting user:', err);\n      setDeleteStatus({ loading: false, error: err.message });\n    }\n  };\n\n  const copyResultsToClipboard = () => {\n    const sortedNames = [...currentRatings]\n      .sort((a, b) => (b.rating || 1500) - (a.rating || 1500))\n      .map(name => name.name)\n      .join('\\n');\n\n    const today = new Date();\n    const formattedDate = today.toLocaleDateString('en-US', { \n      weekday: 'short', \n      month: 'short', \n      day: 'numeric' \n    });\n\n    const textToCopy = `Title: ${formattedDate} Cat Names 🐈‍⬛\\nDescription: Cat Name Tournament Results\\n\\n${sortedNames}`;\n    \n    navigator.clipboard.writeText(textToCopy).then(() => {\n      setShowCopyToast(true);\n      setTimeout(() => setShowCopyToast(false), 3000);\n    });\n  };\n\n  if (loading || loadingAllUsers) return (\n    <div className=\"profile container\">\n      <div className=\"loading-spinner\"></div>\n      <p className=\"subtitle\">Loading profile data...</p>\n    </div>\n  );\n  \n  if (error) return (\n    <div className=\"profile container\">\n      <span className=\"error-icon\">⚠️</span>\n      <p className=\"subtitle\">Error loading profile: {error.message}</p>\n    </div>\n  );\n\n  const currentRatings = isAdmin && selectedUser !== userName \n    ? allUsersRatings[selectedUser] || []\n    : ratings;\n\n  const totalNames = currentRatings.length;\n  const averageRating = totalNames > 0 \n    ? Math.round(currentRatings.reduce((sum, r) => sum + (r.rating || 1500), 0) / totalNames) \n    : 0;\n  const totalMatches = currentRatings.reduce((sum, r) => sum + (r.wins || 0) + (r.losses || 0), 0);\n  \n  const topNames = [...currentRatings]\n    .sort((a, b) => (b.rating || 1500) - (a.rating || 1500))\n    .slice(0, 5);\n\n  return (\n    <div className=\"profile-container\">\n      <header className=\"profile-header\">\n        <div className=\"profile-title\">\n          <h2>\n            <span className=\"profile-emoji\">😺</span>\n            {isAdmin ? 'Admin Dashboard' : `${userName}'s Profile`}\n          </h2>\n          {isAdmin && (\n            <div className=\"admin-controls\">\n              <div className=\"view-controls\">\n                <button \n                  className={`view-button ${viewMode === 'individual' ? 'active' : ''}`}\n                  onClick={() => setViewMode('individual')}\n                >\n                  Individual View\n                </button>\n                <button \n                  className={`view-button ${viewMode === 'aggregated' ? 'active' : ''}`}\n                  onClick={() => setViewMode('aggregated')}\n                >\n                  Aggregated View\n                </button>\n              </div>\n              <button \n                onClick={copyResultsToClipboard}\n                className=\"action-button secondary-button\"\n                title=\"Copy ranked names to clipboard\"\n              >\n                📋 Copy Results\n              </button>\n              <button \n                onClick={fetchAllUsersRatings} \n                className=\"action-button secondary-button\"\n              >\n                🔄 Refresh Data\n              </button>\n              {showCopyToast && (\n                <div className=\"toast success\">\n                  Results copied to clipboard!\n                </div>\n              )}\n              {viewMode === 'individual' && (\n                <>\n                  <div className=\"user-switcher\">\n                    <button\n                      className={`user-avatar ${selectedUser === userName ? 'active' : ''}`}\n                      onClick={() => setSelectedUser(userName)}\n                      title=\"Your Profile\"\n                    >\n                      👤 You\n                    </button>\n                    {Object.keys(allUsersRatings)\n                      .filter(user => user !== userName)\n                      .sort()\n                      .map(user => (\n                        <button\n                          key={user}\n                          className={`user-avatar ${selectedUser === user ? 'active' : ''}`}\n                          onClick={() => setSelectedUser(user)}\n                          title={`View ${user}'s profile`}\n                        >\n                          👤 {user}\n                        </button>\n                      ))\n                    }\n                  </div>\n                  <div className=\"user-controls\">\n                    {selectedUser !== userName && (\n                      <button\n                        onClick={() => {\n                          setUserToDelete(selectedUser);\n                          setShowDeleteConfirm(true);\n                        }}\n                        className=\"action-button danger-button\"\n                        title=\"Delete this user's data\"\n                      >\n                        🗑️ Delete User Data\n                      </button>\n                    )}\n                  </div>\n                </>\n              )}\n              {/* Delete Confirmation Modal */}\n              {showDeleteConfirm && (\n                <div className=\"modal-overlay\">\n                  <div className=\"modal-content\">\n                    <h3>⚠️ Delete User Data</h3>\n                    <p>Are you sure you want to delete all data for user <strong>{userToDelete}</strong>?</p>\n                    <p className=\"warning-text\">This action cannot be undone!</p>\n                    \n                    {deleteStatus.error && (\n                      <div className=\"error-message\">\n                        Error: {deleteStatus.error}\n                      </div>\n                    )}\n                    \n                    <div className=\"modal-actions\">\n                      <button\n                        onClick={() => handleDeleteUser(userToDelete)}\n                        className=\"action-button danger-button\"\n                        disabled={deleteStatus.loading}\n                      >\n                        {deleteStatus.loading ? 'Deleting...' : 'Yes, Delete User Data'}\n                      </button>\n                      <button\n                        onClick={() => {\n                          setShowDeleteConfirm(false);\n                          setUserToDelete(null);\n                          setDeleteStatus({ loading: false, error: null });\n                        }}\n                        className=\"action-button secondary-button\"\n                        disabled={deleteStatus.loading}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n          {!isAdmin && (\n            <p className=\"profile-subtitle\">Cat Name Connoisseur</p>\n          )}\n        </div>\n        <button \n          onClick={onStartNewTournament}\n          className=\"action-button primary-button\"\n        >\n          <span className=\"button-icon\">🏆</span>\n          Start New Tournament\n        </button>\n      </header>\n\n      {viewMode === 'individual' ? (\n        <>\n          <div className=\"stats-grid\">\n            <div className=\"stat-card\">\n              <h3>\n                <span className=\"card-icon\">📊</span>\n                Overview\n              </h3>\n              <div className=\"stat-grid\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Names Rated</span>\n                  <span className=\"stat-value\">{totalNames}</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Total Matches</span>\n                  <span className=\"stat-value\">{totalMatches}</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Average Rating</span>\n                  <span className=\"stat-value\">{averageRating}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stat-card\">\n              <h3>\n                <span className=\"card-icon\">🏅</span>\n                Top 5 Names\n              </h3>\n              {topNames.length > 0 ? (\n                <ol className=\"top-names-list\">\n                  {topNames.map((name, index) => (\n                    <li key={name.id} className=\"top-name-item\">\n                      <div className=\"rank-badge\">{index + 1}</div>\n                      <div className=\"name-details\">\n                        <span className=\"name-text\">{name.name}</span>\n                        <div className=\"name-stats\">\n                          <span className=\"rating-badge\">\n                            {Math.round(name.rating || 1500)}\n                          </span>\n                          <span className=\"record-text\">\n                            W: {name.wins || 0} L: {name.losses || 0}\n                          </span>\n                        </div>\n                      </div>\n                    </li>\n                  ))}\n                </ol>\n              ) : (\n                <p className=\"subtitle\">No names rated yet</p>\n              )}\n            </div>\n          </div>\n\n          <div className=\"ratings-sections\">\n            <section className=\"active-names-section\">\n              <h3 className=\"section-title\">\n                <span className=\"section-icon\">🎯</span>\n                Active Names\n              </h3>\n              <div className=\"ratings-grid\">\n                {currentRatings\n                  .filter(name => !hiddenNames.has(name.id))\n                  .map(name => (\n                    <div key={name.id} className=\"rating-card\">\n                      <div className=\"rating-card-header\">\n                        <h4 className=\"name\">{name.name}</h4>\n                        {isAdmin && (\n                          <button\n                            onClick={() => handleToggleNameVisibility(name.id)}\n                            className=\"visibility-toggle\"\n                            title=\"Click to hide this name from tournaments\"\n                          >\n                            👁️\n                          </button>\n                        )}\n                      </div>\n                      <div className=\"stats\">\n                        <div className=\"stat\">\n                          <span className=\"stat-number\">{Math.round(name.rating || 1500)}</span>\n                          <span className=\"stat-text\">Rating</span>\n                        </div>\n                        <div className=\"stat\">\n                          <span className=\"stat-number\">{name.wins || 0}</span>\n                          <span className=\"stat-text\">Wins</span>\n                        </div>\n                        <div className=\"stat\">\n                          <span className=\"stat-number\">{name.losses || 0}</span>\n                          <span className=\"stat-text\">Losses</span>\n                        </div>\n                      </div>\n                      <div className=\"timestamps\">\n                        <div className=\"timestamp\">\n                          <span className=\"timestamp-label\">Last Updated:</span>\n                          <span className=\"timestamp-value\">{formatDate(name.updated_at)}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </section>\n\n            {currentRatings.some(name => hiddenNames.has(name.id)) && (\n              <section className=\"hidden-names-section\">\n                <h3 className=\"section-title\">\n                  <span className=\"section-icon\">🚫</span>\n                  Hidden Names\n                </h3>\n                <div className=\"ratings-grid\">\n                  {currentRatings\n                    .filter(name => hiddenNames.has(name.id))\n                    .map(name => (\n                      <div key={name.id} className=\"rating-card is-hidden\">\n                        <div className=\"rating-card-header\">\n                          <h4 className=\"name\">{name.name}</h4>\n                          {isAdmin && (\n                            <button\n                              onClick={() => handleToggleNameVisibility(name.id)}\n                              className=\"visibility-toggle hidden\"\n                              title=\"Click to show this name in tournaments\"\n                            >\n                              🚫\n                            </button>\n                          )}\n                        </div>\n                        <div className=\"stats\">\n                          <div className=\"stat\">\n                            <span className=\"stat-number\">{Math.round(name.rating || 1500)}</span>\n                            <span className=\"stat-text\">Rating</span>\n                          </div>\n                          <div className=\"stat\">\n                            <span className=\"stat-number\">{name.wins || 0}</span>\n                            <span className=\"stat-text\">Wins</span>\n                          </div>\n                          <div className=\"stat\">\n                            <span className=\"stat-number\">{name.losses || 0}</span>\n                            <span className=\"stat-text\">Losses</span>\n                          </div>\n                        </div>\n                        <div className=\"timestamps\">\n                          <div className=\"timestamp\">\n                            <span className=\"timestamp-label\">Last Updated:</span>\n                            <span className=\"timestamp-value\">{formatDate(name.updated_at)}</span>\n                          </div>\n                        </div>\n                        <div className=\"hidden-status\">\n                          <p className=\"hidden-text\">This name is hidden from tournaments</p>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </section>\n            )}\n          </div>\n        </>\n      ) : (\n        <div className=\"aggregated-view\">\n          <div className=\"aggregated-stats-header\">\n            <h3>Aggregated Name Statistics</h3>\n            <div className=\"sort-controls\">\n              <span>Sort by:</span>\n              <button \n                onClick={() => handleSort('avgRating')}\n                className={sortConfig.key === 'avgRating' ? 'active' : ''}\n              >\n                Average Rating {sortConfig.key === 'avgRating' && (sortConfig.direction === 'desc' ? '↓' : '↑')}\n              </button>\n              <button \n                onClick={() => handleSort('totalRatings')}\n                className={sortConfig.key === 'totalRatings' ? 'active' : ''}\n              >\n                Times Rated {sortConfig.key === 'totalRatings' && (sortConfig.direction === 'desc' ? '↓' : '↑')}\n              </button>\n              <button \n                onClick={() => handleSort('name')}\n                className={sortConfig.key === 'name' ? 'active' : ''}\n              >\n                Name {sortConfig.key === 'name' && (sortConfig.direction === 'desc' ? '↓' : '↑')}\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"aggregated-sections\">\n            <section className=\"active-names-section\">\n              <h3 className=\"section-title\">\n                <span className=\"section-icon\">🎯</span>\n                Active Names\n              </h3>\n              <div className=\"aggregated-stats-grid\">\n                {getSortedAggregatedStats().active.map(stat => (\n                  <div key={stat.id} className=\"aggregated-stat-card\">\n                    <div className=\"stat-card-header\">\n                      <h4 className=\"name\">{stat.name}</h4>\n                      {stat.description && (\n                        <div className=\"name-description\" title={stat.description}>\n                          ℹ️\n                        </div>\n                      )}\n                      {isAdmin && (\n                        <button\n                          onClick={() => handleToggleNameVisibility(stat.id)}\n                          className=\"visibility-toggle\"\n                          title=\"Click to hide this name from tournaments\"\n                        >\n                          👁️\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"aggregated-stats\">\n                      <div className=\"stat-row\">\n                        <div className=\"stat\">\n                          <span className=\"stat-label\">Avg Rating</span>\n                          <span className=\"stat-value\">{stat.avgRating}</span>\n                        </div>\n                        <div className=\"stat\">\n                          <span className=\"stat-label\">Times Rated</span>\n                          <span className=\"stat-value\">{stat.totalRatings}</span>\n                        </div>\n                      </div>\n                      <div className=\"stat-row\">\n                        <div className=\"stat\">\n                          <span className=\"stat-label\">Rating Range</span>\n                          <span className=\"stat-value\">{stat.minRating} - {stat.maxRating}</span>\n                        </div>\n                        <div className=\"stat\">\n                          <span className=\"stat-label\">Unique Users</span>\n                          <span className=\"stat-value\">{stat.uniqueUsers}</span>\n                        </div>\n                      </div>\n                      <div className=\"stat-row\">\n                        <div className=\"stat\">\n                          <span className=\"stat-label\">Total W/L</span>\n                          <span className=\"stat-value\">\n                            {stat.totalWins}/{stat.totalLosses}\n                          </span>\n                        </div>\n                        <div className=\"stat\">\n                          <span className=\"stat-label\">Win Rate</span>\n                          <span className=\"stat-value\">\n                            {Math.round((stat.totalWins / (stat.totalWins + stat.totalLosses || 1)) * 100)}%\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </section>\n\n            {getSortedAggregatedStats().hidden.length > 0 && (\n              <section className=\"hidden-names-section\">\n                <h3 className=\"section-title\">\n                  <span className=\"section-icon\">🚫</span>\n                  Hidden Names\n                </h3>\n                <div className=\"aggregated-stats-grid\">\n                  {getSortedAggregatedStats().hidden.map(stat => (\n                    <div key={stat.id} className=\"aggregated-stat-card is-hidden\">\n                      <div className=\"stat-card-header\">\n                        <h4 className=\"name\">{stat.name}</h4>\n                        {stat.description && (\n                          <div className=\"name-description\" title={stat.description}>\n                            ℹ️\n                          </div>\n                        )}\n                        {isAdmin && (\n                          <button\n                            onClick={() => handleToggleNameVisibility(stat.id)}\n                            className=\"visibility-toggle hidden\"\n                            title=\"Click to show this name in tournaments\"\n                          >\n                            🚫\n                          </button>\n                        )}\n                      </div>\n                      <div className=\"aggregated-stats\">\n                        <div className=\"stat-row\">\n                          <div className=\"stat\">\n                            <span className=\"stat-label\">Avg Rating</span>\n                            <span className=\"stat-value\">{stat.avgRating}</span>\n                          </div>\n                          <div className=\"stat\">\n                            <span className=\"stat-label\">Times Rated</span>\n                            <span className=\"stat-value\">{stat.totalRatings}</span>\n                          </div>\n                        </div>\n                        <div className=\"stat-row\">\n                          <div className=\"stat\">\n                            <span className=\"stat-label\">Rating Range</span>\n                            <span className=\"stat-value\">{stat.minRating} - {stat.maxRating}</span>\n                          </div>\n                          <div className=\"stat\">\n                            <span className=\"stat-label\">Unique Users</span>\n                            <span className=\"stat-value\">{stat.uniqueUsers}</span>\n                          </div>\n                        </div>\n                        <div className=\"stat-row\">\n                          <div className=\"stat\">\n                            <span className=\"stat-label\">Total W/L</span>\n                            <span className=\"stat-value\">\n                              {stat.totalWins}/{stat.totalLosses}\n                            </span>\n                          </div>\n                          <div className=\"stat\">\n                            <span className=\"stat-label\">Win Rate</span>\n                            <span className=\"stat-value\">\n                              {Math.round((stat.totalWins / (stat.totalWins + stat.totalLosses || 1)) * 100)}%\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"hidden-status\">\n                        <p className=\"hidden-text\">This name is hidden from tournaments</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </section>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}