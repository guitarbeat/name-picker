{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../supabase/supabaseClient';\nfunction useUserSession() {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({\n      data: {\n        session: initialSession\n      }\n    }) => {\n      setSession(initialSession);\n      if (initialSession !== null && initialSession !== void 0 && initialSession.user) {\n        setUserName(initialSession.user.user_metadata.user_name || initialSession.user.email);\n        setIsLoggedIn(true);\n      }\n    });\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      if (session !== null && session !== void 0 && session.user) {\n        setUserName(session.user.user_metadata.user_name || session.user.email);\n        setIsLoggedIn(true);\n      } else {\n        setUserName('');\n        setIsLoggedIn(false);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const login = async name => {\n    if (!name || typeof name !== 'string' || name.trim() === '') {\n      throw new Error('Please enter a valid name');\n    }\n    const trimmedName = name.trim();\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithOAuth({\n        provider: 'github',\n        options: {\n          redirectTo: window.location.origin,\n          data: {\n            user_name: trimmedName\n          }\n        }\n      });\n      if (error) throw error;\n\n      // Update user metadata with the provided name\n      if (data !== null && data !== void 0 && data.user) {\n        const {\n          error: updateError\n        } = await supabase.auth.updateUser({\n          data: {\n            user_name: trimmedName\n          }\n        });\n        if (updateError) throw updateError;\n      }\n      setUserName(trimmedName);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw new Error('Login failed. Please try again.');\n    }\n  };\n  const logout = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n      setUserName('');\n      setIsLoggedIn(false);\n      setSession(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  return {\n    userName,\n    isLoggedIn,\n    login,\n    logout,\n    session\n  };\n}\n_s(useUserSession, \"wuHFiABQvd2uRVQ6ZO40vObf844=\");\nexport default useUserSession;","map":{"version":3,"names":["useState","useEffect","supabase","useUserSession","_s","userName","setUserName","isLoggedIn","setIsLoggedIn","session","setSession","auth","getSession","then","data","initialSession","user","user_metadata","user_name","email","subscription","onAuthStateChange","_event","unsubscribe","login","name","trim","Error","trimmedName","error","signInWithOAuth","provider","options","redirectTo","window","location","origin","updateError","updateUser","console","logout","signOut"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/hooks/useUserSession.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { supabase } from '../supabase/supabaseClient';\n\nfunction useUserSession() {\n  const [userName, setUserName] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session: initialSession } }) => {\n      setSession(initialSession);\n      if (initialSession?.user) {\n        setUserName(initialSession.user.user_metadata.user_name || initialSession.user.email);\n        setIsLoggedIn(true);\n      }\n    });\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      if (session?.user) {\n        setUserName(session.user.user_metadata.user_name || session.user.email);\n        setIsLoggedIn(true);\n      } else {\n        setUserName('');\n        setIsLoggedIn(false);\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const login = async (name) => {\n    if (!name || typeof name !== 'string' || name.trim() === '') {\n      throw new Error('Please enter a valid name');\n    }\n    \n    const trimmedName = name.trim();\n    \n    try {\n      const { data, error } = await supabase.auth.signInWithOAuth({\n        provider: 'github',\n        options: {\n          redirectTo: window.location.origin,\n          data: {\n            user_name: trimmedName\n          }\n        }\n      });\n\n      if (error) throw error;\n      \n      // Update user metadata with the provided name\n      if (data?.user) {\n        const { error: updateError } = await supabase.auth.updateUser({\n          data: { user_name: trimmedName }\n        });\n        \n        if (updateError) throw updateError;\n      }\n\n      setUserName(trimmedName);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw new Error('Login failed. Please try again.');\n    }\n  };\n\n  const logout = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      \n      setUserName('');\n      setIsLoggedIn(false);\n      setSession(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  return {\n    userName,\n    isLoggedIn,\n    login,\n    logout,\n    session\n  };\n}\n\nexport default useUserSession; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}