{"ast":null,"code":"import _objectSpread from\"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * @module Results\n * @description Main results component that displays the final rankings of cat names.\n * Shows the tournament results with ratings and provides option to restart.\n * \n * @example\n * <Results \n *   ratings={{ \"Whiskers\": 1450, \"Mittens\": 1380 }}\n *   onRestart={() => handleRestart()}\n * />\n * \n * @component\n * @param {Object} props\n * @param {Object} props.ratings - Object mapping cat names to their Elo ratings\n * @param {Function} props.onRestart - Callback function to restart the tournament\n * @returns {JSX.Element} Results view with rankings and restart option\n */import React,{useState,useEffect}from'react';import ResultsTable from'./ResultsTable';import RankingAdjustment from'../RankingAdjustment/RankingAdjustment';import'./Results.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Results(_ref){var _currentRankings$;let{ratings,onStartNew,userName,onUpdateRatings,currentTournamentNames}=_ref;const[currentRankings,setCurrentRankings]=useState([]);const[isLoading,setIsLoading]=useState(true);const[showToast,setShowToast]=useState(false);const[toastMessage,setToastMessage]=useState('');useEffect(()=>{// Process and sort rankings on mount\nconst processedRankings=Object.entries(ratings||{}).map(_ref2=>{let[name,rating]=_ref2;return{name,rating:Math.round(typeof rating==='number'?rating:1500),change:0// Track rating changes\n};}).sort((a,b)=>b.rating-a.rating);setCurrentRankings(processedRankings);setIsLoading(false);},[ratings]);const handleSaveAdjustments=async adjustedRankings=>{try{setIsLoading(true);// Calculate rating changes\nconst updatedRankings=adjustedRankings.map(ranking=>{const oldRanking=currentRankings.find(r=>r.name===ranking.name);return _objectSpread(_objectSpread({},ranking),{},{change:oldRanking?ranking.rating-oldRanking.rating:0});});// Convert to expected format for API\nconst newRatings=updatedRankings.map(_ref3=>{let{name,rating}=_ref3;const existingRating=ratings[name];return{name_id:existingRating===null||existingRating===void 0?void 0:existingRating.name_id,name:name,rating:Math.round(rating),wins:(existingRating===null||existingRating===void 0?void 0:existingRating.wins)||0,losses:(existingRating===null||existingRating===void 0?void 0:existingRating.losses)||0};});await onUpdateRatings(newRatings);setCurrentRankings(updatedRankings);// Show success toast\nsetToastMessage('Rankings updated successfully!');setShowToast(true);setTimeout(()=>setShowToast(false),3000);}catch(error){console.error('Failed to update rankings:',error);setToastMessage('Failed to update rankings. Please try again.');setShowToast(true);setTimeout(()=>setShowToast(false),3000);}finally{setIsLoading(false);}};if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"results-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Processing rankings...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"results-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"results-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Name Rankings\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"results-welcome\",children:[\"Welcome back, \",/*#__PURE__*/_jsx(\"span\",{className:\"user-name\",children:userName}),\"! Here are your latest name rankings.\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"results-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rankings-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Names\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:currentRankings.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top Rating\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:((_currentRankings$=currentRankings[0])===null||_currentRankings$===void 0?void 0:_currentRankings$.rating)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Average Rating\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:Math.round(currentRankings.reduce((sum,r)=>sum+r.rating,0)/currentRankings.length)})]})]}),/*#__PURE__*/_jsx(RankingAdjustment,{rankings:currentRankings,onSave:handleSaveAdjustments,onCancel:()=>{}// Empty function since we're not using cancel anymore\n}),/*#__PURE__*/_jsxs(\"div\",{className:\"results-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:onStartNew,className:\"primary-button start-new-button\",children:[/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",width:\"20\",height:\"20\",stroke:\"currentColor\",strokeWidth:\"2\",fill:\"none\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12 4v16m8-8H4\"})}),\"Start New Tournament\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"results-tip\",children:\"Starting a new tournament will let you rate more names while keeping your current rankings.\"})]})]}),showToast&&/*#__PURE__*/_jsx(\"div\",{className:\"toast \".concat(toastMessage.includes('Failed')?'error':'success'),children:toastMessage})]});}export default Results;","map":{"version":3,"names":["React","useState","useEffect","ResultsTable","RankingAdjustment","jsx","_jsx","jsxs","_jsxs","Results","_ref","_currentRankings$","ratings","onStartNew","userName","onUpdateRatings","currentTournamentNames","currentRankings","setCurrentRankings","isLoading","setIsLoading","showToast","setShowToast","toastMessage","setToastMessage","processedRankings","Object","entries","map","_ref2","name","rating","Math","round","change","sort","a","b","handleSaveAdjustments","adjustedRankings","updatedRankings","ranking","oldRanking","find","r","_objectSpread","newRatings","_ref3","existingRating","name_id","wins","losses","setTimeout","error","console","className","children","length","reduce","sum","rankings","onSave","onCancel","onClick","viewBox","width","height","stroke","strokeWidth","fill","d","concat","includes"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Results/Results.js"],"sourcesContent":["/**\n * @module Results\n * @description Main results component that displays the final rankings of cat names.\n * Shows the tournament results with ratings and provides option to restart.\n * \n * @example\n * <Results \n *   ratings={{ \"Whiskers\": 1450, \"Mittens\": 1380 }}\n *   onRestart={() => handleRestart()}\n * />\n * \n * @component\n * @param {Object} props\n * @param {Object} props.ratings - Object mapping cat names to their Elo ratings\n * @param {Function} props.onRestart - Callback function to restart the tournament\n * @returns {JSX.Element} Results view with rankings and restart option\n */\n\nimport React, { useState, useEffect } from 'react';\nimport ResultsTable from './ResultsTable';\nimport RankingAdjustment from '../RankingAdjustment/RankingAdjustment';\nimport './Results.css';\n\nfunction Results({ ratings, onStartNew, userName, onUpdateRatings, currentTournamentNames }) {\n  const [currentRankings, setCurrentRankings] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n\n  useEffect(() => {\n    // Process and sort rankings on mount\n    const processedRankings = Object.entries(ratings || {})\n      .map(([name, rating]) => ({\n        name,\n        rating: Math.round(typeof rating === 'number' ? rating : 1500),\n        change: 0 // Track rating changes\n      }))\n      .sort((a, b) => b.rating - a.rating);\n\n    setCurrentRankings(processedRankings);\n    setIsLoading(false);\n  }, [ratings]);\n\n  const handleSaveAdjustments = async (adjustedRankings) => {\n    try {\n      setIsLoading(true);\n      \n      // Calculate rating changes\n      const updatedRankings = adjustedRankings.map(ranking => {\n        const oldRanking = currentRankings.find(r => r.name === ranking.name);\n        return {\n          ...ranking,\n          change: oldRanking ? ranking.rating - oldRanking.rating : 0\n        };\n      });\n\n      // Convert to expected format for API\n      const newRatings = updatedRankings.map(({ name, rating }) => {\n        const existingRating = ratings[name];\n        return {\n          name_id: existingRating?.name_id,\n          name: name,\n          rating: Math.round(rating),\n          wins: existingRating?.wins || 0,\n          losses: existingRating?.losses || 0\n        };\n      });\n\n      await onUpdateRatings(newRatings);\n      setCurrentRankings(updatedRankings);\n      \n      // Show success toast\n      setToastMessage('Rankings updated successfully!');\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n    } catch (error) {\n      console.error('Failed to update rankings:', error);\n      setToastMessage('Failed to update rankings. Please try again.');\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"results-loading\">\n        <div className=\"loading-spinner\" />\n        <p>Processing rankings...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"results-container\">\n      <header className=\"results-header\">\n        <h2>Name Rankings</h2>\n        <p className=\"results-welcome\">\n          Welcome back, <span className=\"user-name\">{userName}</span>! \n          Here are your latest name rankings.\n        </p>\n      </header>\n\n      <div className=\"results-content\">\n        <div className=\"rankings-stats\">\n          <div className=\"stat-card\">\n            <h3>Total Names</h3>\n            <div className=\"stat-value\">{currentRankings.length}</div>\n          </div>\n          <div className=\"stat-card\">\n            <h3>Top Rating</h3>\n            <div className=\"stat-value\">\n              {currentRankings[0]?.rating || 0}\n            </div>\n          </div>\n          <div className=\"stat-card\">\n            <h3>Average Rating</h3>\n            <div className=\"stat-value\">\n              {Math.round(\n                currentRankings.reduce((sum, r) => sum + r.rating, 0) / \n                currentRankings.length\n              )}\n            </div>\n          </div>\n        </div>\n\n        <RankingAdjustment\n          rankings={currentRankings}\n          onSave={handleSaveAdjustments}\n          onCancel={() => {}} // Empty function since we're not using cancel anymore\n        />\n\n        <div className=\"results-actions\">\n          <button \n            onClick={onStartNew} \n            className=\"primary-button start-new-button\"\n          >\n            <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\">\n              <path d=\"M12 4v16m8-8H4\" />\n            </svg>\n            Start New Tournament\n          </button>\n          <p className=\"results-tip\">\n            Starting a new tournament will let you rate more names while keeping your current rankings.\n          </p>\n        </div>\n      </div>\n\n      {showToast && (\n        <div className={`toast ${toastMessage.includes('Failed') ? 'error' : 'success'}`}>\n          {toastMessage}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Results;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}