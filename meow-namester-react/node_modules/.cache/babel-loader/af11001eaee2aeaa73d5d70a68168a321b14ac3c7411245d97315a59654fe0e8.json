{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/App.js\",\n  _s = $RefreshSig$();\n/**\n * @module App\n * @description Main application component for the cat name tournament app.\n * Manages the overall application state and tournament flow, including:\n * - Name input and management\n * - Tournament progression\n * - Rating calculations\n * - Results display\n * \n * Uses the Elo rating system for ranking and a custom sorting algorithm\n * for determining the best cat name through user preferences.\n * \n * @component\n * @returns {JSX.Element} The complete application UI\n */\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { ErrorBoundary, LoadingSpinner, Results, Tournament, Bracket } from './components';\nimport useSupabaseStorage from './lib/supabase/useSupabaseStorage';\nimport useNameOptions from './lib/supabase/useNameOptions';\nimport { PreferenceSorter } from './utils/sortingAlgorithm';\nimport EloRating from './utils/EloRating';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [currentPair, setCurrentPair] = useState({\n    left: null,\n    right: null\n  });\n  const [isSorting, setIsSorting] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState([]);\n  const [sorter, setSorter] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [totalComparisons, setTotalComparisons] = useState(0);\n  const [ratings, setRatings] = useSupabaseStorage('cat_names', []);\n  const [newOption, setNewOption] = useState('');\n  const elo = useMemo(() => new EloRating(), []);\n  const [matches, setMatches] = useState([]);\n  const [addingName, setAddingName] = useState(false);\n  const [addNameError, setAddNameError] = useState(null);\n  const [subsetSize, setSubsetSize] = useState(8); // Default to 8 names\n  const [isOptionsExpanded, setIsOptionsExpanded] = useState(false);\n\n  // Replace nameOptions state with useNameOptions hook\n  const {\n    nameOptions,\n    loading: optionsLoading,\n    error: optionsError,\n    addNameOption,\n    removeNameOption\n  } = useNameOptions();\n  const getRandomSubset = (array, size) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, size);\n  };\n  const handleChoice = useCallback(choice => {\n    if (!window.resolveComparison) {\n      return;\n    }\n    const {\n      left,\n      right\n    } = currentPair;\n    const leftCat = ratings.find(cat => cat.name === left) || {\n      name: left,\n      rating: elo.defaultRating\n    };\n    const rightCat = ratings.find(cat => cat.name === right) || {\n      name: right,\n      rating: elo.defaultRating\n    };\n    const newRatings = elo.calculateNewRatings(leftCat.rating, rightCat.rating, choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n    const updatedRatings = ratings.filter(cat => cat.name !== left && cat.name !== right);\n    updatedRatings.push({\n      name: left,\n      rating: newRatings.newRatingA\n    }, {\n      name: right,\n      rating: newRatings.newRatingB\n    });\n    setRatings(updatedRatings);\n    setMatches(prev => [...prev, {\n      id: prev.length + 1,\n      name1: left,\n      name2: right,\n      winner: choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2\n    }]);\n    window.resolveComparison(choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n  }, [currentPair, ratings, elo]);\n  const addNewOption = async () => {\n    if (newOption.trim() === '') {\n      return;\n    }\n    setAddingName(true);\n    setAddNameError(null);\n    try {\n      await addNameOption(newOption.trim());\n      const newCat = {\n        name: newOption.trim(),\n        rating: elo.defaultRating\n      };\n      setRatings(prev => [...prev, newCat]);\n      setNewOption('');\n    } catch (error) {\n      console.error('Error adding name:', error);\n      setAddNameError('Failed to add name. Please try again.');\n    } finally {\n      setAddingName(false);\n    }\n  };\n  const handleStart = async () => {\n    if (userName.trim() === '') {\n      alert('Please enter your name to start the quiz.');\n      return;\n    }\n    if (nameOptions.length < 2) {\n      alert('Not enough options to start sorting.');\n      return;\n    }\n\n    // Use either all names or a random subset based on subsetSize\n    const namesToUse = subsetSize >= nameOptions.length ? nameOptions : getRandomSubset(nameOptions, subsetSize);\n    const newSorter = new PreferenceSorter(namesToUse);\n    setSorter(newSorter);\n    setIsSorting(true);\n    const n = namesToUse.length;\n    const estimatedComparisons = Math.ceil(n * Math.log2(n));\n    setTotalComparisons(estimatedComparisons);\n    setProgress(0);\n    try {\n      let comparisons = 0;\n      const sortedResults = await newSorter.sort(async (a, b) => {\n        setCurrentPair({\n          left: a,\n          right: b\n        });\n        comparisons++;\n        setProgress(Math.floor(comparisons / estimatedComparisons * 100));\n        return new Promise(resolve => {\n          window.resolveComparison = resolve;\n        });\n      });\n      setResults(sortedResults);\n      setShowResults(true);\n      setIsSorting(false);\n    } catch (error) {\n      console.error('Sorting error:', error);\n    }\n  };\n  const handleRedo = () => {\n    setCurrentPair({\n      left: null,\n      right: null\n    });\n    setIsSorting(false);\n    setShowResults(false);\n    setResults([]);\n    setSorter(null);\n    setMatches([]);\n  };\n  const sortedResults = showResults ? results.map(name => {\n    const cat = ratings.find(r => r.name === name) || {\n      name,\n      rating: elo.defaultRating\n    };\n    return cat;\n  }).sort((a, b) => b.rating - a.rating) : [];\n  if (optionsLoading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 30\n  }, this);\n  if (optionsError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading name options: \", optionsError.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#main\",\n        className: \"skip-link\",\n        children: \"Skip to main content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cat-gif-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/cat.gif\",\n            alt: \"Cute cat animation\",\n            className: \"cat-gif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Help Me Name My Cat!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to the ultimate cat name sorter! Help decide the perfect name through fun matchups.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"main\",\n        children: [!isSorting && !showResults && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"setup-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userName\",\n              children: \"Your Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"userName\",\n              value: userName,\n              onChange: e => setUserName(e.target.value),\n              placeholder: \"Enter your name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tournament-setup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Tournament Setup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setup-controls\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subset-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"subsetSize\",\n                  children: \"Number of Names to Compare:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"subsetSize\",\n                  value: subsetSize,\n                  onChange: e => setSubsetSize(Number(e.target.value)),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 8,\n                    children: \"8 Names (Quick)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 16,\n                    children: \"16 Names (Medium)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 32,\n                    children: \"32 Names (Long)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 999,\n                    children: [\"All Names (\", nameOptions.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"setup-info\",\n                  children: subsetSize >= nameOptions.length ? `Comparing all ${nameOptions.length} names (${Math.ceil(nameOptions.length * Math.log2(nameOptions.length))} comparisons)` : `Comparing ${subsetSize} random names (${Math.ceil(subsetSize * Math.log2(subsetSize))} comparisons)`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-management\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"toggle-options-button\",\n              onClick: () => setIsOptionsExpanded(!isOptionsExpanded),\n              \"aria-expanded\": isOptionsExpanded,\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Name Options \", isOptionsExpanded ? '▼' : '▶']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `collapsible-content ${isOptionsExpanded ? 'expanded' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newOption,\n                  onChange: e => setNewOption(e.target.value),\n                  placeholder: \"Add a new name option\",\n                  disabled: addingName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: addNewOption,\n                  disabled: addingName || !newOption.trim(),\n                  children: addingName ? 'Adding...' : 'Add Name'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), addNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: addNameError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"options-list\",\n                children: nameOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"option-item\",\n                  children: [option, /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => removeNameOption(option),\n                    className: \"remove-button\",\n                    \"aria-label\": `Remove ${option}`,\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: handleStart,\n            disabled: nameOptions.length < 2 || userName.trim() === '',\n            children: \"Start Sorting!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), isSorting && /*#__PURE__*/_jsxDEV(Tournament, {\n          currentMatch: currentPair,\n          onVote: handleChoice,\n          roundNumber: 1,\n          totalMatches: totalComparisons,\n          currentMatchNumber: Math.floor(progress / 100 * totalComparisons)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), showResults && /*#__PURE__*/_jsxDEV(Results, {\n          results: sortedResults,\n          onRedo: handleRedo,\n          matches: matches\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0gp+qElp0NbNMN3f5wbdn6uD0iM=\", false, function () {\n  return [useSupabaseStorage, useNameOptions];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","ErrorBoundary","LoadingSpinner","Results","Tournament","Bracket","useSupabaseStorage","useNameOptions","PreferenceSorter","EloRating","jsxDEV","_jsxDEV","App","_s","userName","setUserName","currentPair","setCurrentPair","left","right","isSorting","setIsSorting","showResults","setShowResults","results","setResults","sorter","setSorter","progress","setProgress","totalComparisons","setTotalComparisons","ratings","setRatings","newOption","setNewOption","elo","matches","setMatches","addingName","setAddingName","addNameError","setAddNameError","subsetSize","setSubsetSize","isOptionsExpanded","setIsOptionsExpanded","nameOptions","loading","optionsLoading","error","optionsError","addNameOption","removeNameOption","getRandomSubset","array","size","shuffled","sort","Math","random","slice","handleChoice","choice","window","resolveComparison","leftCat","find","cat","name","rating","defaultRating","rightCat","newRatings","calculateNewRatings","updatedRatings","filter","push","newRatingA","newRatingB","prev","id","length","name1","name2","winner","addNewOption","trim","newCat","console","handleStart","alert","namesToUse","newSorter","n","estimatedComparisons","ceil","log2","comparisons","sortedResults","a","b","floor","Promise","resolve","handleRedo","map","r","fileName","_jsxFileName","lineNumber","columnNumber","children","message","className","href","src","alt","htmlFor","type","value","onChange","e","target","placeholder","required","Number","onClick","disabled","option","index","currentMatch","onVote","roundNumber","totalMatches","currentMatchNumber","onRedo","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/App.js"],"sourcesContent":["/**\n * @module App\n * @description Main application component for the cat name tournament app.\n * Manages the overall application state and tournament flow, including:\n * - Name input and management\n * - Tournament progression\n * - Rating calculations\n * - Results display\n * \n * Uses the Elo rating system for ranking and a custom sorting algorithm\n * for determining the best cat name through user preferences.\n * \n * @component\n * @returns {JSX.Element} The complete application UI\n */\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport {\n  ErrorBoundary,\n  LoadingSpinner,\n  Results,\n  Tournament,\n  Bracket\n} from './components';\nimport useSupabaseStorage from './lib/supabase/useSupabaseStorage';\nimport useNameOptions from './lib/supabase/useNameOptions';\nimport { PreferenceSorter } from './utils/sortingAlgorithm';\nimport EloRating from './utils/EloRating';\nimport './index.css';\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [currentPair, setCurrentPair] = useState({ left: null, right: null });\n  const [isSorting, setIsSorting] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState([]);\n  const [sorter, setSorter] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [totalComparisons, setTotalComparisons] = useState(0);\n  const [ratings, setRatings] = useSupabaseStorage('cat_names', []);\n  const [newOption, setNewOption] = useState('');\n  const elo = useMemo(() => new EloRating(), []);\n  const [matches, setMatches] = useState([]);\n  const [addingName, setAddingName] = useState(false);\n  const [addNameError, setAddNameError] = useState(null);\n  const [subsetSize, setSubsetSize] = useState(8); // Default to 8 names\n  const [isOptionsExpanded, setIsOptionsExpanded] = useState(false);\n  \n  // Replace nameOptions state with useNameOptions hook\n  const { \n    nameOptions, \n    loading: optionsLoading, \n    error: optionsError,\n    addNameOption,\n    removeNameOption \n  } = useNameOptions();\n\n  const getRandomSubset = (array, size) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, size);\n  };\n\n  const handleChoice = useCallback((choice) => {\n    if (!window.resolveComparison) {\n      return;\n    }\n    \n    const {left, right} = currentPair;\n    const leftCat = ratings.find(cat => cat.name === left) || { name: left, rating: elo.defaultRating };\n    const rightCat = ratings.find(cat => cat.name === right) || { name: right, rating: elo.defaultRating };\n    \n    const newRatings = elo.calculateNewRatings(leftCat.rating, rightCat.rating, choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n    \n    const updatedRatings = ratings.filter(cat => cat.name !== left && cat.name !== right);\n    updatedRatings.push(\n      { name: left, rating: newRatings.newRatingA },\n      { name: right, rating: newRatings.newRatingB }\n    );\n    \n    setRatings(updatedRatings);\n\n    setMatches(prev => [...prev, {\n      id: prev.length + 1,\n      name1: left,\n      name2: right,\n      winner: choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2\n    }]);\n\n    window.resolveComparison(choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n  }, [currentPair, ratings, elo]);\n\n  const addNewOption = async () => {\n    if (newOption.trim() === '') {\n      return;\n    }\n    \n    setAddingName(true);\n    setAddNameError(null);\n    \n    try {\n      await addNameOption(newOption.trim());\n      const newCat = { name: newOption.trim(), rating: elo.defaultRating };\n      setRatings(prev => [...prev, newCat]);\n      setNewOption('');\n    } catch (error) {\n      console.error('Error adding name:', error);\n      setAddNameError('Failed to add name. Please try again.');\n    } finally {\n      setAddingName(false);\n    }\n  };\n\n  const handleStart = async () => {\n    if (userName.trim() === '') {\n      alert('Please enter your name to start the quiz.');\n      return;\n    }\n    if (nameOptions.length < 2) {\n      alert('Not enough options to start sorting.');\n      return;\n    }\n\n    // Use either all names or a random subset based on subsetSize\n    const namesToUse = subsetSize >= nameOptions.length \n      ? nameOptions \n      : getRandomSubset(nameOptions, subsetSize);\n\n    const newSorter = new PreferenceSorter(namesToUse);\n    setSorter(newSorter);\n    setIsSorting(true);\n    const n = namesToUse.length;\n    const estimatedComparisons = Math.ceil(n * Math.log2(n));\n    setTotalComparisons(estimatedComparisons);\n    setProgress(0);\n    \n    try {\n      let comparisons = 0;\n      const sortedResults = await newSorter.sort(async (a, b) => {\n        setCurrentPair({ left: a, right: b });\n        comparisons++;\n        setProgress(Math.floor((comparisons / estimatedComparisons) * 100));\n        return new Promise((resolve) => {\n          window.resolveComparison = resolve;\n        });\n      });\n      setResults(sortedResults);\n      setShowResults(true);\n      setIsSorting(false);\n    } catch (error) {\n      console.error('Sorting error:', error);\n    }\n  };\n\n  const handleRedo = () => {\n    setCurrentPair({ left: null, right: null });\n    setIsSorting(false);\n    setShowResults(false);\n    setResults([]);\n    setSorter(null);\n    setMatches([]);\n  };\n\n  const sortedResults = showResults ? \n    results.map(name => {\n      const cat = ratings.find(r => r.name === name) || { name, rating: elo.defaultRating };\n      return cat;\n    }).sort((a, b) => b.rating - a.rating) : [];\n\n  if (optionsLoading) return <LoadingSpinner />;\n  if (optionsError) return <div>Error loading name options: {optionsError.message}</div>;\n\n  return (\n    <ErrorBoundary>\n      <div className=\"App\">\n        <a href=\"#main\" className=\"skip-link\">\n          Skip to main content\n        </a>\n        <header className=\"App-header\">\n          <div className=\"cat-gif-container\">\n            <img \n              src=\"/images/cat.gif\" \n              alt=\"Cute cat animation\" \n              className=\"cat-gif\"\n            />\n          </div>\n          <h1>Help Me Name My Cat!</h1>\n          <p>Welcome to the ultimate cat name sorter! Help decide the perfect name through fun matchups.</p>\n        </header>\n\n        <main id=\"main\">\n          {!isSorting && !showResults && (\n            <section className=\"setup-section\">\n              <div className=\"user-input\">\n                <label htmlFor=\"userName\">Your Name:</label>\n                <input \n                  type=\"text\" \n                  id=\"userName\" \n                  value={userName} \n                  onChange={(e) => setUserName(e.target.value)} \n                  placeholder=\"Enter your name\" \n                  required \n                />\n              </div>\n\n              <div className=\"tournament-setup\">\n                <h2>Tournament Setup</h2>\n                <div className=\"setup-controls\">\n                  <div className=\"subset-control\">\n                    <label htmlFor=\"subsetSize\">Number of Names to Compare:</label>\n                    <select \n                      id=\"subsetSize\" \n                      value={subsetSize} \n                      onChange={(e) => setSubsetSize(Number(e.target.value))}\n                    >\n                      <option value={8}>8 Names (Quick)</option>\n                      <option value={16}>16 Names (Medium)</option>\n                      <option value={32}>32 Names (Long)</option>\n                      <option value={999}>All Names ({nameOptions.length})</option>\n                    </select>\n                    <p className=\"setup-info\">\n                      {subsetSize >= nameOptions.length \n                        ? `Comparing all ${nameOptions.length} names (${Math.ceil(nameOptions.length * Math.log2(nameOptions.length))} comparisons)`\n                        : `Comparing ${subsetSize} random names (${Math.ceil(subsetSize * Math.log2(subsetSize))} comparisons)`}\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"options-management\">\n                <button \n                  className=\"toggle-options-button\"\n                  onClick={() => setIsOptionsExpanded(!isOptionsExpanded)}\n                  aria-expanded={isOptionsExpanded}\n                >\n                  <h2>Name Options {isOptionsExpanded ? '▼' : '▶'}</h2>\n                </button>\n                \n                <div className={`collapsible-content ${isOptionsExpanded ? 'expanded' : ''}`}>\n                  <div className=\"add-option\">\n                    <input\n                      type=\"text\"\n                      value={newOption}\n                      onChange={(e) => setNewOption(e.target.value)}\n                      placeholder=\"Add a new name option\"\n                      disabled={addingName}\n                    />\n                    <button \n                      onClick={addNewOption}\n                      disabled={addingName || !newOption.trim()}\n                    >\n                      {addingName ? 'Adding...' : 'Add Name'}\n                    </button>\n                  </div>\n                  {addNameError && (\n                    <div className=\"error-message\">\n                      {addNameError}\n                    </div>\n                  )}\n                  <div className=\"options-list\">\n                    {nameOptions.map((option, index) => (\n                      <div key={index} className=\"option-item\">\n                        {option}\n                        <button \n                          onClick={() => removeNameOption(option)}\n                          className=\"remove-button\"\n                          aria-label={`Remove ${option}`}\n                        >\n                          ×\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n\n              <button \n                className=\"primary-button\"\n                onClick={handleStart}\n                disabled={nameOptions.length < 2 || userName.trim() === ''}\n              >\n                Start Sorting!\n              </button>\n            </section>\n          )}\n\n          {isSorting && (\n            <Tournament\n              currentMatch={currentPair}\n              onVote={handleChoice}\n              roundNumber={1}\n              totalMatches={totalComparisons}\n              currentMatchNumber={Math.floor((progress / 100) * totalComparisons)}\n            />\n          )}\n\n          {showResults && (\n            <Results \n              results={sortedResults}\n              onRedo={handleRedo}\n              matches={matches}\n            />\n          )}\n        </main>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}