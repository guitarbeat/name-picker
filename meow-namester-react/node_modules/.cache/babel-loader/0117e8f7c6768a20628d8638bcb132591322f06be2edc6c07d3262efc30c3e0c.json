{"ast":null,"code":"import _objectSpread from\"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * @module App\n * @description Main application component for the cat name tournament app.\n * Manages the overall application state and tournament flow, including:\n * - Name input and management\n * - Tournament progression\n * - Rating calculations\n * - Results display\n * \n * Uses the Elo rating system for ranking and a custom sorting algorithm\n * for determining the best cat name through user preferences.\n * \n * @component\n * @returns {JSX.Element} The complete application UI\n */import React,{useState,useEffect,useCallback,useMemo}from'react';import{ErrorBoundary,LoadingSpinner,Results,Tournament,Bracket}from'./components';import useLocalStorage from'./hooks/useLocalStorage';import{PreferenceSorter}from'./utils/sortingAlgorithm';import EloRating from'./utils/EloRating';import'./index.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[userName,setUserName]=useState('');const[nameOptions,setNameOptions]=useState([]);const[currentPair,setCurrentPair]=useState({left:null,right:null});const[isSorting,setIsSorting]=useState(false);const[showResults,setShowResults]=useState(false);const[results,setResults]=useState([]);const[sorter,setSorter]=useState(null);const[progress,setProgress]=useState(0);const[totalComparisons,setTotalComparisons]=useState(0);const[isLoading,setIsLoading]=useState(true);const[ratings,setRatings]=useLocalStorage('catNameRatings',{});const[newOption,setNewOption]=useState('');const elo=useMemo(()=>new EloRating(),[]);const[matches,setMatches]=useState([]);useEffect(()=>{const fetchOptions=async()=>{setIsLoading(true);try{const response=await fetch('/options.txt');if(!response.ok){throw new Error('Network response was not ok');}const data=await response.text();const optionsArray=data.split('\\n').filter(option=>option.trim()!=='');if(optionsArray.length>1){setNameOptions(shuffleArray(optionsArray));}else{console.error('Insufficient options to perform sorting.');}setIsLoading(false);}catch(error){console.error('Error loading options:',error);setIsLoading(false);}};fetchOptions();},[]);const addNewOption=()=>{if(newOption.trim()===''){return;}setNameOptions(prev=>[...prev,newOption.trim()]);setRatings(prev=>_objectSpread(_objectSpread({},prev),{},{[newOption.trim()]:elo.defaultRating}));setNewOption('');};const handleChoice=useCallback(choice=>{if(!window.resolveComparison){return;}const{left,right}=currentPair;const ratingLeft=ratings[left]||elo.defaultRating;const ratingRight=ratings[right]||elo.defaultRating;const newRatings=elo.calculateNewRatings(ratingLeft,ratingRight,choice==='left'?-1:choice==='right'?1:choice==='both'?0:2);setRatings(prev=>_objectSpread(_objectSpread({},prev),{},{[left]:newRatings.newRatingA,[right]:newRatings.newRatingB}));setMatches(prev=>[...prev,{id:prev.length+1,name1:left,name2:right,winner:choice==='left'?-1:choice==='right'?1:choice==='both'?0:2}]);window.resolveComparison(choice==='left'?-1:choice==='right'?1:choice==='both'?0:2);},[currentPair,ratings,elo]);useEffect(()=>{const handleKeyPress=event=>{if(!isSorting){return;}switch(event.key){case'ArrowLeft':handleChoice('left');break;case'ArrowRight':handleChoice('right');break;case'b':case'B':handleChoice('both');break;case'n':case'N':handleChoice('none');break;default:break;}};window.addEventListener('keydown',handleKeyPress);return()=>window.removeEventListener('keydown',handleKeyPress);},[isSorting,handleChoice]);useEffect(()=>{if(isSorting){const handleTabKey=e=>{if(e.key==='Tab'){const focusableElements=document.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');const firstFocusableElement=focusableElements[0];const lastFocusableElement=focusableElements[focusableElements.length-1];if(e.shiftKey&&document.activeElement===firstFocusableElement){e.preventDefault();lastFocusableElement.focus();}else if(!e.shiftKey&&document.activeElement===lastFocusableElement){e.preventDefault();firstFocusableElement.focus();}}};document.addEventListener('keydown',handleTabKey);return()=>document.removeEventListener('keydown',handleTabKey);}},[isSorting]);const handleStart=async()=>{if(userName.trim()===''){alert('Please enter your name to start the quiz.');return;}if(nameOptions.length<2){alert('Not enough options to start sorting.');return;}const newSorter=new PreferenceSorter(nameOptions);setSorter(newSorter);setIsSorting(true);const n=nameOptions.length;const estimatedComparisons=Math.ceil(n*Math.log2(n));setTotalComparisons(estimatedComparisons);setProgress(0);try{let comparisons=0;const sortedResults=await newSorter.sort(async(a,b)=>{setCurrentPair({left:a,right:b});comparisons++;setProgress(Math.floor(comparisons/estimatedComparisons*100));return new Promise(resolve=>{window.resolveComparison=resolve;});});setResults(sortedResults);setShowResults(true);setIsSorting(false);}catch(error){console.error('Sorting error:',error);}};const shuffleArray=array=>{// Fisher-Yates shuffle algorithm\nfor(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]];}return array;};const handleRedo=()=>{setCurrentPair({left:null,right:null});setIsSorting(false);setShowResults(false);setResults([]);setSorter(null);setMatches([]);setNameOptions(shuffleArray([...nameOptions]));};const sortedResults=showResults?[...results].sort((a,b)=>(ratings[b]||0)-(ratings[a]||0)):[];return/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"#main\",className:\"skip-link\",children:\"Skip to main content\"}),/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/cat.gif\",alt:\"Cute cat animation\",className:\"cat-gif\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Help Me Name My Cat!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome to the ultimate cat name sorter! Help decide the perfect name through fun matchups.\"})]}),/*#__PURE__*/_jsx(\"main\",{id:\"main\",children:isLoading?/*#__PURE__*/_jsx(LoadingSpinner,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[!isSorting&&!showResults&&/*#__PURE__*/_jsxs(\"section\",{className:\"setup-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-input\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"userName\",children:\"Your Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"userName\",value:userName,onChange:e=>setUserName(e.target.value),placeholder:\"Enter your name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"options-management\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Name Options\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newOption,onChange:e=>setNewOption(e.target.value),placeholder:\"Add a new name option\",onKeyPress:e=>e.key==='Enter'&&addNewOption()}),/*#__PURE__*/_jsx(\"button\",{className:\"primary-button\",onClick:addNewOption,children:\"Add Name\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"options-list\",children:nameOptions.map((option,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"option-item\",children:option},index))})]}),nameOptions.length>=2&&/*#__PURE__*/_jsx(\"button\",{className:\"primary-button start-button\",onClick:handleStart,children:\"Start Sorting!\"})]}),isSorting&&currentPair.left&&currentPair.right&&/*#__PURE__*/_jsx(Tournament,{currentMatch:{left:currentPair.left,right:currentPair.right},onVote:handleChoice,roundNumber:1,totalMatches:totalComparisons,currentMatchNumber:Math.floor(progress/100*totalComparisons),onNavigate:direction=>{// Navigation can be implemented in a future update\nconsole.log('Navigation:',direction);}}),showResults&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Results,{ratings:ratings,onRestart:handleRedo}),/*#__PURE__*/_jsx(Bracket,{matches:matches})]})]})}),/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Made with \\u2764\\uFE0F by a fellow cat lover\"})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","ErrorBoundary","LoadingSpinner","Results","Tournament","Bracket","useLocalStorage","PreferenceSorter","EloRating","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","userName","setUserName","nameOptions","setNameOptions","currentPair","setCurrentPair","left","right","isSorting","setIsSorting","showResults","setShowResults","results","setResults","sorter","setSorter","progress","setProgress","totalComparisons","setTotalComparisons","isLoading","setIsLoading","ratings","setRatings","newOption","setNewOption","elo","matches","setMatches","fetchOptions","response","fetch","ok","Error","data","text","optionsArray","split","filter","option","trim","length","shuffleArray","console","error","addNewOption","prev","_objectSpread","defaultRating","handleChoice","choice","window","resolveComparison","ratingLeft","ratingRight","newRatings","calculateNewRatings","newRatingA","newRatingB","id","name1","name2","winner","handleKeyPress","event","key","addEventListener","removeEventListener","handleTabKey","e","focusableElements","document","querySelectorAll","firstFocusableElement","lastFocusableElement","shiftKey","activeElement","preventDefault","focus","handleStart","alert","newSorter","n","estimatedComparisons","Math","ceil","log2","comparisons","sortedResults","sort","a","b","floor","Promise","resolve","array","i","j","random","handleRedo","children","className","href","src","alt","htmlFor","type","value","onChange","target","placeholder","required","onKeyPress","onClick","map","index","currentMatch","onVote","roundNumber","totalMatches","currentMatchNumber","onNavigate","direction","log","onRestart"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/App.js"],"sourcesContent":["/**\n * @module App\n * @description Main application component for the cat name tournament app.\n * Manages the overall application state and tournament flow, including:\n * - Name input and management\n * - Tournament progression\n * - Rating calculations\n * - Results display\n * \n * Uses the Elo rating system for ranking and a custom sorting algorithm\n * for determining the best cat name through user preferences.\n * \n * @component\n * @returns {JSX.Element} The complete application UI\n */\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport {\n  ErrorBoundary,\n  LoadingSpinner,\n  Results,\n  Tournament,\n  Bracket\n} from './components';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport { PreferenceSorter } from './utils/sortingAlgorithm';\nimport EloRating from './utils/EloRating';\nimport './index.css';\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [nameOptions, setNameOptions] = useState([]);\n  const [currentPair, setCurrentPair] = useState({ left: null, right: null });\n  const [isSorting, setIsSorting] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState([]);\n  const [sorter, setSorter] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [totalComparisons, setTotalComparisons] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ratings, setRatings] = useLocalStorage('catNameRatings', {});\n  const [newOption, setNewOption] = useState('');\n  const elo = useMemo(() => new EloRating(), []);\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('/options.txt');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.text();\n        const optionsArray = data.split('\\n').filter(option => option.trim() !== '');\n        if (optionsArray.length > 1) {\n          setNameOptions(shuffleArray(optionsArray));\n        } else {\n          console.error('Insufficient options to perform sorting.');\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error loading options:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchOptions();\n  }, []);\n\n  const addNewOption = () => {\n    if (newOption.trim() === '') {\n      return;\n    }\n    setNameOptions(prev => [...prev, newOption.trim()]);\n    setRatings(prev => ({...prev, [newOption.trim()]: elo.defaultRating}));\n    setNewOption('');\n  };\n\n  const handleChoice = useCallback((choice) => {\n    if (!window.resolveComparison) {\n      return;\n    }\n    \n    const {left, right} = currentPair;\n    const ratingLeft = ratings[left] || elo.defaultRating;\n    const ratingRight = ratings[right] || elo.defaultRating;\n    \n    const newRatings = elo.calculateNewRatings(ratingLeft, ratingRight, choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n    setRatings(prev => ({\n      ...prev,\n      [left]: newRatings.newRatingA,\n      [right]: newRatings.newRatingB\n    }));\n\n    setMatches(prev => [...prev, {\n      id: prev.length + 1,\n      name1: left,\n      name2: right,\n      winner: choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2\n    }]);\n\n    window.resolveComparison(choice === 'left' ? -1 : choice === 'right' ? 1 : choice === 'both' ? 0 : 2);\n  }, [currentPair, ratings, elo]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (!isSorting) {\n        return;\n      }\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleChoice('left');\n          break;\n        case 'ArrowRight':\n          handleChoice('right');\n          break;\n        case 'b':\n        case 'B':\n          handleChoice('both');\n          break;\n        case 'n':\n        case 'N':\n          handleChoice('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isSorting, handleChoice]);\n\n  useEffect(() => {\n    if (isSorting) {\n      const handleTabKey = (e) => {\n        if (e.key === 'Tab') {\n          const focusableElements = document.querySelectorAll(\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n          );\n          const firstFocusableElement = focusableElements[0];\n          const lastFocusableElement = focusableElements[focusableElements.length - 1];\n\n          if (e.shiftKey && document.activeElement === firstFocusableElement) {\n            e.preventDefault();\n            lastFocusableElement.focus();\n          } else if (!e.shiftKey && document.activeElement === lastFocusableElement) {\n            e.preventDefault();\n            firstFocusableElement.focus();\n          }\n        }\n      };\n\n      document.addEventListener('keydown', handleTabKey);\n      return () => document.removeEventListener('keydown', handleTabKey);\n    }\n  }, [isSorting]);\n\n  const handleStart = async () => {\n    if (userName.trim() === '') {\n      alert('Please enter your name to start the quiz.');\n      return;\n    }\n    if (nameOptions.length < 2) {\n      alert('Not enough options to start sorting.');\n      return;\n    }\n    const newSorter = new PreferenceSorter(nameOptions);\n    setSorter(newSorter);\n    setIsSorting(true);\n    const n = nameOptions.length;\n    const estimatedComparisons = Math.ceil(n * Math.log2(n));\n    setTotalComparisons(estimatedComparisons);\n    setProgress(0);\n    \n    try {\n      let comparisons = 0;\n      const sortedResults = await newSorter.sort(async (a, b) => {\n        setCurrentPair({ left: a, right: b });\n        comparisons++;\n        setProgress(Math.floor((comparisons / estimatedComparisons) * 100));\n        return new Promise((resolve) => {\n          window.resolveComparison = resolve;\n        });\n      });\n      setResults(sortedResults);\n      setShowResults(true);\n      setIsSorting(false);\n    } catch (error) {\n      console.error('Sorting error:', error);\n    }\n  };\n\n  const shuffleArray = (array) => {\n    // Fisher-Yates shuffle algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const handleRedo = () => {\n    setCurrentPair({ left: null, right: null });\n    setIsSorting(false);\n    setShowResults(false);\n    setResults([]);\n    setSorter(null);\n    setMatches([]);\n    setNameOptions(shuffleArray([...nameOptions]));\n  };\n\n  const sortedResults = showResults ? \n    [...results].sort((a, b) => (ratings[b] || 0) - (ratings[a] || 0)) : [];\n\n  return (\n    <ErrorBoundary>\n      <div className=\"App\">\n        <a href=\"#main\" className=\"skip-link\">\n          Skip to main content\n        </a>\n        <header className=\"App-header\">\n          <img \n            src=\"/images/cat.gif\" \n            alt=\"Cute cat animation\" \n            className=\"cat-gif\"\n          />\n          <h1>Help Me Name My Cat!</h1>\n          <p>Welcome to the ultimate cat name sorter! Help decide the perfect name through fun matchups.</p>\n        </header>\n\n        <main id=\"main\">\n          {isLoading ? (\n            <LoadingSpinner />\n          ) : (\n            <>\n              {!isSorting && !showResults && (\n                <section className=\"setup-section\">\n                  <div className=\"user-input\">\n                    <label htmlFor=\"userName\">Your Name:</label>\n                    <input \n                      type=\"text\" \n                      id=\"userName\" \n                      value={userName} \n                      onChange={(e) => setUserName(e.target.value)} \n                      placeholder=\"Enter your name\" \n                      required \n                    />\n                  </div>\n\n                  <div className=\"options-management\">\n                    <h2>Name Options</h2>\n                    <div className=\"add-option\">\n                      <input\n                        type=\"text\"\n                        value={newOption}\n                        onChange={(e) => setNewOption(e.target.value)}\n                        placeholder=\"Add a new name option\"\n                        onKeyPress={(e) => e.key === 'Enter' && addNewOption()}\n                      />\n                      <button className=\"primary-button\" onClick={addNewOption}>\n                        Add Name\n                      </button>\n                    </div>\n                    \n                    <div className=\"options-list\">\n                      {nameOptions.map((option, index) => (\n                        <div key={index} className=\"option-item\">\n                          {option}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {nameOptions.length >= 2 && (\n                    <button \n                      className=\"primary-button start-button\"\n                      onClick={handleStart}\n                    >\n                      Start Sorting!\n                    </button>\n                  )}\n                </section>\n              )}\n\n              {isSorting && currentPair.left && currentPair.right && (\n                <Tournament\n                  currentMatch={{\n                    left: currentPair.left,\n                    right: currentPair.right\n                  }}\n                  onVote={handleChoice}\n                  roundNumber={1}\n                  totalMatches={totalComparisons}\n                  currentMatchNumber={Math.floor((progress / 100) * totalComparisons)}\n                  onNavigate={(direction) => {\n                    // Navigation can be implemented in a future update\n                    console.log('Navigation:', direction);\n                  }}\n                />\n              )}\n        \n              {showResults && (\n                <>\n                  <Results \n                    ratings={ratings} \n                    onRestart={handleRedo}\n                  />\n                  <Bracket matches={matches} />\n                </>\n              )}\n            </>\n          )}\n        </main>\n  \n        <footer>\n          <p>Made with ❤️ by a fellow cat lover</p>\n        </footer>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;"],"mappings":"uJAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,CAAEC,OAAO,KAAQ,OAAO,CACxE,OACEC,aAAa,CACbC,cAAc,CACdC,OAAO,CACPC,UAAU,CACVC,OAAO,KACF,cAAc,CACrB,MAAO,CAAAC,eAAe,KAAM,yBAAyB,CACrD,OAASC,gBAAgB,KAAQ,0BAA0B,CAC3D,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAErB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACqB,WAAW,CAAEC,cAAc,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACuB,WAAW,CAAEC,cAAc,CAAC,CAAGxB,QAAQ,CAAC,CAAEyB,IAAI,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAC3E,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAG5B,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAC6B,WAAW,CAAEC,cAAc,CAAC,CAAG9B,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAC+B,OAAO,CAAEC,UAAU,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACiC,MAAM,CAAEC,SAAS,CAAC,CAAGlC,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACmC,QAAQ,CAAEC,WAAW,CAAC,CAAGpC,QAAQ,CAAC,CAAC,CAAC,CAC3C,KAAM,CAACqC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGtC,QAAQ,CAAC,CAAC,CAAC,CAC3D,KAAM,CAACuC,SAAS,CAAEC,YAAY,CAAC,CAAGxC,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACyC,OAAO,CAAEC,UAAU,CAAC,CAAGjC,eAAe,CAAC,gBAAgB,CAAE,CAAC,CAAC,CAAC,CACnE,KAAM,CAACkC,SAAS,CAAEC,YAAY,CAAC,CAAG5C,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAA6C,GAAG,CAAG1C,OAAO,CAAC,IAAM,GAAI,CAAAQ,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAC9C,KAAM,CAACmC,OAAO,CAAEC,UAAU,CAAC,CAAG/C,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAA+C,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/BR,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAC,CAC5C,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,YAAY,CAAGF,IAAI,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,MAAM,EAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,GAAK,EAAE,CAAC,CAC5E,GAAIJ,YAAY,CAACK,MAAM,CAAG,CAAC,CAAE,CAC3BtC,cAAc,CAACuC,YAAY,CAACN,YAAY,CAAC,CAAC,CAC5C,CAAC,IAAM,CACLO,OAAO,CAACC,KAAK,CAAC,0CAA0C,CAAC,CAC3D,CACAvB,YAAY,CAAC,KAAK,CAAC,CACrB,CAAE,MAAOuB,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CvB,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CACDQ,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAgB,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAIrB,SAAS,CAACgB,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC3B,OACF,CACArC,cAAc,CAAC2C,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEtB,SAAS,CAACgB,IAAI,CAAC,CAAC,CAAC,CAAC,CACnDjB,UAAU,CAACuB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAASD,IAAI,MAAE,CAACtB,SAAS,CAACgB,IAAI,CAAC,CAAC,EAAGd,GAAG,CAACsB,aAAa,EAAE,CAAC,CACtEvB,YAAY,CAAC,EAAE,CAAC,CAClB,CAAC,CAED,KAAM,CAAAwB,YAAY,CAAGlE,WAAW,CAAEmE,MAAM,EAAK,CAC3C,GAAI,CAACC,MAAM,CAACC,iBAAiB,CAAE,CAC7B,OACF,CAEA,KAAM,CAAC9C,IAAI,CAAEC,KAAK,CAAC,CAAGH,WAAW,CACjC,KAAM,CAAAiD,UAAU,CAAG/B,OAAO,CAAChB,IAAI,CAAC,EAAIoB,GAAG,CAACsB,aAAa,CACrD,KAAM,CAAAM,WAAW,CAAGhC,OAAO,CAACf,KAAK,CAAC,EAAImB,GAAG,CAACsB,aAAa,CAEvD,KAAM,CAAAO,UAAU,CAAG7B,GAAG,CAAC8B,mBAAmB,CAACH,UAAU,CAAEC,WAAW,CAAEJ,MAAM,GAAK,MAAM,CAAG,CAAC,CAAC,CAAGA,MAAM,GAAK,OAAO,CAAG,CAAC,CAAGA,MAAM,GAAK,MAAM,CAAG,CAAC,CAAG,CAAC,CAAC,CAChJ3B,UAAU,CAACuB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACVD,IAAI,MACP,CAACxC,IAAI,EAAGiD,UAAU,CAACE,UAAU,CAC7B,CAAClD,KAAK,EAAGgD,UAAU,CAACG,UAAU,EAC9B,CAAC,CAEH9B,UAAU,CAACkB,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAC3Ba,EAAE,CAAEb,IAAI,CAACL,MAAM,CAAG,CAAC,CACnBmB,KAAK,CAAEtD,IAAI,CACXuD,KAAK,CAAEtD,KAAK,CACZuD,MAAM,CAAEZ,MAAM,GAAK,MAAM,CAAG,CAAC,CAAC,CAAGA,MAAM,GAAK,OAAO,CAAG,CAAC,CAAGA,MAAM,GAAK,MAAM,CAAG,CAAC,CAAG,CACpF,CAAC,CAAC,CAAC,CAEHC,MAAM,CAACC,iBAAiB,CAACF,MAAM,GAAK,MAAM,CAAG,CAAC,CAAC,CAAGA,MAAM,GAAK,OAAO,CAAG,CAAC,CAAGA,MAAM,GAAK,MAAM,CAAG,CAAC,CAAG,CAAC,CAAC,CACvG,CAAC,CAAE,CAAC9C,WAAW,CAAEkB,OAAO,CAAEI,GAAG,CAAC,CAAC,CAE/B5C,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiF,cAAc,CAAIC,KAAK,EAAK,CAChC,GAAI,CAACxD,SAAS,CAAE,CACd,OACF,CAEA,OAAOwD,KAAK,CAACC,GAAG,EACd,IAAK,WAAW,CACdhB,YAAY,CAAC,MAAM,CAAC,CACpB,MACF,IAAK,YAAY,CACfA,YAAY,CAAC,OAAO,CAAC,CACrB,MACF,IAAK,GAAG,CACR,IAAK,GAAG,CACNA,YAAY,CAAC,MAAM,CAAC,CACpB,MACF,IAAK,GAAG,CACR,IAAK,GAAG,CACNA,YAAY,CAAC,MAAM,CAAC,CACpB,MACF,QACE,MACJ,CACF,CAAC,CAEDE,MAAM,CAACe,gBAAgB,CAAC,SAAS,CAAEH,cAAc,CAAC,CAClD,MAAO,IAAMZ,MAAM,CAACgB,mBAAmB,CAAC,SAAS,CAAEJ,cAAc,CAAC,CACpE,CAAC,CAAE,CAACvD,SAAS,CAAEyC,YAAY,CAAC,CAAC,CAE7BnE,SAAS,CAAC,IAAM,CACd,GAAI0B,SAAS,CAAE,CACb,KAAM,CAAA4D,YAAY,CAAIC,CAAC,EAAK,CAC1B,GAAIA,CAAC,CAACJ,GAAG,GAAK,KAAK,CAAE,CACnB,KAAM,CAAAK,iBAAiB,CAAGC,QAAQ,CAACC,gBAAgB,CACjD,0EACF,CAAC,CACD,KAAM,CAAAC,qBAAqB,CAAGH,iBAAiB,CAAC,CAAC,CAAC,CAClD,KAAM,CAAAI,oBAAoB,CAAGJ,iBAAiB,CAACA,iBAAiB,CAAC7B,MAAM,CAAG,CAAC,CAAC,CAE5E,GAAI4B,CAAC,CAACM,QAAQ,EAAIJ,QAAQ,CAACK,aAAa,GAAKH,qBAAqB,CAAE,CAClEJ,CAAC,CAACQ,cAAc,CAAC,CAAC,CAClBH,oBAAoB,CAACI,KAAK,CAAC,CAAC,CAC9B,CAAC,IAAM,IAAI,CAACT,CAAC,CAACM,QAAQ,EAAIJ,QAAQ,CAACK,aAAa,GAAKF,oBAAoB,CAAE,CACzEL,CAAC,CAACQ,cAAc,CAAC,CAAC,CAClBJ,qBAAqB,CAACK,KAAK,CAAC,CAAC,CAC/B,CACF,CACF,CAAC,CAEDP,QAAQ,CAACL,gBAAgB,CAAC,SAAS,CAAEE,YAAY,CAAC,CAClD,MAAO,IAAMG,QAAQ,CAACJ,mBAAmB,CAAC,SAAS,CAAEC,YAAY,CAAC,CACpE,CACF,CAAC,CAAE,CAAC5D,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAuE,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI/E,QAAQ,CAACwC,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC1BwC,KAAK,CAAC,2CAA2C,CAAC,CAClD,OACF,CACA,GAAI9E,WAAW,CAACuC,MAAM,CAAG,CAAC,CAAE,CAC1BuC,KAAK,CAAC,sCAAsC,CAAC,CAC7C,OACF,CACA,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAA1F,gBAAgB,CAACW,WAAW,CAAC,CACnDa,SAAS,CAACkE,SAAS,CAAC,CACpBxE,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAyE,CAAC,CAAGhF,WAAW,CAACuC,MAAM,CAC5B,KAAM,CAAA0C,oBAAoB,CAAGC,IAAI,CAACC,IAAI,CAACH,CAAC,CAAGE,IAAI,CAACE,IAAI,CAACJ,CAAC,CAAC,CAAC,CACxD/D,mBAAmB,CAACgE,oBAAoB,CAAC,CACzClE,WAAW,CAAC,CAAC,CAAC,CAEd,GAAI,CACF,GAAI,CAAAsE,WAAW,CAAG,CAAC,CACnB,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAP,SAAS,CAACQ,IAAI,CAAC,MAAOC,CAAC,CAAEC,CAAC,GAAK,CACzDtF,cAAc,CAAC,CAAEC,IAAI,CAAEoF,CAAC,CAAEnF,KAAK,CAAEoF,CAAE,CAAC,CAAC,CACrCJ,WAAW,EAAE,CACbtE,WAAW,CAACmE,IAAI,CAACQ,KAAK,CAAEL,WAAW,CAAGJ,oBAAoB,CAAI,GAAG,CAAC,CAAC,CACnE,MAAO,IAAI,CAAAU,OAAO,CAAEC,OAAO,EAAK,CAC9B3C,MAAM,CAACC,iBAAiB,CAAG0C,OAAO,CACpC,CAAC,CAAC,CACJ,CAAC,CAAC,CACFjF,UAAU,CAAC2E,aAAa,CAAC,CACzB7E,cAAc,CAAC,IAAI,CAAC,CACpBF,YAAY,CAAC,KAAK,CAAC,CACrB,CAAE,MAAOmC,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACxC,CACF,CAAC,CAED,KAAM,CAAAF,YAAY,CAAIqD,KAAK,EAAK,CAC9B;AACA,IAAK,GAAI,CAAAC,CAAC,CAAGD,KAAK,CAACtD,MAAM,CAAG,CAAC,CAAEuD,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CACzC,KAAM,CAAAC,CAAC,CAAGb,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACc,MAAM,CAAC,CAAC,EAAIF,CAAC,CAAG,CAAC,CAAC,CAAC,CAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,CAAED,KAAK,CAACE,CAAC,CAAC,CAAC,CAAG,CAACF,KAAK,CAACE,CAAC,CAAC,CAAEF,KAAK,CAACC,CAAC,CAAC,CAAC,CAC7C,CACA,MAAO,CAAAD,KAAK,CACd,CAAC,CAED,KAAM,CAAAI,UAAU,CAAGA,CAAA,GAAM,CACvB9F,cAAc,CAAC,CAAEC,IAAI,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAC3CE,YAAY,CAAC,KAAK,CAAC,CACnBE,cAAc,CAAC,KAAK,CAAC,CACrBE,UAAU,CAAC,EAAE,CAAC,CACdE,SAAS,CAAC,IAAI,CAAC,CACfa,UAAU,CAAC,EAAE,CAAC,CACdzB,cAAc,CAACuC,YAAY,CAAC,CAAC,GAAGxC,WAAW,CAAC,CAAC,CAAC,CAChD,CAAC,CAED,KAAM,CAAAsF,aAAa,CAAG9E,WAAW,CAC/B,CAAC,GAAGE,OAAO,CAAC,CAAC6E,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CAACrE,OAAO,CAACqE,CAAC,CAAC,EAAI,CAAC,GAAKrE,OAAO,CAACoE,CAAC,CAAC,EAAI,CAAC,CAAC,CAAC,CAAG,EAAE,CAEzE,mBACEhG,IAAA,CAACT,aAAa,EAAAmH,QAAA,cACZxG,KAAA,QAAKyG,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClB1G,IAAA,MAAG4G,IAAI,CAAC,OAAO,CAACD,SAAS,CAAC,WAAW,CAAAD,QAAA,CAAC,sBAEtC,CAAG,CAAC,cACJxG,KAAA,WAAQyG,SAAS,CAAC,YAAY,CAAAD,QAAA,eAC5B1G,IAAA,QACE6G,GAAG,CAAC,iBAAiB,CACrBC,GAAG,CAAC,oBAAoB,CACxBH,SAAS,CAAC,SAAS,CACpB,CAAC,cACF3G,IAAA,OAAA0G,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7B1G,IAAA,MAAA0G,QAAA,CAAG,6FAA2F,CAAG,CAAC,EAC5F,CAAC,cAET1G,IAAA,SAAMiE,EAAE,CAAC,MAAM,CAAAyC,QAAA,CACZhF,SAAS,cACR1B,IAAA,CAACR,cAAc,GAAE,CAAC,cAElBU,KAAA,CAAAE,SAAA,EAAAsG,QAAA,EACG,CAAC5F,SAAS,EAAI,CAACE,WAAW,eACzBd,KAAA,YAASyG,SAAS,CAAC,eAAe,CAAAD,QAAA,eAChCxG,KAAA,QAAKyG,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzB1G,IAAA,UAAO+G,OAAO,CAAC,UAAU,CAAAL,QAAA,CAAC,YAAU,CAAO,CAAC,cAC5C1G,IAAA,UACEgH,IAAI,CAAC,MAAM,CACX/C,EAAE,CAAC,UAAU,CACbgD,KAAK,CAAE3G,QAAS,CAChB4G,QAAQ,CAAGvC,CAAC,EAAKpE,WAAW,CAACoE,CAAC,CAACwC,MAAM,CAACF,KAAK,CAAE,CAC7CG,WAAW,CAAC,iBAAiB,CAC7BC,QAAQ,MACT,CAAC,EACC,CAAC,cAENnH,KAAA,QAAKyG,SAAS,CAAC,oBAAoB,CAAAD,QAAA,eACjC1G,IAAA,OAAA0G,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBxG,KAAA,QAAKyG,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzB1G,IAAA,UACEgH,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEnF,SAAU,CACjBoF,QAAQ,CAAGvC,CAAC,EAAK5C,YAAY,CAAC4C,CAAC,CAACwC,MAAM,CAACF,KAAK,CAAE,CAC9CG,WAAW,CAAC,uBAAuB,CACnCE,UAAU,CAAG3C,CAAC,EAAKA,CAAC,CAACJ,GAAG,GAAK,OAAO,EAAIpB,YAAY,CAAC,CAAE,CACxD,CAAC,cACFnD,IAAA,WAAQ2G,SAAS,CAAC,gBAAgB,CAACY,OAAO,CAAEpE,YAAa,CAAAuD,QAAA,CAAC,UAE1D,CAAQ,CAAC,EACN,CAAC,cAEN1G,IAAA,QAAK2G,SAAS,CAAC,cAAc,CAAAD,QAAA,CAC1BlG,WAAW,CAACgH,GAAG,CAAC,CAAC3E,MAAM,CAAE4E,KAAK,gBAC7BzH,IAAA,QAAiB2G,SAAS,CAAC,aAAa,CAAAD,QAAA,CACrC7D,MAAM,EADC4E,KAEL,CACN,CAAC,CACC,CAAC,EACH,CAAC,CAELjH,WAAW,CAACuC,MAAM,EAAI,CAAC,eACtB/C,IAAA,WACE2G,SAAS,CAAC,6BAA6B,CACvCY,OAAO,CAAElC,WAAY,CAAAqB,QAAA,CACtB,gBAED,CAAQ,CACT,EACM,CACV,CAEA5F,SAAS,EAAIJ,WAAW,CAACE,IAAI,EAAIF,WAAW,CAACG,KAAK,eACjDb,IAAA,CAACN,UAAU,EACTgI,YAAY,CAAE,CACZ9G,IAAI,CAAEF,WAAW,CAACE,IAAI,CACtBC,KAAK,CAAEH,WAAW,CAACG,KACrB,CAAE,CACF8G,MAAM,CAAEpE,YAAa,CACrBqE,WAAW,CAAE,CAAE,CACfC,YAAY,CAAErG,gBAAiB,CAC/BsG,kBAAkB,CAAEpC,IAAI,CAACQ,KAAK,CAAE5E,QAAQ,CAAG,GAAG,CAAIE,gBAAgB,CAAE,CACpEuG,UAAU,CAAGC,SAAS,EAAK,CACzB;AACA/E,OAAO,CAACgF,GAAG,CAAC,aAAa,CAAED,SAAS,CAAC,CACvC,CAAE,CACH,CACF,CAEAhH,WAAW,eACVd,KAAA,CAAAE,SAAA,EAAAsG,QAAA,eACE1G,IAAA,CAACP,OAAO,EACNmC,OAAO,CAAEA,OAAQ,CACjBsG,SAAS,CAAEzB,UAAW,CACvB,CAAC,cACFzG,IAAA,CAACL,OAAO,EAACsC,OAAO,CAAEA,OAAQ,CAAE,CAAC,EAC7B,CACH,EACD,CACH,CACG,CAAC,cAEPjC,IAAA,WAAA0G,QAAA,cACE1G,IAAA,MAAA0G,QAAA,CAAG,8CAAkC,CAAG,CAAC,CACnC,CAAC,EACN,CAAC,CACO,CAAC,CAEpB,CAEA,cAAe,CAAArG,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}