{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js\",\n  _s = $RefreshSig$();\n/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport { supabase } from '../../supabase/supabaseClient';\nimport RankingAdjustment from '../RankingAdjustment/RankingAdjustment';\nimport './Tournament.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tournament({\n  onComplete,\n  existingRatings = [],\n  names = [],\n  userName\n}) {\n  _s();\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isAdjustingRankings, setIsAdjustingRankings] = useState(false);\n  const [currentRankings, setCurrentRankings] = useState([]);\n  const [showEndEarly, setShowEndEarly] = useState(false);\n  useEffect(() => {\n    checkForSavedProgress();\n  }, []);\n  const checkForSavedProgress = async () => {\n    if (!userName) {\n      startNewTournament();\n      return;\n    }\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('tournament_progress').select('*').eq('user_name', userName).single();\n      if (!error && data) {\n        const shouldResume = window.confirm('You have a saved tournament. Would you like to resume it?');\n        if (shouldResume) {\n          resumeTournament(data);\n        } else {\n          await clearProgress();\n          startNewTournament();\n        }\n      } else {\n        startNewTournament();\n      }\n    } catch (err) {\n      console.error('Error checking progress:', err);\n      startNewTournament();\n    }\n  };\n  const resumeTournament = savedData => {\n    setRoundNumber(savedData.round_number);\n    setCurrentMatchNumber(savedData.current_match);\n    setTotalMatches(savedData.total_matches);\n    const newSorter = new PreferenceSorter(savedData.names);\n    if (savedData.sorter_state) {\n      newSorter.setState(savedData.sorter_state);\n    }\n    setSorter(newSorter);\n    runTournament(newSorter);\n  };\n  const saveProgress = async () => {\n    if (!userName || !sorter) return false;\n    try {\n      const progress = {\n        user_name: userName,\n        round_number: roundNumber,\n        current_match: currentMatchNumber,\n        total_matches: totalMatches,\n        names: names,\n        sorter_state: sorter.getState(),\n        updated_at: new Date().toISOString()\n      };\n      const {\n        error\n      } = await supabase.from('tournament_progress').upsert(progress, {\n        onConflict: 'user_name',\n        returning: 'minimal'\n      });\n      if (error) throw error;\n      return true;\n    } catch (err) {\n      console.error('Error saving progress:', err);\n      return false;\n    }\n  };\n  const clearProgress = async () => {\n    if (!userName) return;\n    try {\n      await supabase.from('tournament_progress').delete().eq('user_name', userName);\n    } catch (err) {\n      console.error('Error clearing progress:', err);\n    }\n  };\n  const handlePause = async () => {\n    const saved = await saveProgress();\n    if (saved) {\n      setIsPaused(true);\n      alert('Progress saved! You can safely leave and come back later.');\n    } else {\n      alert('Error saving progress. Please try again.');\n    }\n  };\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n  const handleEndEarly = async () => {\n    if (!sorter || !sorter.namMember) return;\n\n    // Get current partial rankings from the sorter\n    const partialRankings = sorter.namMember.map((name, index) => {\n      var _existingRatings$find;\n      return {\n        name,\n        rating: (((_existingRatings$find = existingRatings.find(r => r.name === name)) === null || _existingRatings$find === void 0 ? void 0 : _existingRatings$find.rating) || 1500) - index * 20\n      };\n    });\n    setCurrentRankings(partialRankings);\n    setIsAdjustingRankings(true);\n  };\n  const handleSaveRankings = async adjustedRankings => {\n    await clearProgress();\n    setIsAdjustingRankings(false);\n    onComplete(adjustedRankings);\n  };\n  const handleCancelRankings = () => {\n    setIsAdjustingRankings(false);\n    setShowEndEarly(false);\n  };\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n    runTournament(newSorter);\n  };\n  const runTournament = async tournamentSorter => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({\n          left,\n          right\n        });\n        return new Promise(resolve => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // If we completed the tournament normally (not ended early)\n      if (!isAdjustingRankings) {\n        const finalRankings = sortedResults.map((name, index) => ({\n          name,\n          rating: Math.max(1000, 1500 - index * 20)\n        }));\n        await clearProgress();\n        onComplete(finalRankings);\n      }\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n  const handleVote = useCallback(result => {\n    if (isTransitioning || !resolveVote) return;\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    const voteValue = result === 'left' ? -1 : result === 'right' ? 1 : result === 'both' ? 0 : 2;\n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (isTransitioning) return;\n      switch (event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n  if (isAdjustingRankings) {\n    return /*#__PURE__*/_jsxDEV(RankingAdjustment, {\n      rankings: currentRankings,\n      onSave: handleSaveRankings,\n      onCancel: handleCancelRankings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentMatch) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading tournament...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 29\n  }, this);\n  const progress = Math.round(currentMatchNumber / totalMatches * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"round-number\",\n          children: [\"Round \", roundNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"match-count\",\n          children: [\"Match \", currentMatchNumber, \" of \", totalMatches]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-info\",\n        children: [progress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tournament-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePause,\n          className: \"pause-button\",\n          disabled: isTransitioning,\n          children: \"Save & Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), progress > 25 && !showEndEarly && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowEndEarly(true),\n          className: \"end-early-button\",\n          disabled: isTransitioning,\n          children: \"End Tournament Early\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), showEndEarly && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"end-early-confirmation\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure? You can adjust the rankings manually after ending.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEndEarly,\n            className: \"confirm-end-button\",\n            disabled: isTransitioning,\n            children: \"Yes, End & Adjust Rankings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowEndEarly(false),\n            className: \"cancel-end-button\",\n            disabled: isTransitioning,\n            children: \"No, Continue Tournament\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), isPaused ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paused-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tournament Paused\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your progress has been saved. You can safely leave and come back later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResume,\n        className: \"resume-button\",\n        children: \"Resume Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"names-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'left' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('left'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2190 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.left\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vs-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vs-text\",\n            children: \"vs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'right' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('right'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2192 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.right\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('both'),\n          disabled: isTransitioning,\n          title: \"Press 'B' key\",\n          children: \"Like Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('none'),\n          disabled: isTransitioning,\n          title: \"Press 'N' key\",\n          children: \"No Opinion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on a name to choose it, or select an option below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-hints\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keyboard shortcuts: \\u2190 Left, \\u2192 Right, B (Both), N (No Opinion)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournament, \"lEcU1hLvXAG3ZEt+xglGe0aulQw=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","PreferenceSorter","EloRating","supabase","RankingAdjustment","jsxDEV","_jsxDEV","Tournament","onComplete","existingRatings","names","userName","_s","currentMatch","setCurrentMatch","isTransitioning","setIsTransitioning","roundNumber","setRoundNumber","currentMatchNumber","setCurrentMatchNumber","totalMatches","setTotalMatches","sorter","setSorter","elo","resolveVote","setResolveVote","selectedOption","setSelectedOption","isPaused","setIsPaused","isAdjustingRankings","setIsAdjustingRankings","currentRankings","setCurrentRankings","showEndEarly","setShowEndEarly","checkForSavedProgress","startNewTournament","data","error","from","select","eq","single","shouldResume","window","confirm","resumeTournament","clearProgress","err","console","savedData","round_number","current_match","total_matches","newSorter","sorter_state","setState","runTournament","saveProgress","progress","user_name","getState","updated_at","Date","toISOString","upsert","onConflict","returning","delete","handlePause","saved","alert","handleResume","handleEndEarly","namMember","partialRankings","map","name","index","_existingRatings$find","rating","find","r","handleSaveRankings","adjustedRankings","handleCancelRankings","length","n","estimatedMatches","Math","ceil","log2","tournamentSorter","sortedResults","sort","left","right","Promise","resolve","finalRankings","max","handleVote","result","voteValue","prev","setTimeout","handleKeyPress","event","key","addEventListener","removeEventListener","rankings","onSave","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","children","round","className","onClick","disabled","role","tabIndex","title","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js"],"sourcesContent":["/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport { supabase } from '../../supabase/supabaseClient';\nimport RankingAdjustment from '../RankingAdjustment/RankingAdjustment';\nimport './Tournament.css';\n\nfunction Tournament({ onComplete, existingRatings = [], names = [], userName }) {\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isAdjustingRankings, setIsAdjustingRankings] = useState(false);\n  const [currentRankings, setCurrentRankings] = useState([]);\n  const [showEndEarly, setShowEndEarly] = useState(false);\n\n  useEffect(() => {\n    checkForSavedProgress();\n  }, []);\n\n  const checkForSavedProgress = async () => {\n    if (!userName) {\n      startNewTournament();\n      return;\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('tournament_progress')\n        .select('*')\n        .eq('user_name', userName)\n        .single();\n\n      if (!error && data) {\n        const shouldResume = window.confirm(\n          'You have a saved tournament. Would you like to resume it?'\n        );\n\n        if (shouldResume) {\n          resumeTournament(data);\n        } else {\n          await clearProgress();\n          startNewTournament();\n        }\n      } else {\n        startNewTournament();\n      }\n    } catch (err) {\n      console.error('Error checking progress:', err);\n      startNewTournament();\n    }\n  };\n\n  const resumeTournament = (savedData) => {\n    setRoundNumber(savedData.round_number);\n    setCurrentMatchNumber(savedData.current_match);\n    setTotalMatches(savedData.total_matches);\n    \n    const newSorter = new PreferenceSorter(savedData.names);\n    if (savedData.sorter_state) {\n      newSorter.setState(savedData.sorter_state);\n    }\n    setSorter(newSorter);\n    runTournament(newSorter);\n  };\n\n  const saveProgress = async () => {\n    if (!userName || !sorter) return false;\n\n    try {\n      const progress = {\n        user_name: userName,\n        round_number: roundNumber,\n        current_match: currentMatchNumber,\n        total_matches: totalMatches,\n        names: names,\n        sorter_state: sorter.getState(),\n        updated_at: new Date().toISOString()\n      };\n\n      const { error } = await supabase\n        .from('tournament_progress')\n        .upsert(progress, { \n          onConflict: 'user_name',\n          returning: 'minimal' \n        });\n\n      if (error) throw error;\n      return true;\n    } catch (err) {\n      console.error('Error saving progress:', err);\n      return false;\n    }\n  };\n\n  const clearProgress = async () => {\n    if (!userName) return;\n    \n    try {\n      await supabase\n        .from('tournament_progress')\n        .delete()\n        .eq('user_name', userName);\n    } catch (err) {\n      console.error('Error clearing progress:', err);\n    }\n  };\n\n  const handlePause = async () => {\n    const saved = await saveProgress();\n    if (saved) {\n      setIsPaused(true);\n      alert('Progress saved! You can safely leave and come back later.');\n    } else {\n      alert('Error saving progress. Please try again.');\n    }\n  };\n\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n\n  const handleEndEarly = async () => {\n    if (!sorter || !sorter.namMember) return;\n    \n    // Get current partial rankings from the sorter\n    const partialRankings = sorter.namMember.map((name, index) => ({\n      name,\n      rating: (existingRatings.find(r => r.name === name)?.rating || 1500) - (index * 20)\n    }));\n    \n    setCurrentRankings(partialRankings);\n    setIsAdjustingRankings(true);\n  };\n\n  const handleSaveRankings = async (adjustedRankings) => {\n    await clearProgress();\n    setIsAdjustingRankings(false);\n    onComplete(adjustedRankings);\n  };\n\n  const handleCancelRankings = () => {\n    setIsAdjustingRankings(false);\n    setShowEndEarly(false);\n  };\n\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    \n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n\n    runTournament(newSorter);\n  };\n\n  const runTournament = async (tournamentSorter) => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({ left, right });\n        return new Promise((resolve) => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // If we completed the tournament normally (not ended early)\n      if (!isAdjustingRankings) {\n        const finalRankings = sortedResults.map((name, index) => ({\n          name,\n          rating: Math.max(1000, 1500 - (index * 20))\n        }));\n        await clearProgress();\n        onComplete(finalRankings);\n      }\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n\n  const handleVote = useCallback((result) => {\n    if (isTransitioning || !resolveVote) return;\n\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    \n    const voteValue = result === 'left' ? -1 : result === 'right' ? 1 : result === 'both' ? 0 : 2;\n    resolveVote(voteValue);\n\n    setCurrentMatchNumber(prev => prev + 1);\n    \n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (isTransitioning) return;\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  if (isAdjustingRankings) {\n    return (\n      <RankingAdjustment\n        rankings={currentRankings}\n        onSave={handleSaveRankings}\n        onCancel={handleCancelRankings}\n      />\n    );\n  }\n\n  if (!currentMatch) return <div>Loading tournament...</div>;\n\n  const progress = Math.round((currentMatchNumber / totalMatches) * 100);\n\n  return (\n    <div className=\"tournament\">\n      <div className=\"progress-info\">\n        <div className=\"round-info\">\n          <span className=\"round-number\">Round {roundNumber}</span>\n          <span className=\"match-count\">Match {currentMatchNumber} of {totalMatches}</span>\n        </div>\n        <div className=\"percentage-info\">{progress}% Complete</div>\n        <div className=\"tournament-controls\">\n          <button \n            onClick={handlePause}\n            className=\"pause-button\"\n            disabled={isTransitioning}\n          >\n            Save & Pause\n          </button>\n          {progress > 25 && !showEndEarly && (\n            <button\n              onClick={() => setShowEndEarly(true)}\n              className=\"end-early-button\"\n              disabled={isTransitioning}\n            >\n              End Tournament Early\n            </button>\n          )}\n          {showEndEarly && (\n            <div className=\"end-early-confirmation\">\n              <p>Are you sure? You can adjust the rankings manually after ending.</p>\n              <button\n                onClick={handleEndEarly}\n                className=\"confirm-end-button\"\n                disabled={isTransitioning}\n              >\n                Yes, End & Adjust Rankings\n              </button>\n              <button\n                onClick={() => setShowEndEarly(false)}\n                className=\"cancel-end-button\"\n                disabled={isTransitioning}\n              >\n                No, Continue Tournament\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {isPaused ? (\n        <div className=\"paused-message\">\n          <h3>Tournament Paused</h3>\n          <p>Your progress has been saved. You can safely leave and come back later.</p>\n          <button \n            onClick={handleResume}\n            className=\"resume-button\"\n          >\n            Resume Now\n          </button>\n        </div>\n      ) : (\n        <div className=\"matchup\">\n          <div className=\"names-row\">\n            <div className=\"name-container left\">\n              <div \n                className={`name-card ${selectedOption === 'left' ? 'selected' : ''}`}\n                onClick={() => !isTransitioning && handleVote('left')}\n                role=\"button\"\n                tabIndex={0}\n                title=\"Press ← arrow key\"\n              >\n                <h3>{currentMatch.left}</h3>\n              </div>\n            </div>\n\n            <div className=\"vs-section\">\n              <div className=\"vs-text\">vs</div>\n            </div>\n\n            <div className=\"name-container right\">\n              <div \n                className={`name-card ${selectedOption === 'right' ? 'selected' : ''}`}\n                onClick={() => !isTransitioning && handleVote('right')}\n                role=\"button\"\n                tabIndex={0}\n                title=\"Press → arrow key\"\n              >\n                <h3>{currentMatch.right}</h3>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"center-options\">\n            <button\n              className={`extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('both')}\n              disabled={isTransitioning}\n              title=\"Press 'B' key\"\n            >\n              Like Both\n            </button>\n            <button\n              className={`extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('none')}\n              disabled={isTransitioning}\n              title=\"Press 'N' key\"\n            >\n              No Opinion\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"tournament-instructions\">\n        <p>Click on a name to choose it, or select an option below</p>\n      </div>\n\n      <div className=\"keyboard-hints\">\n        <p>Keyboard shortcuts: ← Left, → Right, B (Both), N (No Opinion)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Tournament; "],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC,UAAU;EAAEC,eAAe,GAAG,EAAE;EAAEC,KAAK,GAAG,EAAE;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACoB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC0B,GAAG,CAAC,GAAG1B,QAAQ,CAAC,MAAM,IAAIG,SAAS,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACdsC,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI,CAAC3B,QAAQ,EAAE;MACb4B,kBAAkB,CAAC,CAAC;MACpB;IACF;IAEA,IAAI;MACF,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMtC,QAAQ,CACnCuC,IAAI,CAAC,qBAAqB,CAAC,CAC3BC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,WAAW,EAAEjC,QAAQ,CAAC,CACzBkC,MAAM,CAAC,CAAC;MAEX,IAAI,CAACJ,KAAK,IAAID,IAAI,EAAE;QAClB,MAAMM,YAAY,GAAGC,MAAM,CAACC,OAAO,CACjC,2DACF,CAAC;QAED,IAAIF,YAAY,EAAE;UAChBG,gBAAgB,CAACT,IAAI,CAAC;QACxB,CAAC,MAAM;UACL,MAAMU,aAAa,CAAC,CAAC;UACrBX,kBAAkB,CAAC,CAAC;QACtB;MACF,CAAC,MAAM;QACLA,kBAAkB,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAACX,KAAK,CAAC,0BAA0B,EAAEU,GAAG,CAAC;MAC9CZ,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAMU,gBAAgB,GAAII,SAAS,IAAK;IACtCnC,cAAc,CAACmC,SAAS,CAACC,YAAY,CAAC;IACtClC,qBAAqB,CAACiC,SAAS,CAACE,aAAa,CAAC;IAC9CjC,eAAe,CAAC+B,SAAS,CAACG,aAAa,CAAC;IAExC,MAAMC,SAAS,GAAG,IAAIxD,gBAAgB,CAACoD,SAAS,CAAC3C,KAAK,CAAC;IACvD,IAAI2C,SAAS,CAACK,YAAY,EAAE;MAC1BD,SAAS,CAACE,QAAQ,CAACN,SAAS,CAACK,YAAY,CAAC;IAC5C;IACAlC,SAAS,CAACiC,SAAS,CAAC;IACpBG,aAAa,CAACH,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAClD,QAAQ,IAAI,CAACY,MAAM,EAAE,OAAO,KAAK;IAEtC,IAAI;MACF,MAAMuC,QAAQ,GAAG;QACfC,SAAS,EAAEpD,QAAQ;QACnB2C,YAAY,EAAErC,WAAW;QACzBsC,aAAa,EAAEpC,kBAAkB;QACjCqC,aAAa,EAAEnC,YAAY;QAC3BX,KAAK,EAAEA,KAAK;QACZgD,YAAY,EAAEnC,MAAM,CAACyC,QAAQ,CAAC,CAAC;QAC/BC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACrC,CAAC;MAED,MAAM;QAAE1B;MAAM,CAAC,GAAG,MAAMtC,QAAQ,CAC7BuC,IAAI,CAAC,qBAAqB,CAAC,CAC3B0B,MAAM,CAACN,QAAQ,EAAE;QAChBO,UAAU,EAAE,WAAW;QACvBC,SAAS,EAAE;MACb,CAAC,CAAC;MAEJ,IAAI7B,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACX,KAAK,CAAC,wBAAwB,EAAEU,GAAG,CAAC;MAC5C,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACvC,QAAQ,EAAE;IAEf,IAAI;MACF,MAAMR,QAAQ,CACXuC,IAAI,CAAC,qBAAqB,CAAC,CAC3B6B,MAAM,CAAC,CAAC,CACR3B,EAAE,CAAC,WAAW,EAAEjC,QAAQ,CAAC;IAC9B,CAAC,CAAC,OAAOwC,GAAG,EAAE;MACZC,OAAO,CAACX,KAAK,CAAC,0BAA0B,EAAEU,GAAG,CAAC;IAChD;EACF,CAAC;EAED,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,KAAK,GAAG,MAAMZ,YAAY,CAAC,CAAC;IAClC,IAAIY,KAAK,EAAE;MACT1C,WAAW,CAAC,IAAI,CAAC;MACjB2C,KAAK,CAAC,2DAA2D,CAAC;IACpE,CAAC,MAAM;MACLA,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB5C,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAM6C,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACrD,MAAM,IAAI,CAACA,MAAM,CAACsD,SAAS,EAAE;;IAElC;IACA,MAAMC,eAAe,GAAGvD,MAAM,CAACsD,SAAS,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;MAAA,IAAAC,qBAAA;MAAA,OAAM;QAC7DF,IAAI;QACJG,MAAM,EAAE,CAAC,EAAAD,qBAAA,GAAAzE,eAAe,CAAC2E,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,IAAI,KAAKA,IAAI,CAAC,cAAAE,qBAAA,uBAA1CA,qBAAA,CAA4CC,MAAM,KAAI,IAAI,IAAKF,KAAK,GAAG;MAClF,CAAC;IAAA,CAAC,CAAC;IAEH9C,kBAAkB,CAAC2C,eAAe,CAAC;IACnC7C,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMqD,kBAAkB,GAAG,MAAOC,gBAAgB,IAAK;IACrD,MAAMrC,aAAa,CAAC,CAAC;IACrBjB,sBAAsB,CAAC,KAAK,CAAC;IAC7BzB,UAAU,CAAC+E,gBAAgB,CAAC;EAC9B,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCvD,sBAAsB,CAAC,KAAK,CAAC;IAC7BI,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI7B,KAAK,CAAC+E,MAAM,KAAK,CAAC,EAAE;IAExB,MAAMhC,SAAS,GAAG,IAAIxD,gBAAgB,CAACS,KAAK,CAAC;IAC7Cc,SAAS,CAACiC,SAAS,CAAC;IAEpB,MAAMiC,CAAC,GAAGhF,KAAK,CAAC+E,MAAM;IACtB,MAAME,gBAAgB,GAAGC,IAAI,CAACC,IAAI,CAACH,CAAC,GAAGE,IAAI,CAACE,IAAI,CAACJ,CAAC,CAAC,CAAC;IACpDpE,eAAe,CAACqE,gBAAgB,CAAC;IACjCvE,qBAAqB,CAAC,CAAC,CAAC;IACxBF,cAAc,CAAC,CAAC,CAAC;IAEjB0C,aAAa,CAACH,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMG,aAAa,GAAG,MAAOmC,gBAAgB,IAAK;IAChD,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMD,gBAAgB,CAACE,IAAI,CAAC,OAAOC,IAAI,EAAEC,KAAK,KAAK;QACvErF,eAAe,CAAC;UAAEoF,IAAI;UAAEC;QAAM,CAAC,CAAC;QAChC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;UAC9B1E,cAAc,CAAC,MAAM0E,OAAO,CAAC;QAC/B,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,IAAI,CAACrE,mBAAmB,EAAE;QACxB,MAAMsE,aAAa,GAAGN,aAAa,CAACjB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;UACxDD,IAAI;UACJG,MAAM,EAAES,IAAI,CAACW,GAAG,CAAC,IAAI,EAAE,IAAI,GAAItB,KAAK,GAAG,EAAG;QAC5C,CAAC,CAAC,CAAC;QACH,MAAM/B,aAAa,CAAC,CAAC;QACrB1C,UAAU,CAAC8F,aAAa,CAAC;MAC3B;IACF,CAAC,CAAC,OAAO7D,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,MAAM+D,UAAU,GAAG1G,WAAW,CAAE2G,MAAM,IAAK;IACzC,IAAI1F,eAAe,IAAI,CAACW,WAAW,EAAE;IAErCG,iBAAiB,CAAC4E,MAAM,CAAC;IACzBzF,kBAAkB,CAAC,IAAI,CAAC;IAExB,MAAM0F,SAAS,GAAGD,MAAM,KAAK,MAAM,GAAG,CAAC,CAAC,GAAGA,MAAM,KAAK,OAAO,GAAG,CAAC,GAAGA,MAAM,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC;IAC7F/E,WAAW,CAACgF,SAAS,CAAC;IAEtBtF,qBAAqB,CAACuF,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAEvCC,UAAU,CAAC,MAAM;MACf5F,kBAAkB,CAAC,KAAK,CAAC;MACzBa,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,CAACH,WAAW,EAAEX,eAAe,CAAC,CAAC;EAElCf,SAAS,CAAC,MAAM;IACd,MAAM6G,cAAc,GAAIC,KAAK,IAAK;MAChC,IAAI/F,eAAe,EAAE;MAErB,QAAO+F,KAAK,CAACC,GAAG;QACd,KAAK,WAAW;UACdP,UAAU,CAAC,MAAM,CAAC;UAClB;QACF,KAAK,YAAY;UACfA,UAAU,CAAC,OAAO,CAAC;UACnB;QACF,KAAK,GAAG;QACR,KAAK,GAAG;UACNA,UAAU,CAAC,MAAM,CAAC;UAClB;QACF,KAAK,GAAG;QACR,KAAK,GAAG;UACNA,UAAU,CAAC,MAAM,CAAC;UAClB;QACF;UACE;MACJ;IACF,CAAC;IAEDzD,MAAM,CAACiE,gBAAgB,CAAC,SAAS,EAAEH,cAAc,CAAC;IAClD,OAAO,MAAM9D,MAAM,CAACkE,mBAAmB,CAAC,SAAS,EAAEJ,cAAc,CAAC;EACpE,CAAC,EAAE,CAACL,UAAU,EAAEzF,eAAe,CAAC,CAAC;EAEjC,IAAIiB,mBAAmB,EAAE;IACvB,oBACE1B,OAAA,CAACF,iBAAiB;MAChB8G,QAAQ,EAAEhF,eAAgB;MAC1BiF,MAAM,EAAE7B,kBAAmB;MAC3B8B,QAAQ,EAAE5B;IAAqB;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAEN;EAEA,IAAI,CAAC3G,YAAY,EAAE,oBAAOP,OAAA;IAAAmH,QAAA,EAAK;EAAqB;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE1D,MAAM1D,QAAQ,GAAG8B,IAAI,CAAC8B,KAAK,CAAEvG,kBAAkB,GAAGE,YAAY,GAAI,GAAG,CAAC;EAEtE,oBACEf,OAAA;IAAKqH,SAAS,EAAC,YAAY;IAAAF,QAAA,gBACzBnH,OAAA;MAAKqH,SAAS,EAAC,eAAe;MAAAF,QAAA,gBAC5BnH,OAAA;QAAKqH,SAAS,EAAC,YAAY;QAAAF,QAAA,gBACzBnH,OAAA;UAAMqH,SAAS,EAAC,cAAc;UAAAF,QAAA,GAAC,QAAM,EAACxG,WAAW;QAAA;UAAAoG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDlH,OAAA;UAAMqH,SAAS,EAAC,aAAa;UAAAF,QAAA,GAAC,QAAM,EAACtG,kBAAkB,EAAC,MAAI,EAACE,YAAY;QAAA;UAAAgG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACNlH,OAAA;QAAKqH,SAAS,EAAC,iBAAiB;QAAAF,QAAA,GAAE3D,QAAQ,EAAC,YAAU;MAAA;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3DlH,OAAA;QAAKqH,SAAS,EAAC,qBAAqB;QAAAF,QAAA,gBAClCnH,OAAA;UACEsH,OAAO,EAAEpD,WAAY;UACrBmD,SAAS,EAAC,cAAc;UACxBE,QAAQ,EAAE9G,eAAgB;UAAA0G,QAAA,EAC3B;QAED;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACR1D,QAAQ,GAAG,EAAE,IAAI,CAAC1B,YAAY,iBAC7B9B,OAAA;UACEsH,OAAO,EAAEA,CAAA,KAAMvF,eAAe,CAAC,IAAI,CAAE;UACrCsF,SAAS,EAAC,kBAAkB;UAC5BE,QAAQ,EAAE9G,eAAgB;UAAA0G,QAAA,EAC3B;QAED;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,EACApF,YAAY,iBACX9B,OAAA;UAAKqH,SAAS,EAAC,wBAAwB;UAAAF,QAAA,gBACrCnH,OAAA;YAAAmH,QAAA,EAAG;UAAgE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACvElH,OAAA;YACEsH,OAAO,EAAEhD,cAAe;YACxB+C,SAAS,EAAC,oBAAoB;YAC9BE,QAAQ,EAAE9G,eAAgB;YAAA0G,QAAA,EAC3B;UAED;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTlH,OAAA;YACEsH,OAAO,EAAEA,CAAA,KAAMvF,eAAe,CAAC,KAAK,CAAE;YACtCsF,SAAS,EAAC,mBAAmB;YAC7BE,QAAQ,EAAE9G,eAAgB;YAAA0G,QAAA,EAC3B;UAED;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL1F,QAAQ,gBACPxB,OAAA;MAAKqH,SAAS,EAAC,gBAAgB;MAAAF,QAAA,gBAC7BnH,OAAA;QAAAmH,QAAA,EAAI;MAAiB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BlH,OAAA;QAAAmH,QAAA,EAAG;MAAuE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9ElH,OAAA;QACEsH,OAAO,EAAEjD,YAAa;QACtBgD,SAAS,EAAC,eAAe;QAAAF,QAAA,EAC1B;MAED;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENlH,OAAA;MAAKqH,SAAS,EAAC,SAAS;MAAAF,QAAA,gBACtBnH,OAAA;QAAKqH,SAAS,EAAC,WAAW;QAAAF,QAAA,gBACxBnH,OAAA;UAAKqH,SAAS,EAAC,qBAAqB;UAAAF,QAAA,eAClCnH,OAAA;YACEqH,SAAS,EAAE,aAAa/F,cAAc,KAAK,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;YACtEgG,OAAO,EAAEA,CAAA,KAAM,CAAC7G,eAAe,IAAIyF,UAAU,CAAC,MAAM,CAAE;YACtDsB,IAAI,EAAC,QAAQ;YACbC,QAAQ,EAAE,CAAE;YACZC,KAAK,EAAC,wBAAmB;YAAAP,QAAA,eAEzBnH,OAAA;cAAAmH,QAAA,EAAK5G,YAAY,CAACqF;YAAI;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENlH,OAAA;UAAKqH,SAAS,EAAC,YAAY;UAAAF,QAAA,eACzBnH,OAAA;YAAKqH,SAAS,EAAC,SAAS;YAAAF,QAAA,EAAC;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAENlH,OAAA;UAAKqH,SAAS,EAAC,sBAAsB;UAAAF,QAAA,eACnCnH,OAAA;YACEqH,SAAS,EAAE,aAAa/F,cAAc,KAAK,OAAO,GAAG,UAAU,GAAG,EAAE,EAAG;YACvEgG,OAAO,EAAEA,CAAA,KAAM,CAAC7G,eAAe,IAAIyF,UAAU,CAAC,OAAO,CAAE;YACvDsB,IAAI,EAAC,QAAQ;YACbC,QAAQ,EAAE,CAAE;YACZC,KAAK,EAAC,wBAAmB;YAAAP,QAAA,eAEzBnH,OAAA;cAAAmH,QAAA,EAAK5G,YAAY,CAACsF;YAAK;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENlH,OAAA;QAAKqH,SAAS,EAAC,gBAAgB;QAAAF,QAAA,gBAC7BnH,OAAA;UACEqH,SAAS,EAAE,wBAAwB/F,cAAc,KAAK,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;UACjFgG,OAAO,EAAEA,CAAA,KAAM,CAAC7G,eAAe,IAAIyF,UAAU,CAAC,MAAM,CAAE;UACtDqB,QAAQ,EAAE9G,eAAgB;UAC1BiH,KAAK,EAAC,eAAe;UAAAP,QAAA,EACtB;QAED;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlH,OAAA;UACEqH,SAAS,EAAE,wBAAwB/F,cAAc,KAAK,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;UACjFgG,OAAO,EAAEA,CAAA,KAAM,CAAC7G,eAAe,IAAIyF,UAAU,CAAC,MAAM,CAAE;UACtDqB,QAAQ,EAAE9G,eAAgB;UAC1BiH,KAAK,EAAC,eAAe;UAAAP,QAAA,EACtB;QAED;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDlH,OAAA;MAAKqH,SAAS,EAAC,yBAAyB;MAAAF,QAAA,eACtCnH,OAAA;QAAAmH,QAAA,EAAG;MAAuD;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAENlH,OAAA;MAAKqH,SAAS,EAAC,gBAAgB;MAAAF,QAAA,eAC7BnH,OAAA;QAAAmH,QAAA,EAAG;MAA6D;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5G,EAAA,CA1WQL,UAAU;AAAA0H,EAAA,GAAV1H,UAAU;AA4WnB,eAAeA,UAAU;AAAC,IAAA0H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}