{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/App.js\",\n  _s = $RefreshSig$();\n/**\n * @module App\n * @description Main application component for the cat name tournament app.\n * Manages the overall application state and tournament flow, including:\n * - Name input and management\n * - Tournament progression\n * - Rating calculations\n * - Results display\n * \n * Uses the Elo rating system for ranking and a custom sorting algorithm\n * for determining the best cat name through user preferences.\n * \n * @component\n * @returns {JSX.Element} The complete application UI\n */\n\nimport React, { useState } from 'react';\nimport { Tournament, Results, ErrorBoundary, Login, Profile, TournamentSetup } from './components';\nimport useUserSession from './hooks/useUserSession';\nimport useSupabaseStorage from './supabase/useSupabaseStorage';\nimport { supabase } from './supabase/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    userName,\n    isLoggedIn,\n    login,\n    logout,\n    session\n  } = useUserSession();\n  const [ratings, setRatings] = useState({});\n  const [view, setView] = useState('tournament');\n  const [tournamentComplete, setTournamentComplete] = useState(false);\n  const [tournamentNames, setTournamentNames] = useState(null);\n  console.log('App - Current ratings:', ratings);\n  console.log('App - Tournament names:', tournamentNames);\n  const handleTournamentComplete = finalRatings => {\n    // Merge new ratings with existing ones, preserving wins/losses\n    const updatedRatings = {\n      ...ratings\n    };\n    finalRatings.forEach(({\n      name,\n      rating\n    }) => {\n      const existingRating = typeof updatedRatings[name] === 'object' ? updatedRatings[name] : {\n        rating: updatedRatings[name] || 1500,\n        wins: 0,\n        losses: 0\n      };\n\n      // If rating improved, count as a win, otherwise a loss\n      const isImprovement = rating > (existingRating.rating || 1500);\n      updatedRatings[name] = {\n        rating: Math.round(rating),\n        wins: (existingRating.wins || 0) + (isImprovement ? 1 : 0),\n        losses: (existingRating.losses || 0) + (isImprovement ? 0 : 1)\n      };\n    });\n    setRatings(updatedRatings);\n    setTournamentComplete(true);\n  };\n  const handleStartNewTournament = () => {\n    setTournamentComplete(false);\n    setTournamentNames(null);\n    setView('tournament');\n  };\n  const handleTournamentSetup = names => {\n    console.log('App - Setting up tournament with names:', names);\n    setTournamentNames(names);\n  };\n  const handleUpdateRatings = adjustedRatings => {\n    // Ensure adjustedRatings is an array\n    const ratingsArray = Array.isArray(adjustedRatings) ? adjustedRatings : Object.entries(adjustedRatings).map(([name, rating]) => ({\n      name,\n      rating: typeof rating === 'object' ? rating.rating : rating\n    }));\n\n    // Convert array to object format and merge with existing ratings\n    const updatedRatings = {\n      ...ratings\n    };\n    ratingsArray.forEach(({\n      name,\n      rating,\n      wins,\n      losses\n    }) => {\n      const existingRating = typeof updatedRatings[name] === 'object' ? updatedRatings[name] : {\n        rating: updatedRatings[name] || 1500,\n        wins: 0,\n        losses: 0\n      };\n      updatedRatings[name] = {\n        rating: Math.round(rating),\n        wins: wins || existingRating.wins || 0,\n        losses: losses || existingRating.losses || 0,\n        name_id: existingRating.name_id // Preserve name_id\n      };\n    });\n    setRatings(updatedRatings);\n\n    // Update ratings in Supabase\n    const updateRatings = async () => {\n      try {\n        // First try to delete existing records\n        const {\n          error: deleteError\n        } = await supabase.from('cat_name_ratings').delete().in('name_id', Object.entries(updatedRatings).map(([_, data]) => data.name_id));\n        if (deleteError) {\n          console.warn('Error deleting existing ratings:', deleteError);\n        }\n\n        // Then insert new records\n        const {\n          error: insertError\n        } = await supabase.from('cat_name_ratings').insert(Object.entries(updatedRatings).map(([name, data]) => ({\n          name_id: data.name_id,\n          rating: data.rating,\n          updated_at: new Date().toISOString()\n        })));\n        if (insertError) throw insertError;\n      } catch (error) {\n        console.error('Error updating ratings:', error);\n        throw error;\n      }\n    };\n\n    // Execute the update\n    updateRatings();\n  };\n  const handleLogout = async () => {\n    logout();\n  };\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  }\n  const renderMainContent = () => {\n    if (view === 'profile') {\n      return /*#__PURE__*/_jsxDEV(Profile, {\n        userName: userName,\n        onStartNewTournament: handleStartNewTournament,\n        ratings: ratings,\n        onUpdateRatings: handleUpdateRatings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this);\n    }\n    if (tournamentComplete) {\n      return /*#__PURE__*/_jsxDEV(Results, {\n        ratings: ratings,\n        onStartNew: handleStartNewTournament,\n        userName: userName,\n        onUpdateRatings: handleUpdateRatings,\n        currentTournamentNames: tournamentNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this);\n    }\n    if (!tournamentNames) {\n      return /*#__PURE__*/_jsxDEV(TournamentSetup, {\n        onStart: handleTournamentSetup,\n        userName: userName,\n        existingRatings: ratings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Tournament, {\n      onComplete: handleTournamentComplete,\n      existingRatings: ratings,\n      names: tournamentNames,\n      userName: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-background\",\n        style: {\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/cat.gif)`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/images/cat.gif`,\n        alt: \"Cat animation\",\n        className: \"header-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cat Name Picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setView('tournament'),\n            className: view === 'tournament' ? 'active' : '',\n            children: \"Tournament\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setView('profile'),\n            className: view === 'profile' ? 'active' : '',\n            children: \"My Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-welcome\",\n          children: [\"Welcome, \", userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: renderMainContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E84eBk8RR1At08JZ0cGFZmYQ3Qc=\", false, function () {\n  return [useUserSession];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Tournament","Results","ErrorBoundary","Login","Profile","TournamentSetup","useUserSession","useSupabaseStorage","supabase","jsxDEV","_jsxDEV","App","_s","userName","isLoggedIn","login","logout","session","ratings","setRatings","view","setView","tournamentComplete","setTournamentComplete","tournamentNames","setTournamentNames","console","log","handleTournamentComplete","finalRatings","updatedRatings","forEach","name","rating","existingRating","wins","losses","isImprovement","Math","round","handleStartNewTournament","handleTournamentSetup","names","handleUpdateRatings","adjustedRatings","ratingsArray","Array","isArray","Object","entries","map","name_id","updateRatings","error","deleteError","from","delete","in","_","data","warn","insertError","insert","updated_at","Date","toISOString","handleLogout","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","renderMainContent","onStartNewTournament","onUpdateRatings","onStartNew","currentTournamentNames","onStart","existingRatings","onComplete","className","children","style","backgroundImage","process","env","PUBLIC_URL","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/App.js"],"sourcesContent":["/**\n * @module App\n * @description Main application component for the cat name tournament app.\n * Manages the overall application state and tournament flow, including:\n * - Name input and management\n * - Tournament progression\n * - Rating calculations\n * - Results display\n * \n * Uses the Elo rating system for ranking and a custom sorting algorithm\n * for determining the best cat name through user preferences.\n * \n * @component\n * @returns {JSX.Element} The complete application UI\n */\n\nimport React, { useState } from 'react';\nimport { \n  Tournament, \n  Results, \n  ErrorBoundary,\n  Login,\n  Profile,\n  TournamentSetup\n} from './components';\nimport useUserSession from './hooks/useUserSession';\nimport useSupabaseStorage from './supabase/useSupabaseStorage';\nimport { supabase } from './supabase/supabaseClient';\n\nfunction App() {\n  const { userName, isLoggedIn, login, logout, session } = useUserSession();\n  const [ratings, setRatings] = useState({});\n  const [view, setView] = useState('tournament');\n  const [tournamentComplete, setTournamentComplete] = useState(false);\n  const [tournamentNames, setTournamentNames] = useState(null);\n\n  console.log('App - Current ratings:', ratings);\n  console.log('App - Tournament names:', tournamentNames);\n\n  const handleTournamentComplete = (finalRatings) => {\n    // Merge new ratings with existing ones, preserving wins/losses\n    const updatedRatings = { ...ratings };\n    finalRatings.forEach(({ name, rating }) => {\n      const existingRating = typeof updatedRatings[name] === 'object' \n        ? updatedRatings[name] \n        : { rating: updatedRatings[name] || 1500, wins: 0, losses: 0 };\n      \n      // If rating improved, count as a win, otherwise a loss\n      const isImprovement = rating > (existingRating.rating || 1500);\n      updatedRatings[name] = {\n        rating: Math.round(rating),\n        wins: (existingRating.wins || 0) + (isImprovement ? 1 : 0),\n        losses: (existingRating.losses || 0) + (isImprovement ? 0 : 1)\n      };\n    });\n\n    setRatings(updatedRatings);\n    setTournamentComplete(true);\n  };\n\n  const handleStartNewTournament = () => {\n    setTournamentComplete(false);\n    setTournamentNames(null);\n    setView('tournament');\n  };\n\n  const handleTournamentSetup = (names) => {\n    console.log('App - Setting up tournament with names:', names);\n    setTournamentNames(names);\n  };\n\n  const handleUpdateRatings = (adjustedRatings) => {\n    // Ensure adjustedRatings is an array\n    const ratingsArray = Array.isArray(adjustedRatings) \n      ? adjustedRatings \n      : Object.entries(adjustedRatings).map(([name, rating]) => ({\n          name,\n          rating: typeof rating === 'object' ? rating.rating : rating\n        }));\n\n    // Convert array to object format and merge with existing ratings\n    const updatedRatings = { ...ratings };\n    ratingsArray.forEach(({ name, rating, wins, losses }) => {\n      const existingRating = typeof updatedRatings[name] === 'object'\n        ? updatedRatings[name]\n        : { rating: updatedRatings[name] || 1500, wins: 0, losses: 0 };\n\n      updatedRatings[name] = {\n        rating: Math.round(rating),\n        wins: wins || existingRating.wins || 0,\n        losses: losses || existingRating.losses || 0,\n        name_id: existingRating.name_id // Preserve name_id\n      };\n    });\n\n    setRatings(updatedRatings);\n\n    // Update ratings in Supabase\n    const updateRatings = async () => {\n      try {\n        // First try to delete existing records\n        const { error: deleteError } = await supabase\n          .from('cat_name_ratings')\n          .delete()\n          .in('name_id', Object.entries(updatedRatings).map(([_, data]) => data.name_id));\n\n        if (deleteError) {\n          console.warn('Error deleting existing ratings:', deleteError);\n        }\n\n        // Then insert new records\n        const { error: insertError } = await supabase\n          .from('cat_name_ratings')\n          .insert(\n            Object.entries(updatedRatings).map(([name, data]) => ({\n              name_id: data.name_id,\n              rating: data.rating,\n              updated_at: new Date().toISOString()\n            }))\n          );\n\n        if (insertError) throw insertError;\n      } catch (error) {\n        console.error('Error updating ratings:', error);\n        throw error;\n      }\n    };\n\n    // Execute the update\n    updateRatings();\n  };\n\n  const handleLogout = async () => {\n    logout();\n  };\n\n  if (!isLoggedIn) {\n    return <Login onLogin={login} />;\n  }\n\n  const renderMainContent = () => {\n    if (view === 'profile') {\n      return (\n        <Profile \n          userName={userName}\n          onStartNewTournament={handleStartNewTournament}\n          ratings={ratings}\n          onUpdateRatings={handleUpdateRatings}\n        />\n      );\n    }\n\n    if (tournamentComplete) {\n      return (\n        <Results \n          ratings={ratings}\n          onStartNew={handleStartNewTournament}\n          userName={userName}\n          onUpdateRatings={handleUpdateRatings}\n          currentTournamentNames={tournamentNames}\n        />\n      );\n    }\n\n    if (!tournamentNames) {\n      return (\n        <TournamentSetup \n          onStart={handleTournamentSetup}\n          userName={userName}\n          existingRatings={ratings}\n        />\n      );\n    }\n\n    return (\n      <Tournament \n        onComplete={handleTournamentComplete}\n        existingRatings={ratings}\n        names={tournamentNames}\n        userName={userName}\n      />\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      <header>\n        <div \n          className=\"header-background\"\n          style={{ \n            backgroundImage: `url(${process.env.PUBLIC_URL}/images/cat.gif)` \n          }}\n        ></div>\n        <img src={`${process.env.PUBLIC_URL}/images/cat.gif`} alt=\"Cat animation\" className=\"header-image\" />\n        <h1>Cat Name Picker</h1>\n        <div className=\"user-controls\">\n          <div className=\"nav-menu\">\n            <button \n              onClick={() => setView('tournament')}\n              className={view === 'tournament' ? 'active' : ''}\n            >\n              Tournament\n            </button>\n            <button \n              onClick={() => setView('profile')}\n              className={view === 'profile' ? 'active' : ''}\n            >\n              My Profile\n            </button>\n          </div>\n          <span className=\"user-welcome\">Welcome, {userName}!</span>\n          <button onClick={handleLogout} className=\"logout-button\">\n            Logout\n          </button>\n        </div>\n      </header>\n\n      <main>\n        <ErrorBoundary>\n          {renderMainContent()}\n        </ErrorBoundary>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,UAAU,EACVC,OAAO,EACPC,aAAa,EACbC,KAAK,EACLC,OAAO,EACPC,eAAe,QACV,cAAc;AACrB,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,SAASC,QAAQ,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGX,cAAc,CAAC,CAAC;EACzE,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,YAAY,CAAC;EAC9C,MAAM,CAACuB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE5D2B,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAET,OAAO,CAAC;EAC9CQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,eAAe,CAAC;EAEvD,MAAMI,wBAAwB,GAAIC,YAAY,IAAK;IACjD;IACA,MAAMC,cAAc,GAAG;MAAE,GAAGZ;IAAQ,CAAC;IACrCW,YAAY,CAACE,OAAO,CAAC,CAAC;MAAEC,IAAI;MAAEC;IAAO,CAAC,KAAK;MACzC,MAAMC,cAAc,GAAG,OAAOJ,cAAc,CAACE,IAAI,CAAC,KAAK,QAAQ,GAC3DF,cAAc,CAACE,IAAI,CAAC,GACpB;QAAEC,MAAM,EAAEH,cAAc,CAACE,IAAI,CAAC,IAAI,IAAI;QAAEG,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC;;MAEhE;MACA,MAAMC,aAAa,GAAGJ,MAAM,IAAIC,cAAc,CAACD,MAAM,IAAI,IAAI,CAAC;MAC9DH,cAAc,CAACE,IAAI,CAAC,GAAG;QACrBC,MAAM,EAAEK,IAAI,CAACC,KAAK,CAACN,MAAM,CAAC;QAC1BE,IAAI,EAAE,CAACD,cAAc,CAACC,IAAI,IAAI,CAAC,KAAKE,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1DD,MAAM,EAAE,CAACF,cAAc,CAACE,MAAM,IAAI,CAAC,KAAKC,aAAa,GAAG,CAAC,GAAG,CAAC;MAC/D,CAAC;IACH,CAAC,CAAC;IAEFlB,UAAU,CAACW,cAAc,CAAC;IAC1BP,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMiB,wBAAwB,GAAGA,CAAA,KAAM;IACrCjB,qBAAqB,CAAC,KAAK,CAAC;IAC5BE,kBAAkB,CAAC,IAAI,CAAC;IACxBJ,OAAO,CAAC,YAAY,CAAC;EACvB,CAAC;EAED,MAAMoB,qBAAqB,GAAIC,KAAK,IAAK;IACvChB,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEe,KAAK,CAAC;IAC7DjB,kBAAkB,CAACiB,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,mBAAmB,GAAIC,eAAe,IAAK;IAC/C;IACA,MAAMC,YAAY,GAAGC,KAAK,CAACC,OAAO,CAACH,eAAe,CAAC,GAC/CA,eAAe,GACfI,MAAM,CAACC,OAAO,CAACL,eAAe,CAAC,CAACM,GAAG,CAAC,CAAC,CAAClB,IAAI,EAAEC,MAAM,CAAC,MAAM;MACvDD,IAAI;MACJC,MAAM,EAAE,OAAOA,MAAM,KAAK,QAAQ,GAAGA,MAAM,CAACA,MAAM,GAAGA;IACvD,CAAC,CAAC,CAAC;;IAEP;IACA,MAAMH,cAAc,GAAG;MAAE,GAAGZ;IAAQ,CAAC;IACrC2B,YAAY,CAACd,OAAO,CAAC,CAAC;MAAEC,IAAI;MAAEC,MAAM;MAAEE,IAAI;MAAEC;IAAO,CAAC,KAAK;MACvD,MAAMF,cAAc,GAAG,OAAOJ,cAAc,CAACE,IAAI,CAAC,KAAK,QAAQ,GAC3DF,cAAc,CAACE,IAAI,CAAC,GACpB;QAAEC,MAAM,EAAEH,cAAc,CAACE,IAAI,CAAC,IAAI,IAAI;QAAEG,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC;MAEhEN,cAAc,CAACE,IAAI,CAAC,GAAG;QACrBC,MAAM,EAAEK,IAAI,CAACC,KAAK,CAACN,MAAM,CAAC;QAC1BE,IAAI,EAAEA,IAAI,IAAID,cAAc,CAACC,IAAI,IAAI,CAAC;QACtCC,MAAM,EAAEA,MAAM,IAAIF,cAAc,CAACE,MAAM,IAAI,CAAC;QAC5Ce,OAAO,EAAEjB,cAAc,CAACiB,OAAO,CAAC;MAClC,CAAC;IACH,CAAC,CAAC;IAEFhC,UAAU,CAACW,cAAc,CAAC;;IAE1B;IACA,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAM;UAAEC,KAAK,EAAEC;QAAY,CAAC,GAAG,MAAM9C,QAAQ,CAC1C+C,IAAI,CAAC,kBAAkB,CAAC,CACxBC,MAAM,CAAC,CAAC,CACRC,EAAE,CAAC,SAAS,EAAET,MAAM,CAACC,OAAO,CAACnB,cAAc,CAAC,CAACoB,GAAG,CAAC,CAAC,CAACQ,CAAC,EAAEC,IAAI,CAAC,KAAKA,IAAI,CAACR,OAAO,CAAC,CAAC;QAEjF,IAAIG,WAAW,EAAE;UACf5B,OAAO,CAACkC,IAAI,CAAC,kCAAkC,EAAEN,WAAW,CAAC;QAC/D;;QAEA;QACA,MAAM;UAAED,KAAK,EAAEQ;QAAY,CAAC,GAAG,MAAMrD,QAAQ,CAC1C+C,IAAI,CAAC,kBAAkB,CAAC,CACxBO,MAAM,CACLd,MAAM,CAACC,OAAO,CAACnB,cAAc,CAAC,CAACoB,GAAG,CAAC,CAAC,CAAClB,IAAI,EAAE2B,IAAI,CAAC,MAAM;UACpDR,OAAO,EAAEQ,IAAI,CAACR,OAAO;UACrBlB,MAAM,EAAE0B,IAAI,CAAC1B,MAAM;UACnB8B,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACrC,CAAC,CAAC,CACJ,CAAC;QAEH,IAAIJ,WAAW,EAAE,MAAMA,WAAW;MACpC,CAAC,CAAC,OAAOR,KAAK,EAAE;QACd3B,OAAO,CAAC2B,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,MAAMA,KAAK;MACb;IACF,CAAC;;IAED;IACAD,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BlD,MAAM,CAAC,CAAC;EACV,CAAC;EAED,IAAI,CAACF,UAAU,EAAE;IACf,oBAAOJ,OAAA,CAACP,KAAK;MAACgE,OAAO,EAAEpD;IAAM;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClC;EAEA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIpD,IAAI,KAAK,SAAS,EAAE;MACtB,oBACEV,OAAA,CAACN,OAAO;QACNS,QAAQ,EAAEA,QAAS;QACnB4D,oBAAoB,EAAEjC,wBAAyB;QAC/CtB,OAAO,EAAEA,OAAQ;QACjBwD,eAAe,EAAE/B;MAAoB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAEN;IAEA,IAAIjD,kBAAkB,EAAE;MACtB,oBACEZ,OAAA,CAACT,OAAO;QACNiB,OAAO,EAAEA,OAAQ;QACjByD,UAAU,EAAEnC,wBAAyB;QACrC3B,QAAQ,EAAEA,QAAS;QACnB6D,eAAe,EAAE/B,mBAAoB;QACrCiC,sBAAsB,EAAEpD;MAAgB;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAEN;IAEA,IAAI,CAAC/C,eAAe,EAAE;MACpB,oBACEd,OAAA,CAACL,eAAe;QACdwE,OAAO,EAAEpC,qBAAsB;QAC/B5B,QAAQ,EAAEA,QAAS;QACnBiE,eAAe,EAAE5D;MAAQ;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAEN;IAEA,oBACE7D,OAAA,CAACV,UAAU;MACT+E,UAAU,EAAEnD,wBAAyB;MACrCkD,eAAe,EAAE5D,OAAQ;MACzBwB,KAAK,EAAElB,eAAgB;MACvBX,QAAQ,EAAEA;IAAS;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEN,CAAC;EAED,oBACE7D,OAAA;IAAKsE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvE,OAAA;MAAAuE,QAAA,gBACEvE,OAAA;QACEsE,SAAS,EAAC,mBAAmB;QAC7BE,KAAK,EAAE;UACLC,eAAe,EAAE,OAAOC,OAAO,CAACC,GAAG,CAACC,UAAU;QAChD;MAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACP7D,OAAA;QAAK6E,GAAG,EAAE,GAAGH,OAAO,CAACC,GAAG,CAACC,UAAU,iBAAkB;QAACE,GAAG,EAAC,eAAe;QAACR,SAAS,EAAC;MAAc;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrG7D,OAAA;QAAAuE,QAAA,EAAI;MAAe;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB7D,OAAA;QAAKsE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BvE,OAAA;UAAKsE,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBvE,OAAA;YACE+E,OAAO,EAAEA,CAAA,KAAMpE,OAAO,CAAC,YAAY,CAAE;YACrC2D,SAAS,EAAE5D,IAAI,KAAK,YAAY,GAAG,QAAQ,GAAG,EAAG;YAAA6D,QAAA,EAClD;UAED;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7D,OAAA;YACE+E,OAAO,EAAEA,CAAA,KAAMpE,OAAO,CAAC,SAAS,CAAE;YAClC2D,SAAS,EAAE5D,IAAI,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;YAAA6D,QAAA,EAC/C;UAED;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN7D,OAAA;UAAMsE,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,WAAS,EAACpE,QAAQ,EAAC,GAAC;QAAA;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1D7D,OAAA;UAAQ+E,OAAO,EAAEvB,YAAa;UAACc,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAEzD;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAET7D,OAAA;MAAAuE,QAAA,eACEvE,OAAA,CAACR,aAAa;QAAA+E,QAAA,EACXT,iBAAiB,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC3D,EAAA,CAnMQD,GAAG;EAAA,QAC+CL,cAAc;AAAA;AAAAoF,EAAA,GADhE/E,GAAG;AAqMZ,eAAeA,GAAG;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}