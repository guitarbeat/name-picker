{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js\",\n  _s = $RefreshSig$();\n/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport { supabase } from '../../supabase/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tournament({\n  onComplete,\n  existingRatings = [],\n  names = [],\n  userName\n}) {\n  _s();\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  useEffect(() => {\n    checkForSavedProgress();\n  }, []);\n  const checkForSavedProgress = async () => {\n    if (!userName) return;\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('tournament_progress').select('*').eq('user_name', userName).single();\n      if (!error && data) {\n        const shouldResume = window.confirm('You have a saved tournament. Would you like to resume it?');\n        if (shouldResume) {\n          resumeTournament(data);\n        } else {\n          await clearProgress();\n          startNewTournament();\n        }\n      } else {\n        startNewTournament();\n      }\n    } catch (err) {\n      console.error('Error checking progress:', err);\n      startNewTournament();\n    }\n  };\n  const resumeTournament = savedData => {\n    setRoundNumber(savedData.round_number);\n    setCurrentMatchNumber(savedData.current_match);\n    setTotalMatches(savedData.total_matches);\n    const newSorter = new PreferenceSorter(savedData.names);\n    if (savedData.sorter_state) {\n      newSorter.setState(savedData.sorter_state);\n    }\n    setSorter(newSorter);\n    runTournament(newSorter);\n  };\n  const saveProgress = async () => {\n    if (!userName || !sorter) return false;\n    try {\n      const progress = {\n        user_name: userName,\n        round_number: roundNumber,\n        current_match: currentMatchNumber,\n        total_matches: totalMatches,\n        names: names,\n        sorter_state: sorter.getState(),\n        updated_at: new Date().toISOString()\n      };\n      const {\n        error\n      } = await supabase.from('tournament_progress').upsert(progress, {\n        onConflict: 'user_name',\n        returning: 'minimal'\n      });\n      if (error) throw error;\n      return true;\n    } catch (err) {\n      console.error('Error saving progress:', err);\n      return false;\n    }\n  };\n  const clearProgress = async () => {\n    if (!userName) return;\n    try {\n      await supabase.from('tournament_progress').delete().eq('user_name', userName);\n    } catch (err) {\n      console.error('Error clearing progress:', err);\n    }\n  };\n  const handlePause = async () => {\n    const saved = await saveProgress();\n    if (saved) {\n      setIsPaused(true);\n      alert('Progress saved! You can safely leave and come back later.');\n    } else {\n      alert('Error saving progress. Please try again.');\n    }\n  };\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n    runTournament(newSorter);\n  };\n  const runTournament = async tournamentSorter => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({\n          left,\n          right\n        });\n        return new Promise(resolve => {\n          setResolveVote(() => resolve);\n        });\n      });\n      await clearProgress();\n      onComplete(sortedResults.map((name, index) => {\n        var _existingRatings$find;\n        return {\n          name,\n          rating: (((_existingRatings$find = existingRatings.find(r => r.name === name)) === null || _existingRatings$find === void 0 ? void 0 : _existingRatings$find.rating) || 1500) - index * 10\n        };\n      }));\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n  const handleVote = useCallback(result => {\n    if (isTransitioning || !resolveVote) return;\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    const voteValue = result === 'left' ? -1 : result === 'right' ? 1 : result === 'both' ? 0 : 2;\n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (isTransitioning) return;\n      switch (event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n  if (!currentMatch) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading tournament...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 29\n  }, this);\n  const progress = Math.round(currentMatchNumber / totalMatches * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"round-number\",\n          children: [\"Round \", roundNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"match-count\",\n          children: [\"Match \", currentMatchNumber, \" of \", totalMatches]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-info\",\n        children: [progress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePause,\n        className: \"pause-button\",\n        disabled: isTransitioning,\n        children: \"Save & Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), isPaused ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paused-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tournament Paused\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your progress has been saved. You can safely leave and come back later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResume,\n        className: \"resume-button\",\n        children: \"Resume Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"names-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'left' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('left'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2190 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.left\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vs-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vs-text\",\n            children: \"vs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'right' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('right'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2192 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.right\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('both'),\n          disabled: isTransitioning,\n          title: \"Press 'B' key\",\n          children: \"Like Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('none'),\n          disabled: isTransitioning,\n          title: \"Press 'N' key\",\n          children: \"No Opinion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on a name to choose it, or select an option below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-hints\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keyboard shortcuts: \\u2190 Left, \\u2192 Right, B (Both), N (No Opinion)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournament, \"Zm+bqiBJWsBDSLSYOQf4Q7N+SFw=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","PreferenceSorter","EloRating","supabase","jsxDEV","_jsxDEV","Tournament","onComplete","existingRatings","names","userName","_s","currentMatch","setCurrentMatch","isTransitioning","setIsTransitioning","roundNumber","setRoundNumber","currentMatchNumber","setCurrentMatchNumber","totalMatches","setTotalMatches","sorter","setSorter","elo","resolveVote","setResolveVote","selectedOption","setSelectedOption","isPaused","setIsPaused","checkForSavedProgress","data","error","from","select","eq","single","shouldResume","window","confirm","resumeTournament","clearProgress","startNewTournament","err","console","savedData","round_number","current_match","total_matches","newSorter","sorter_state","setState","runTournament","saveProgress","progress","user_name","getState","updated_at","Date","toISOString","upsert","onConflict","returning","delete","handlePause","saved","alert","handleResume","length","n","estimatedMatches","Math","ceil","log2","tournamentSorter","sortedResults","sort","left","right","Promise","resolve","map","name","index","_existingRatings$find","rating","find","r","handleVote","result","voteValue","prev","setTimeout","handleKeyPress","event","key","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","round","className","onClick","disabled","role","tabIndex","title","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js"],"sourcesContent":["/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport { supabase } from '../../supabase/supabaseClient';\n\nfunction Tournament({ onComplete, existingRatings = [], names = [], userName }) {\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n\n  useEffect(() => {\n    checkForSavedProgress();\n  }, []);\n\n  const checkForSavedProgress = async () => {\n    if (!userName) return;\n\n    try {\n      const { data, error } = await supabase\n        .from('tournament_progress')\n        .select('*')\n        .eq('user_name', userName)\n        .single();\n\n      if (!error && data) {\n        const shouldResume = window.confirm(\n          'You have a saved tournament. Would you like to resume it?'\n        );\n\n        if (shouldResume) {\n          resumeTournament(data);\n        } else {\n          await clearProgress();\n          startNewTournament();\n        }\n      } else {\n        startNewTournament();\n      }\n    } catch (err) {\n      console.error('Error checking progress:', err);\n      startNewTournament();\n    }\n  };\n\n  const resumeTournament = (savedData) => {\n    setRoundNumber(savedData.round_number);\n    setCurrentMatchNumber(savedData.current_match);\n    setTotalMatches(savedData.total_matches);\n    \n    const newSorter = new PreferenceSorter(savedData.names);\n    if (savedData.sorter_state) {\n      newSorter.setState(savedData.sorter_state);\n    }\n    setSorter(newSorter);\n    runTournament(newSorter);\n  };\n\n  const saveProgress = async () => {\n    if (!userName || !sorter) return false;\n\n    try {\n      const progress = {\n        user_name: userName,\n        round_number: roundNumber,\n        current_match: currentMatchNumber,\n        total_matches: totalMatches,\n        names: names,\n        sorter_state: sorter.getState(),\n        updated_at: new Date().toISOString()\n      };\n\n      const { error } = await supabase\n        .from('tournament_progress')\n        .upsert(progress, { \n          onConflict: 'user_name',\n          returning: 'minimal' \n        });\n\n      if (error) throw error;\n      return true;\n    } catch (err) {\n      console.error('Error saving progress:', err);\n      return false;\n    }\n  };\n\n  const clearProgress = async () => {\n    if (!userName) return;\n    \n    try {\n      await supabase\n        .from('tournament_progress')\n        .delete()\n        .eq('user_name', userName);\n    } catch (err) {\n      console.error('Error clearing progress:', err);\n    }\n  };\n\n  const handlePause = async () => {\n    const saved = await saveProgress();\n    if (saved) {\n      setIsPaused(true);\n      alert('Progress saved! You can safely leave and come back later.');\n    } else {\n      alert('Error saving progress. Please try again.');\n    }\n  };\n\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    \n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n\n    runTournament(newSorter);\n  };\n\n  const runTournament = async (tournamentSorter) => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({ left, right });\n        return new Promise((resolve) => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      await clearProgress();\n      onComplete(sortedResults.map((name, index) => ({\n        name,\n        rating: (existingRatings.find(r => r.name === name)?.rating || 1500) - (index * 10)\n      })));\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n\n  const handleVote = useCallback((result) => {\n    if (isTransitioning || !resolveVote) return;\n\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    \n    const voteValue = result === 'left' ? -1 : result === 'right' ? 1 : result === 'both' ? 0 : 2;\n    resolveVote(voteValue);\n\n    setCurrentMatchNumber(prev => prev + 1);\n    \n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (isTransitioning) return;\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  if (!currentMatch) return <div>Loading tournament...</div>;\n\n  const progress = Math.round((currentMatchNumber / totalMatches) * 100);\n\n  return (\n    <div className=\"tournament\">\n      <div className=\"progress-info\">\n        <div className=\"round-info\">\n          <span className=\"round-number\">Round {roundNumber}</span>\n          <span className=\"match-count\">Match {currentMatchNumber} of {totalMatches}</span>\n        </div>\n        <div className=\"percentage-info\">{progress}% Complete</div>\n        <button \n          onClick={handlePause}\n          className=\"pause-button\"\n          disabled={isTransitioning}\n        >\n          Save & Pause\n        </button>\n      </div>\n\n      {isPaused ? (\n        <div className=\"paused-message\">\n          <h3>Tournament Paused</h3>\n          <p>Your progress has been saved. You can safely leave and come back later.</p>\n          <button \n            onClick={handleResume}\n            className=\"resume-button\"\n          >\n            Resume Now\n          </button>\n        </div>\n      ) : (\n        <div className=\"matchup\">\n          <div className=\"names-row\">\n            <div className=\"name-container left\">\n              <div \n                className={`name-card ${selectedOption === 'left' ? 'selected' : ''}`}\n                onClick={() => !isTransitioning && handleVote('left')}\n                role=\"button\"\n                tabIndex={0}\n                title=\"Press ← arrow key\"\n              >\n                <h3>{currentMatch.left}</h3>\n              </div>\n            </div>\n\n            <div className=\"vs-section\">\n              <div className=\"vs-text\">vs</div>\n            </div>\n\n            <div className=\"name-container right\">\n              <div \n                className={`name-card ${selectedOption === 'right' ? 'selected' : ''}`}\n                onClick={() => !isTransitioning && handleVote('right')}\n                role=\"button\"\n                tabIndex={0}\n                title=\"Press → arrow key\"\n              >\n                <h3>{currentMatch.right}</h3>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"center-options\">\n            <button\n              className={`extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('both')}\n              disabled={isTransitioning}\n              title=\"Press 'B' key\"\n            >\n              Like Both\n            </button>\n            <button\n              className={`extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('none')}\n              disabled={isTransitioning}\n              title=\"Press 'N' key\"\n            >\n              No Opinion\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"tournament-instructions\">\n        <p>Click on a name to choose it, or select an option below</p>\n      </div>\n\n      <div className=\"keyboard-hints\">\n        <p>Keyboard shortcuts: ← Left, → Right, B (Both), N (No Opinion)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Tournament; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}