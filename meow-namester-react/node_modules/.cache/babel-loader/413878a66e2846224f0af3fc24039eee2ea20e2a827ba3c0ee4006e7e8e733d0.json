{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js\",\n  _s = $RefreshSig$();\n/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport './Tournament.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tournament({\n  onComplete,\n  existingRatings = {},\n  names = [],\n  userName\n}) {\n  _s();\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showEndEarlyConfirmation, setShowEndEarlyConfirmation] = useState(false);\n  useEffect(() => {\n    startNewTournament();\n  }, []);\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n    runTournament(newSorter);\n  };\n  const runTournament = async tournamentSorter => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({\n          left,\n          right\n        });\n        return new Promise(resolve => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // Create ratings array with preserved order\n      const ratingsArray = sortedResults.map((name, index) => {\n        // Get existing rating or default\n        const currentRating = typeof existingRatings[name] === 'object' ? existingRatings[name].rating : existingRatings[name] || 1500;\n\n        // Calculate new rating based on position (lower index = better rank)\n        const totalNames = sortedResults.length;\n        const position = index;\n        const ratingSpread = 500; // Total rating spread from top to bottom\n        const positionValue = (totalNames - position - 1) / (totalNames - 1) * ratingSpread;\n\n        // Blend existing rating with new position-based rating\n        const blendFactor = 0.7; // 70% new rating, 30% existing rating\n        const newRating = Math.round(blendFactor * (1500 + positionValue) + (1 - blendFactor) * currentRating);\n\n        // Ensure rating stays within bounds\n        const finalRating = Math.max(1000, Math.min(2000, newRating));\n        return {\n          name,\n          rating: finalRating\n        };\n      });\n      onComplete(ratingsArray);\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n  const handleVote = useCallback(result => {\n    if (isTransitioning || !resolveVote) return;\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    let voteValue;\n    switch (result) {\n      case 'left':\n        voteValue = -1; // Prefer left name (negative means first name preferred)\n        break;\n      case 'right':\n        voteValue = 1; // Prefer right name (positive means second name preferred)\n        break;\n      case 'both':\n        voteValue = -0.1; // Very slight preference for first name\n        break;\n      case 'none':\n        voteValue = 0; // True neutral\n        break;\n      default:\n        voteValue = 0;\n    }\n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (isTransitioning) return;\n      switch (event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n  const handleEndEarly = () => {\n    setShowEndEarlyConfirmation(true);\n  };\n  const handleConfirmEnd = () => {\n    // Calculate current rankings based on completed matches\n    const currentRankings = sorter.getCurrentRankings().map((name, index) => {\n      // Get existing rating or default\n      const currentRating = typeof existingRatings[name] === 'object' ? existingRatings[name].rating : existingRatings[name] || 1500;\n\n      // Calculate new rating based on position (lower index = better rank)\n      const totalNames = names.length;\n      const position = index;\n      const ratingSpread = 500;\n      const positionValue = (totalNames - position - 1) / (totalNames - 1) * ratingSpread;\n\n      // Blend existing rating with new position-based rating\n      const blendFactor = 0.7;\n      const newRating = Math.round(blendFactor * (1500 + positionValue) + (1 - blendFactor) * currentRating);\n\n      // Ensure rating stays within bounds\n      const finalRating = Math.max(1000, Math.min(2000, newRating));\n      return {\n        name,\n        rating: finalRating\n      };\n    });\n    onComplete(currentRankings);\n  };\n  const handleCancelEnd = () => {\n    setShowEndEarlyConfirmation(false);\n  };\n  if (!currentMatch) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading tournament...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 29\n  }, this);\n  const progress = Math.round(currentMatchNumber / totalMatches * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"round-number\",\n          children: [\"Round \", roundNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"match-count\",\n          children: [\"Match \", currentMatchNumber, \" of \", totalMatches]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-info\",\n        children: [progress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-early-button\",\n        onClick: handleEndEarly,\n        disabled: isTransitioning,\n        children: \"End Tournament Early\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), showEndEarlyConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"end-early-confirmation\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to end the tournament early? Current progress will be saved and you can adjust rankings manually.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirm-end-button\",\n          onClick: handleConfirmEnd,\n          children: \"Yes, End Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-end-button\",\n          onClick: handleCancelEnd,\n          children: \"No, Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"names-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'left' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('left'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2190 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.left\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vs-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vs-text\",\n            children: \"vs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'right' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('right'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2192 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.right\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('both'),\n          disabled: isTransitioning,\n          title: \"Press 'B' key\",\n          children: \"Like Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('none'),\n          disabled: isTransitioning,\n          title: \"Press 'N' key\",\n          children: \"No Opinion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on a name to choose it, or select an option below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-hints\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keyboard shortcuts: \\u2190 Left, \\u2192 Right, B (Both), N (No Opinion)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournament, \"Sum6+g/TUv1/sSsfsvGAZZlFS4Y=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","PreferenceSorter","EloRating","jsxDEV","_jsxDEV","Tournament","onComplete","existingRatings","names","userName","_s","currentMatch","setCurrentMatch","isTransitioning","setIsTransitioning","roundNumber","setRoundNumber","currentMatchNumber","setCurrentMatchNumber","totalMatches","setTotalMatches","sorter","setSorter","elo","resolveVote","setResolveVote","selectedOption","setSelectedOption","showEndEarlyConfirmation","setShowEndEarlyConfirmation","startNewTournament","length","newSorter","n","estimatedMatches","Math","ceil","log2","runTournament","tournamentSorter","sortedResults","sort","left","right","Promise","resolve","ratingsArray","map","name","index","currentRating","rating","totalNames","position","ratingSpread","positionValue","blendFactor","newRating","round","finalRating","max","min","error","console","handleVote","result","voteValue","prev","setTimeout","handleKeyPress","event","key","window","addEventListener","removeEventListener","handleEndEarly","handleConfirmEnd","currentRankings","getCurrentRankings","handleCancelEnd","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","className","onClick","disabled","role","tabIndex","title","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js"],"sourcesContent":["/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport './Tournament.css';\n\nfunction Tournament({ onComplete, existingRatings = {}, names = [], userName }) {\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showEndEarlyConfirmation, setShowEndEarlyConfirmation] = useState(false);\n\n  useEffect(() => {\n    startNewTournament();\n  }, []);\n\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    \n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n\n    runTournament(newSorter);\n  };\n\n  const runTournament = async (tournamentSorter) => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({ left, right });\n        return new Promise((resolve) => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // Create ratings array with preserved order\n      const ratingsArray = sortedResults.map((name, index) => {\n        // Get existing rating or default\n        const currentRating = typeof existingRatings[name] === 'object'\n          ? existingRatings[name].rating\n          : (existingRatings[name] || 1500);\n        \n        // Calculate new rating based on position (lower index = better rank)\n        const totalNames = sortedResults.length;\n        const position = index;\n        const ratingSpread = 500; // Total rating spread from top to bottom\n        const positionValue = ((totalNames - position - 1) / (totalNames - 1)) * ratingSpread;\n        \n        // Blend existing rating with new position-based rating\n        const blendFactor = 0.7; // 70% new rating, 30% existing rating\n        const newRating = Math.round(\n          (blendFactor * (1500 + positionValue)) +\n          ((1 - blendFactor) * currentRating)\n        );\n\n        // Ensure rating stays within bounds\n        const finalRating = Math.max(1000, Math.min(2000, newRating));\n        \n        return {\n          name,\n          rating: finalRating\n        };\n      });\n\n      onComplete(ratingsArray);\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n\n  const handleVote = useCallback((result) => {\n    if (isTransitioning || !resolveVote) return;\n\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    \n    let voteValue;\n    switch (result) {\n      case 'left':\n        voteValue = -1;  // Prefer left name (negative means first name preferred)\n        break;\n      case 'right':\n        voteValue = 1;   // Prefer right name (positive means second name preferred)\n        break;\n      case 'both':\n        voteValue = -0.1;  // Very slight preference for first name\n        break;\n      case 'none':\n        voteValue = 0;    // True neutral\n        break;\n      default:\n        voteValue = 0;\n    }\n    \n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    \n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (isTransitioning) return;\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  const handleEndEarly = () => {\n    setShowEndEarlyConfirmation(true);\n  };\n\n  const handleConfirmEnd = () => {\n    // Calculate current rankings based on completed matches\n    const currentRankings = sorter.getCurrentRankings().map((name, index) => {\n      // Get existing rating or default\n      const currentRating = typeof existingRatings[name] === 'object'\n        ? existingRatings[name].rating\n        : (existingRatings[name] || 1500);\n      \n      // Calculate new rating based on position (lower index = better rank)\n      const totalNames = names.length;\n      const position = index;\n      const ratingSpread = 500;\n      const positionValue = ((totalNames - position - 1) / (totalNames - 1)) * ratingSpread;\n      \n      // Blend existing rating with new position-based rating\n      const blendFactor = 0.7;\n      const newRating = Math.round(\n        (blendFactor * (1500 + positionValue)) +\n        ((1 - blendFactor) * currentRating)\n      );\n\n      // Ensure rating stays within bounds\n      const finalRating = Math.max(1000, Math.min(2000, newRating));\n      \n      return {\n        name,\n        rating: finalRating\n      };\n    });\n\n    onComplete(currentRankings);\n  };\n\n  const handleCancelEnd = () => {\n    setShowEndEarlyConfirmation(false);\n  };\n\n  if (!currentMatch) return <div>Loading tournament...</div>;\n\n  const progress = Math.round((currentMatchNumber / totalMatches) * 100);\n\n  return (\n    <div className=\"tournament\">\n      <div className=\"progress-info\">\n        <div className=\"round-info\">\n          <span className=\"round-number\">Round {roundNumber}</span>\n          <span className=\"match-count\">Match {currentMatchNumber} of {totalMatches}</span>\n        </div>\n        <div className=\"percentage-info\">{progress}% Complete</div>\n      </div>\n\n      <div className=\"tournament-controls\">\n        <button \n          className=\"end-early-button\"\n          onClick={handleEndEarly}\n          disabled={isTransitioning}\n        >\n          End Tournament Early\n        </button>\n\n        {showEndEarlyConfirmation && (\n          <div className=\"end-early-confirmation\">\n            <p>Are you sure you want to end the tournament early? Current progress will be saved and you can adjust rankings manually.</p>\n            <button \n              className=\"confirm-end-button\"\n              onClick={handleConfirmEnd}\n            >\n              Yes, End Now\n            </button>\n            <button \n              className=\"cancel-end-button\"\n              onClick={handleCancelEnd}\n            >\n              No, Continue\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"matchup\">\n        <div className=\"names-row\">\n          <div className=\"name-container left\">\n            <div \n              className={`name-card ${selectedOption === 'left' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('left')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press ← arrow key\"\n            >\n              <h3>{currentMatch.left}</h3>\n            </div>\n          </div>\n\n          <div className=\"vs-section\">\n            <div className=\"vs-text\">vs</div>\n          </div>\n\n          <div className=\"name-container right\">\n            <div \n              className={`name-card ${selectedOption === 'right' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('right')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press → arrow key\"\n            >\n              <h3>{currentMatch.right}</h3>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"center-options\">\n          <button\n            className={`extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('both')}\n            disabled={isTransitioning}\n            title=\"Press 'B' key\"\n          >\n            Like Both\n          </button>\n          <button\n            className={`extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('none')}\n            disabled={isTransitioning}\n            title=\"Press 'N' key\"\n          >\n            No Opinion\n          </button>\n        </div>\n      </div>\n\n      <div className=\"tournament-instructions\">\n        <p>Click on a name to choose it, or select an option below</p>\n      </div>\n\n      <div className=\"keyboard-hints\">\n        <p>Keyboard shortcuts: ← Left, → Right, B (Both), N (No Opinion)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Tournament; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}