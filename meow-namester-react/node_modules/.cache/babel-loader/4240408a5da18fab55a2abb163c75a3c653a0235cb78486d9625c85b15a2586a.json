{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/TournamentSetup/TournamentSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabase/supabaseClient';\nimport './TournamentSetup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TournamentSetup({\n  onStart,\n  existingRatings = []\n}) {\n  _s();\n  const [availableNames, setAvailableNames] = useState([]);\n  const [selectedNames, setSelectedNames] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [validationError, setValidationError] = useState('');\n  const MIN_NAMES = 2;\n  useEffect(() => {\n    fetchNames();\n  }, []);\n  const fetchNames = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('name_options').select('id, name, description').order('name');\n      if (error) throw error;\n      setAvailableNames(data);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error fetching names:', err);\n      setError('Failed to load names. Please try again later.');\n      setIsLoading(false);\n    }\n  };\n  const toggleName = nameObj => {\n    setSelectedNames(prev => {\n      if (prev.some(n => n.id === nameObj.id)) {\n        const newSelection = prev.filter(n => n.id !== nameObj.id);\n        setValidationError(newSelection.length < MIN_NAMES ? 'At least 2 names are required' : '');\n        return newSelection;\n      }\n      setValidationError('');\n      return [...prev, nameObj];\n    });\n  };\n  const handleStart = () => {\n    if (selectedNames.length < MIN_NAMES) {\n      setValidationError('Please select at least 2 names to start the tournament.');\n      return;\n    }\n    setValidationError('');\n    onStart(selectedNames.map(n => n.name));\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading names...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament-setup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Name Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), validationError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"validation-error\",\n      children: validationError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-count\",\n      children: [\"Selected: \", selectedNames.length, \" names\", selectedNames.length > 0 && selectedNames.length < MIN_NAMES && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"warning\",\n        children: [\" (Select at least \", MIN_NAMES, \" names)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"names-grid\",\n      children: availableNames.map(nameObj => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => toggleName(nameObj),\n        className: `name-card ${selectedNames.some(n => n.id === nameObj.id) ? 'selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"name-text\",\n            children: nameObj.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"name-description\",\n            children: nameObj.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), selectedNames.some(n => n.id === nameObj.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"check-mark\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, nameObj.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        className: \"start-button\",\n        disabled: selectedNames.length < MIN_NAMES,\n        children: [\"Start Tournament with \", selectedNames.length, \" Names\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(TournamentSetup, \"my4gtjiZVpu7RKgtWlRGV7VMEWs=\");\n_c = TournamentSetup;\nexport default TournamentSetup;\nvar _c;\n$RefreshReg$(_c, \"TournamentSetup\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","TournamentSetup","onStart","existingRatings","_s","availableNames","setAvailableNames","selectedNames","setSelectedNames","isLoading","setIsLoading","error","setError","validationError","setValidationError","MIN_NAMES","fetchNames","data","from","select","order","err","console","toggleName","nameObj","prev","some","n","id","newSelection","filter","length","handleStart","map","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","description","disabled","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/TournamentSetup/TournamentSetup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabase/supabaseClient';\nimport './TournamentSetup.css';\n\nfunction TournamentSetup({ onStart, existingRatings = [] }) {\n  const [availableNames, setAvailableNames] = useState([]);\n  const [selectedNames, setSelectedNames] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [validationError, setValidationError] = useState('');\n\n  const MIN_NAMES = 2;\n\n  useEffect(() => {\n    fetchNames();\n  }, []);\n\n  const fetchNames = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('name_options')\n        .select('id, name, description')\n        .order('name');\n\n      if (error) throw error;\n\n      setAvailableNames(data);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error fetching names:', err);\n      setError('Failed to load names. Please try again later.');\n      setIsLoading(false);\n    }\n  };\n\n  const toggleName = (nameObj) => {\n    setSelectedNames(prev => {\n      if (prev.some(n => n.id === nameObj.id)) {\n        const newSelection = prev.filter(n => n.id !== nameObj.id);\n        setValidationError(newSelection.length < MIN_NAMES ? \n          'At least 2 names are required' : '');\n        return newSelection;\n      }\n      setValidationError('');\n      return [...prev, nameObj];\n    });\n  };\n\n  const handleStart = () => {\n    if (selectedNames.length < MIN_NAMES) {\n      setValidationError('Please select at least 2 names to start the tournament.');\n      return;\n    }\n    setValidationError('');\n    onStart(selectedNames.map(n => n.name));\n  };\n\n  if (isLoading) return <div className=\"loading\">Loading names...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"tournament-setup\">\n      <h2>Name Selection</h2>\n\n      {validationError && (\n        <div className=\"validation-error\">\n          {validationError}\n        </div>\n      )}\n\n      <div className=\"name-count\">\n        Selected: {selectedNames.length} names\n        {selectedNames.length > 0 && selectedNames.length < MIN_NAMES && (\n          <span className=\"warning\"> (Select at least {MIN_NAMES} names)</span>\n        )}\n      </div>\n\n      <div className=\"names-grid\">\n        {availableNames.map(nameObj => (\n          <div\n            key={nameObj.id}\n            onClick={() => toggleName(nameObj)}\n            className={`name-card ${selectedNames.some(n => n.id === nameObj.id) ? 'selected' : ''}`}\n          >\n            <div className=\"name-content\">\n              <h3 className=\"name-text\">{nameObj.name}</h3>\n              <p className=\"name-description\">{nameObj.description}</p>\n            </div>\n            {selectedNames.some(n => n.id === nameObj.id) && (\n              <span className=\"check-mark\">âœ“</span>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"start-section\">\n        <button\n          onClick={handleStart}\n          className=\"start-button\"\n          disabled={selectedNames.length < MIN_NAMES}\n        >\n          Start Tournament with {selectedNames.length} Names\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TournamentSetup; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}