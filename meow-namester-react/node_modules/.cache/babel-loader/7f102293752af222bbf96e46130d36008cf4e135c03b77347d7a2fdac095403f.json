{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Bracket/Bracket.js\";\n/**\n * @module Bracket\n * @description A React component that displays a tournament bracket visualization.\n * Shows the progression of matches, winners, and results in a bracket format.\n * Supports different match outcomes including wins, ties, and skipped matches.\n * \n * @example\n * <Bracket\n *   matches={[\n *     { id: 1, name1: \"Whiskers\", name2: \"Mittens\", winner: -1 },\n *     { id: 2, name1: \"Luna\", name2: \"Shadow\", winner: 1 }\n *   ]}\n * />\n * \n * @param {Object} props\n * @param {Array} props.matches - Array of match objects containing match details\n * @param {number} props.matches[].id - Unique identifier for the match\n * @param {string} props.matches[].name1 - First name in the match\n * @param {string} props.matches[].name2 - Second name in the match\n * @param {number} props.matches[].winner - Winner indicator (-1: first, 1: second, 0: both, 2: skip)\n */\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Bracket({\n  matches\n}) {\n  const getMatchStatus = match => {\n    if (!match.winner) return 'pending';\n    if (match.winner === -1) return 'first';\n    if (match.winner === 1) return 'second';\n    if (match.winner === 0) return 'both';\n    return 'skip';\n  };\n  const getCardVariant = (match, isFirst) => {\n    if (!match.winner) return 'default';\n    const status = getMatchStatus(match);\n    if (status === 'first') return isFirst ? 'winner' : 'loser';\n    if (status === 'second') return isFirst ? 'loser' : 'winner';\n    if (status === 'both') return 'winner';\n    return 'default';\n  };\n  const rounds = matches.reduce((acc, match) => {\n    const lastRound = acc[acc.length - 1];\n    if (!lastRound || lastRound.length === Math.pow(2, acc.length - 1)) {\n      acc.push([match]);\n    } else {\n      lastRound.push(match);\n    }\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bracket\",\n    children: rounds.map((round, roundIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bracket-round\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-title\",\n        children: [\"Round \", roundIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bracket-matches\",\n        children: round.map(match => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bracket-match\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bracket-player ${getCardVariant(match, true)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: match.name1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), getMatchStatus(match) === 'first' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"winner-badge\",\n              children: \"Winner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 57\n            }, this), getMatchStatus(match) === 'both' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tie-badge\",\n              children: \"Tie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), match.name2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bracket-player ${getCardVariant(match, false)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: match.name2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), getMatchStatus(match) === 'second' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"winner-badge\",\n              children: \"Winner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 60\n            }, this), getMatchStatus(match) === 'both' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tie-badge\",\n              children: \"Tie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bracket-player bye\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bye-text\",\n              children: \"Bye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this), getMatchStatus(match) === 'skip' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skip-badge\",\n            children: \"Skipped\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, match.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, roundIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = Bracket;\nexport default Bracket;\nvar _c;\n$RefreshReg$(_c, \"Bracket\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Bracket","matches","getMatchStatus","match","winner","getCardVariant","isFirst","status","rounds","reduce","acc","lastRound","length","Math","pow","push","className","children","map","round","roundIndex","fileName","_jsxFileName","lineNumber","columnNumber","name1","name2","id","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Bracket/Bracket.js"],"sourcesContent":["/**\n * @module Bracket\n * @description A React component that displays a tournament bracket visualization.\n * Shows the progression of matches, winners, and results in a bracket format.\n * Supports different match outcomes including wins, ties, and skipped matches.\n * \n * @example\n * <Bracket\n *   matches={[\n *     { id: 1, name1: \"Whiskers\", name2: \"Mittens\", winner: -1 },\n *     { id: 2, name1: \"Luna\", name2: \"Shadow\", winner: 1 }\n *   ]}\n * />\n * \n * @param {Object} props\n * @param {Array} props.matches - Array of match objects containing match details\n * @param {number} props.matches[].id - Unique identifier for the match\n * @param {string} props.matches[].name1 - First name in the match\n * @param {string} props.matches[].name2 - Second name in the match\n * @param {number} props.matches[].winner - Winner indicator (-1: first, 1: second, 0: both, 2: skip)\n */\n\nimport React from 'react';\n\nfunction Bracket({ matches }) {\n  const getMatchStatus = (match) => {\n    if (!match.winner) return 'pending';\n    if (match.winner === -1) return 'first';\n    if (match.winner === 1) return 'second';\n    if (match.winner === 0) return 'both';\n    return 'skip';\n  };\n\n  const getCardVariant = (match, isFirst) => {\n    if (!match.winner) return 'default';\n    const status = getMatchStatus(match);\n    if (status === 'first') return isFirst ? 'winner' : 'loser';\n    if (status === 'second') return isFirst ? 'loser' : 'winner';\n    if (status === 'both') return 'winner';\n    return 'default';\n  };\n\n  const rounds = matches.reduce((acc, match) => {\n    const lastRound = acc[acc.length - 1];\n    if (!lastRound || lastRound.length === Math.pow(2, acc.length - 1)) {\n      acc.push([match]);\n    } else {\n      lastRound.push(match);\n    }\n    return acc;\n  }, []);\n\n  return (\n    <div className=\"bracket\">\n      {rounds.map((round, roundIndex) => (\n        <div key={roundIndex} className=\"bracket-round\">\n          <div className=\"round-title\">\n            Round {roundIndex + 1}\n          </div>\n          <div className=\"bracket-matches\">\n            {round.map((match) => (\n              <div key={match.id} className=\"bracket-match\">\n                <div\n                  className={`bracket-player ${getCardVariant(match, true)}`}\n                >\n                  <span>{match.name1}</span>\n                  {getMatchStatus(match) === 'first' && <span className=\"winner-badge\">Winner</span>}\n                  {getMatchStatus(match) === 'both' && <span className=\"tie-badge\">Tie</span>}\n                </div>\n                {match.name2 ? (\n                  <div\n                    className={`bracket-player ${getCardVariant(match, false)}`}\n                  >\n                    <span>{match.name2}</span>\n                    {getMatchStatus(match) === 'second' && <span className=\"winner-badge\">Winner</span>}\n                    {getMatchStatus(match) === 'both' && <span className=\"tie-badge\">Tie</span>}\n                  </div>\n                ) : (\n                  <div className=\"bracket-player bye\">\n                    <span className=\"bye-text\">Bye</span>\n                  </div>\n                )}\n                {getMatchStatus(match) === 'skip' && (\n                  <div className=\"skip-badge\">Skipped</div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Bracket; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}