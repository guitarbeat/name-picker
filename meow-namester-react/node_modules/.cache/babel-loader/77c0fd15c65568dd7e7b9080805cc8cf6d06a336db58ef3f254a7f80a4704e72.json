{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js\",\n  _s = $RefreshSig$();\n/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport { useUserSession } from '../../hooks/useUserSession';\nimport './Tournament.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tournament({\n  onComplete,\n  existingRatings = {},\n  names = [],\n  userName\n}) {\n  _s();\n  const {\n    saveTournamentProgress,\n    tournamentProgress,\n    saveStatus,\n    lastSaved\n  } = useUserSession();\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  // Initialize tournament or load saved progress\n  useEffect(() => {\n    if (tournamentProgress) {\n      console.log('Loading saved tournament progress:', tournamentProgress);\n      setRoundNumber(tournamentProgress.round_number);\n      setCurrentMatchNumber(tournamentProgress.current_match);\n      setTotalMatches(tournamentProgress.total_matches);\n      if (tournamentProgress.sorter_state) {\n        const newSorter = new PreferenceSorter(tournamentProgress.names);\n        Object.assign(newSorter, tournamentProgress.sorter_state);\n        setSorter(newSorter);\n        runTournament(newSorter);\n      }\n    } else {\n      startNewTournament();\n    }\n  }, []);\n\n  // Save progress after each match\n  useEffect(() => {\n    if (sorter && currentMatch && !isTransitioning) {\n      const progress = {\n        roundNumber,\n        currentMatch: currentMatchNumber,\n        totalMatches,\n        names,\n        sorter_state: {\n          namMember: sorter.namMember,\n          ranks: sorter.ranks,\n          nrec: sorter.nrec,\n          rec: sorter.rec\n        }\n      };\n      saveTournamentProgress(progress);\n    }\n  }, [currentMatchNumber, roundNumber, sorter, currentMatch, isTransitioning]);\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n    runTournament(newSorter);\n  };\n  const runTournament = async tournamentSorter => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({\n          left,\n          right\n        });\n        return new Promise(resolve => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // Create ratings array with preserved order\n      const ratingsArray = sortedResults.map((name, index) => {\n        const currentRating = typeof existingRatings[name] === 'object' ? existingRatings[name].rating : existingRatings[name] || 1500;\n        const totalNames = sortedResults.length;\n        const position = index;\n        const ratingSpread = 500;\n        const positionValue = (totalNames - position - 1) / (totalNames - 1) * ratingSpread;\n        const blendFactor = 0.7;\n        const newRating = Math.round(blendFactor * (1500 + positionValue) + (1 - blendFactor) * currentRating);\n        return {\n          name,\n          rating: Math.max(1000, Math.min(2000, newRating))\n        };\n      });\n      onComplete(ratingsArray);\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n  const handleVote = useCallback(result => {\n    if (isTransitioning || !resolveVote) return;\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    let voteValue;\n    switch (result) {\n      case 'left':\n        voteValue = -1;\n        break;\n      case 'right':\n        voteValue = 1;\n        break;\n      case 'both':\n        voteValue = -0.1;\n        break;\n      case 'none':\n        voteValue = 0;\n        break;\n      default:\n        voteValue = 0;\n    }\n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (isTransitioning) return;\n      switch (event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  // Format last saved time\n  const getLastSavedText = () => {\n    if (!lastSaved) return '';\n    const now = new Date();\n    const diff = now - lastSaved;\n    if (diff < 1000) return 'Just now';\n    if (diff < 60000) return `${Math.floor(diff / 1000)}s ago`;\n    if (diff < 3600000) return `${Math.floor(diff / 60000)}m ago`;\n    return `${Math.floor(diff / 3600000)}h ago`;\n  };\n\n  // Render save status indicator\n  const renderSaveStatus = () => {\n    switch (saveStatus) {\n      case 'saving':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"save-status saving\",\n          children: \"Saving progress...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 16\n        }, this);\n      case 'saved':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"save-status saved\",\n          children: [\"Progress saved \", getLastSavedText()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"save-status error\",\n          children: \"Failed to save progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  if (!currentMatch) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading tournament...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament\",\n    children: [renderSaveStatus(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"round-number\",\n          children: [\"Round \", roundNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"match-count\",\n          children: [\"Match \", currentMatchNumber, \" of \", totalMatches]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-info\",\n        children: [Math.round(currentMatchNumber / totalMatches * 100), \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"names-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'left' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('left'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2190 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.left\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vs-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vs-text\",\n            children: \"vs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'right' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('right'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2192 arrow key\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.right\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('both'),\n          disabled: isTransitioning,\n          title: \"Press 'B' key\",\n          children: \"Like Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('none'),\n          disabled: isTransitioning,\n          title: \"Press 'N' key\",\n          children: \"No Opinion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on a name to choose it, or select an option below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-hints\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keyboard shortcuts: \\u2190 Left, \\u2192 Right, B (Both), N (No Opinion)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournament, \"vrpMuSEshbMK2V74QQvjbk3oYd4=\", false, function () {\n  return [useUserSession];\n});\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","PreferenceSorter","EloRating","useUserSession","jsxDEV","_jsxDEV","Tournament","onComplete","existingRatings","names","userName","_s","saveTournamentProgress","tournamentProgress","saveStatus","lastSaved","currentMatch","setCurrentMatch","isTransitioning","setIsTransitioning","roundNumber","setRoundNumber","currentMatchNumber","setCurrentMatchNumber","totalMatches","setTotalMatches","sorter","setSorter","elo","resolveVote","setResolveVote","selectedOption","setSelectedOption","console","log","round_number","current_match","total_matches","sorter_state","newSorter","Object","assign","runTournament","startNewTournament","progress","namMember","ranks","nrec","rec","length","n","estimatedMatches","Math","ceil","log2","tournamentSorter","sortedResults","sort","left","right","Promise","resolve","ratingsArray","map","name","index","currentRating","rating","totalNames","position","ratingSpread","positionValue","blendFactor","newRating","round","max","min","error","handleVote","result","voteValue","prev","setTimeout","handleKeyPress","event","key","window","addEventListener","removeEventListener","getLastSavedText","now","Date","diff","floor","renderSaveStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","tabIndex","title","disabled","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js"],"sourcesContent":["/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport { useUserSession } from '../../hooks/useUserSession';\nimport './Tournament.css';\n\nfunction Tournament({ onComplete, existingRatings = {}, names = [], userName }) {\n  const { saveTournamentProgress, tournamentProgress, saveStatus, lastSaved } = useUserSession();\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  // Initialize tournament or load saved progress\n  useEffect(() => {\n    if (tournamentProgress) {\n      console.log('Loading saved tournament progress:', tournamentProgress);\n      setRoundNumber(tournamentProgress.round_number);\n      setCurrentMatchNumber(tournamentProgress.current_match);\n      setTotalMatches(tournamentProgress.total_matches);\n      \n      if (tournamentProgress.sorter_state) {\n        const newSorter = new PreferenceSorter(tournamentProgress.names);\n        Object.assign(newSorter, tournamentProgress.sorter_state);\n        setSorter(newSorter);\n        runTournament(newSorter);\n      }\n    } else {\n      startNewTournament();\n    }\n  }, []);\n\n  // Save progress after each match\n  useEffect(() => {\n    if (sorter && currentMatch && !isTransitioning) {\n      const progress = {\n        roundNumber,\n        currentMatch: currentMatchNumber,\n        totalMatches,\n        names,\n        sorter_state: {\n          namMember: sorter.namMember,\n          ranks: sorter.ranks,\n          nrec: sorter.nrec,\n          rec: sorter.rec\n        }\n      };\n      saveTournamentProgress(progress);\n    }\n  }, [currentMatchNumber, roundNumber, sorter, currentMatch, isTransitioning]);\n\n  const startNewTournament = () => {\n    if (names.length === 0) return;\n\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    \n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n\n    runTournament(newSorter);\n  };\n\n  const runTournament = async (tournamentSorter) => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({ left, right });\n        return new Promise((resolve) => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // Create ratings array with preserved order\n      const ratingsArray = sortedResults.map((name, index) => {\n        const currentRating = typeof existingRatings[name] === 'object'\n          ? existingRatings[name].rating\n          : (existingRatings[name] || 1500);\n        \n        const totalNames = sortedResults.length;\n        const position = index;\n        const ratingSpread = 500;\n        const positionValue = ((totalNames - position - 1) / (totalNames - 1)) * ratingSpread;\n        \n        const blendFactor = 0.7;\n        const newRating = Math.round(\n          (blendFactor * (1500 + positionValue)) +\n          ((1 - blendFactor) * currentRating)\n        );\n\n        return {\n          name,\n          rating: Math.max(1000, Math.min(2000, newRating))\n        };\n      });\n\n      onComplete(ratingsArray);\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n\n  const handleVote = useCallback((result) => {\n    if (isTransitioning || !resolveVote) return;\n\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    \n    let voteValue;\n    switch (result) {\n      case 'left':\n        voteValue = -1;\n        break;\n      case 'right':\n        voteValue = 1;\n        break;\n      case 'both':\n        voteValue = -0.1;\n        break;\n      case 'none':\n        voteValue = 0;\n        break;\n      default:\n        voteValue = 0;\n    }\n    \n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    \n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (isTransitioning) return;\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  // Format last saved time\n  const getLastSavedText = () => {\n    if (!lastSaved) return '';\n    const now = new Date();\n    const diff = now - lastSaved;\n    if (diff < 1000) return 'Just now';\n    if (diff < 60000) return `${Math.floor(diff / 1000)}s ago`;\n    if (diff < 3600000) return `${Math.floor(diff / 60000)}m ago`;\n    return `${Math.floor(diff / 3600000)}h ago`;\n  };\n\n  // Render save status indicator\n  const renderSaveStatus = () => {\n    switch (saveStatus) {\n      case 'saving':\n        return <div className=\"save-status saving\">Saving progress...</div>;\n      case 'saved':\n        return <div className=\"save-status saved\">Progress saved {getLastSavedText()}</div>;\n      case 'error':\n        return <div className=\"save-status error\">Failed to save progress</div>;\n      default:\n        return null;\n    }\n  };\n\n  if (!currentMatch) return <div>Loading tournament...</div>;\n\n  return (\n    <div className=\"tournament\">\n      {renderSaveStatus()}\n      <div className=\"progress-info\">\n        <div className=\"round-info\">\n          <span className=\"round-number\">Round {roundNumber}</span>\n          <span className=\"match-count\">Match {currentMatchNumber} of {totalMatches}</span>\n        </div>\n        <div className=\"percentage-info\">\n          {Math.round((currentMatchNumber / totalMatches) * 100)}% Complete\n        </div>\n      </div>\n\n      <div className=\"matchup\">\n        <div className=\"names-row\">\n          <div className=\"name-container left\">\n            <div \n              className={`name-card ${selectedOption === 'left' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('left')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press ← arrow key\"\n            >\n              <h3>{currentMatch.left}</h3>\n            </div>\n          </div>\n\n          <div className=\"vs-section\">\n            <div className=\"vs-text\">vs</div>\n          </div>\n\n          <div className=\"name-container right\">\n            <div \n              className={`name-card ${selectedOption === 'right' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('right')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press → arrow key\"\n            >\n              <h3>{currentMatch.right}</h3>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"center-options\">\n          <button\n            className={`extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('both')}\n            disabled={isTransitioning}\n            title=\"Press 'B' key\"\n          >\n            Like Both\n          </button>\n          <button\n            className={`extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('none')}\n            disabled={isTransitioning}\n            title=\"Press 'N' key\"\n          >\n            No Opinion\n          </button>\n        </div>\n      </div>\n\n      <div className=\"tournament-instructions\">\n        <p>Click on a name to choose it, or select an option below</p>\n      </div>\n\n      <div className=\"keyboard-hints\">\n        <p>Keyboard shortcuts: ← Left, → Right, B (Both), N (No Opinion)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Tournament; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}