{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Results/ResultsTable.js\",\n  _s = $RefreshSig$();\n/**\n * @module ResultsTable\n * @description A component that displays a sorted table of cat names and their ratings.\n * Handles the sorting and formatting of ratings data.\n */\n\nimport React, { useMemo, memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingItem = /*#__PURE__*/memo(_c = ({\n  name,\n  rating,\n  rank\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"rating-item\",\n  role: \"row\",\n  \"aria-label\": `Rank ${rank}: ${name} with rating ${rating}`,\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"rank\",\n    \"aria-hidden\": \"true\",\n    children: rank\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"name\",\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"rating\",\n    \"aria-label\": `Rating: ${rating}`,\n    children: rating.toLocaleString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this));\n_c2 = RatingItem;\nfunction ResultsTable({\n  ratings = {},\n  orderedNames\n}) {\n  _s();\n  const sortedRatings = useMemo(() => {\n    try {\n      const ratingsObj = ratings || {};\n      if (orderedNames) {\n        return orderedNames.map(name => ({\n          name,\n          rating: Math.round(typeof ratingsObj[name] === 'number' ? ratingsObj[name] : typeof ratingsObj[name] === 'object' ? ratingsObj[name].rating : 1500)\n        }));\n      }\n      return Object.entries(ratingsObj).map(([name, rating]) => ({\n        name,\n        rating: Math.round(typeof rating === 'number' ? rating : typeof rating === 'object' ? rating.rating : 1500)\n      })).sort((a, b) => b.rating - a.rating);\n    } catch (error) {\n      console.error('Error processing ratings:', error);\n      return [];\n    }\n  }, [ratings, orderedNames]);\n  if (!sortedRatings.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-results\",\n      role: \"status\",\n      \"aria-label\": \"No ratings available\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ratings available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"help-text\",\n        children: \"Complete a tournament to see rankings here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ratings-list\",\n    role: \"table\",\n    \"aria-label\": \"Name Rankings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ratings-header\",\n      role: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"columnheader\",\n        \"aria-sort\": \"ascending\",\n        children: \"Rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"columnheader\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"columnheader\",\n        children: \"Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), sortedRatings.map(({\n      name,\n      rating\n    }, index) => /*#__PURE__*/_jsxDEV(RatingItem, {\n      name: name,\n      rating: rating,\n      rank: index + 1\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultsTable, \"cSu48qASprRp4fp+raSyreDFLVI=\");\n_c3 = ResultsTable;\nexport default _c4 = /*#__PURE__*/memo(ResultsTable);\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RatingItem$memo\");\n$RefreshReg$(_c2, \"RatingItem\");\n$RefreshReg$(_c3, \"ResultsTable\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"names":["React","useMemo","memo","jsxDEV","_jsxDEV","RatingItem","_c","name","rating","rank","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","_c2","ResultsTable","ratings","orderedNames","_s","sortedRatings","ratingsObj","map","Math","round","Object","entries","sort","a","b","error","console","length","index","_c3","_c4","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Results/ResultsTable.js"],"sourcesContent":["/**\n * @module ResultsTable\n * @description A component that displays a sorted table of cat names and their ratings.\n * Handles the sorting and formatting of ratings data.\n */\n\nimport React, { useMemo, memo } from 'react';\n\nconst RatingItem = memo(({ name, rating, rank }) => (\n  <div \n    className=\"rating-item\"\n    role=\"row\"\n    aria-label={`Rank ${rank}: ${name} with rating ${rating}`}\n  >\n    <span className=\"rank\" aria-hidden=\"true\">{rank}</span>\n    <span className=\"name\">{name}</span>\n    <span className=\"rating\" aria-label={`Rating: ${rating}`}>\n      {rating.toLocaleString()}\n    </span>\n  </div>\n));\n\nfunction ResultsTable({ ratings = {}, orderedNames }) {\n  const sortedRatings = useMemo(() => {\n    try {\n      const ratingsObj = ratings || {};\n      \n      if (orderedNames) {\n        return orderedNames.map(name => ({\n          name,\n          rating: Math.round(\n            typeof ratingsObj[name] === 'number' \n              ? ratingsObj[name] \n              : (typeof ratingsObj[name] === 'object' \n                  ? ratingsObj[name].rating \n                  : 1500)\n          )\n        }));\n      }\n\n      return Object.entries(ratingsObj)\n        .map(([name, rating]) => ({\n          name,\n          rating: Math.round(\n            typeof rating === 'number' \n              ? rating \n              : (typeof rating === 'object' \n                  ? rating.rating \n                  : 1500)\n          )\n        }))\n        .sort((a, b) => b.rating - a.rating);\n    } catch (error) {\n      console.error('Error processing ratings:', error);\n      return [];\n    }\n  }, [ratings, orderedNames]);\n\n  if (!sortedRatings.length) {\n    return (\n      <div \n        className=\"no-results\" \n        role=\"status\" \n        aria-label=\"No ratings available\"\n      >\n        <p>No ratings available yet.</p>\n        <p className=\"help-text\">Complete a tournament to see rankings here.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      className=\"ratings-list\"\n      role=\"table\"\n      aria-label=\"Name Rankings\"\n    >\n      <div className=\"ratings-header\" role=\"row\">\n        <span role=\"columnheader\" aria-sort=\"ascending\">Rank</span>\n        <span role=\"columnheader\">Name</span>\n        <span role=\"columnheader\">Rating</span>\n      </div>\n      \n      {sortedRatings.map(({ name, rating }, index) => (\n        <RatingItem\n          key={name}\n          name={name}\n          rating={rating}\n          rank={index + 1}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default memo(ResultsTable); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}