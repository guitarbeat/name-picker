{"ast":null,"code":"/**\n * @module ErrorBoundary\n * @description A React error boundary component that catches JavaScript errors\n * in child component tree and displays a fallback UI. Prevents the entire app\n * from crashing when an error occurs.\n * \n * @example\n * <ErrorBoundary>\n *   <YourComponent />\n * </ErrorBoundary>\n * \n * @component\n * @extends {React.Component}\n * @param {Object} props\n * @param {React.ReactNode} props.children - Child components to be wrapped\n * @returns {JSX.Element} Either the children or error UI\n */import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class ErrorBoundary extends React.Component{constructor(props){super(props);this.state={hasError:false};}static getDerivedStateFromError(error){return{hasError:true};}componentDidCatch(error,errorInfo){console.error('Error caught by boundary:',error,errorInfo);}render(){if(this.state.hasError){return/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Something went wrong.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),children:\"Refresh Page\"})]});}return this.props.children;}}export default ErrorBoundary;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","render","className","children","onClick","window","location","reload"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/ErrorBoundary/ErrorBoundary.js"],"sourcesContent":["/**\n * @module ErrorBoundary\n * @description A React error boundary component that catches JavaScript errors\n * in child component tree and displays a fallback UI. Prevents the entire app\n * from crashing when an error occurs.\n * \n * @example\n * <ErrorBoundary>\n *   <YourComponent />\n * </ErrorBoundary>\n * \n * @component\n * @extends {React.Component}\n * @param {Object} props\n * @param {React.ReactNode} props.children - Child components to be wrapped\n * @returns {JSX.Element} Either the children or error UI\n */\n\nimport React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"error-container\">\n          <h2>Something went wrong.</h2>\n          <button onClick={() => window.location.reload()}>\n            Refresh Page\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary; "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,aAAa,QAAS,CAAAL,KAAK,CAACM,SAAU,CAC1CC,WAAWA,CAACC,KAAK,CAAE,CACjB,KAAK,CAACA,KAAK,CAAC,CACZ,IAAI,CAACC,KAAK,CAAG,CAAEC,QAAQ,CAAE,KAAM,CAAC,CAClC,CAEA,MAAO,CAAAC,wBAAwBA,CAACC,KAAK,CAAE,CACrC,MAAO,CAAEF,QAAQ,CAAE,IAAK,CAAC,CAC3B,CAEAG,iBAAiBA,CAACD,KAAK,CAAEE,SAAS,CAAE,CAClCC,OAAO,CAACH,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAEE,SAAS,CAAC,CAC9D,CAEAE,MAAMA,CAAA,CAAG,CACP,GAAI,IAAI,CAACP,KAAK,CAACC,QAAQ,CAAE,CACvB,mBACEN,KAAA,QAAKa,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BhB,IAAA,OAAAgB,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BhB,IAAA,WAAQiB,OAAO,CAAEA,CAAA,GAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE,CAAAJ,QAAA,CAAC,cAEjD,CAAQ,CAAC,EACN,CAAC,CAEV,CAEA,MAAO,KAAI,CAACV,KAAK,CAACU,QAAQ,CAC5B,CACF,CAEA,cAAe,CAAAb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}