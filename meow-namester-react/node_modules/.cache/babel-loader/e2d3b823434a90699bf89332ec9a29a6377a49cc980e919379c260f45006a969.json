{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Results/Results.js\",\n  _s = $RefreshSig$();\n/**\n * @module Results\n * @description Main results component that displays the final rankings of cat names.\n * Shows the tournament results with ratings and provides option to restart.\n * \n * @example\n * <Results \n *   ratings={{ \"Whiskers\": 1450, \"Mittens\": 1380 }}\n *   onRestart={() => handleRestart()}\n * />\n * \n * @component\n * @param {Object} props\n * @param {Object} props.ratings - Object mapping cat names to their Elo ratings\n * @param {Function} props.onRestart - Callback function to restart the tournament\n * @returns {JSX.Element} Results view with rankings and restart option\n */\n\nimport React, { useState } from 'react';\nimport ResultsTable from './ResultsTable';\nimport RankingAdjustment from '../RankingAdjustment/RankingAdjustment';\nimport './Results.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Results({\n  ratings,\n  onStartNew,\n  userName,\n  onUpdateRatings,\n  currentTournamentNames\n}) {\n  _s();\n  const [isAdjusting, setIsAdjusting] = useState(false);\n  console.log('Results - Incoming ratings:', ratings);\n  console.log('Results - Current tournament names:', currentTournamentNames);\n\n  // Filter ratings to only show current tournament results\n  const currentRatings = currentTournamentNames ? Object.fromEntries(Object.entries(ratings || {}).filter(([name]) => currentTournamentNames.includes(name))) : ratings;\n  console.log('Results - Filtered currentRatings:', currentRatings);\n  const handleAdjustRankings = () => {\n    setIsAdjusting(true);\n  };\n  const handleSaveAdjustments = adjustedRankings => {\n    console.log('Results - Saving adjustments:', adjustedRankings);\n    if (onUpdateRatings) {\n      onUpdateRatings(adjustedRankings);\n    }\n    setIsAdjusting(false);\n  };\n  const handleCancelAdjustments = () => {\n    setIsAdjusting(false);\n  };\n\n  // Convert ratings object to array format for RankingAdjustment\n  const rankingsArray = Object.entries(currentRatings || {}).map(([name, rating]) => ({\n    name,\n    rating: typeof rating === 'number' ? rating : 1500\n  })).sort((a, b) => b.rating - a.rating);\n  console.log('Results - Rankings array:', rankingsArray);\n  if (isAdjusting) {\n    return /*#__PURE__*/_jsxDEV(RankingAdjustment, {\n      rankings: rankingsArray,\n      onSave: handleSaveAdjustments,\n      onCancel: handleCancelAdjustments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tournament Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"results-info\",\n      children: [\"Here are your rankings for this tournament, \", userName, \"! You can adjust these rankings or start a new tournament with different names.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsTable, {\n      ratings: currentRatings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdjustRankings,\n        className: \"adjust-button\",\n        disabled: !Object.keys(currentRatings || {}).length,\n        children: \"Adjust Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onStartNew,\n        className: \"primary-button\",\n        children: \"Start New Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"results-tip\",\n        children: \"Starting a new tournament will let you rate more names while keeping your current rankings.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Results, \"Dukdn+4oX50Z+LnNk3y3fLpHeCA=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","ResultsTable","RankingAdjustment","jsxDEV","_jsxDEV","Results","ratings","onStartNew","userName","onUpdateRatings","currentTournamentNames","_s","isAdjusting","setIsAdjusting","console","log","currentRatings","Object","fromEntries","entries","filter","name","includes","handleAdjustRankings","handleSaveAdjustments","adjustedRankings","handleCancelAdjustments","rankingsArray","map","rating","sort","a","b","rankings","onSave","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","disabled","keys","length","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Results/Results.js"],"sourcesContent":["/**\n * @module Results\n * @description Main results component that displays the final rankings of cat names.\n * Shows the tournament results with ratings and provides option to restart.\n * \n * @example\n * <Results \n *   ratings={{ \"Whiskers\": 1450, \"Mittens\": 1380 }}\n *   onRestart={() => handleRestart()}\n * />\n * \n * @component\n * @param {Object} props\n * @param {Object} props.ratings - Object mapping cat names to their Elo ratings\n * @param {Function} props.onRestart - Callback function to restart the tournament\n * @returns {JSX.Element} Results view with rankings and restart option\n */\n\nimport React, { useState } from 'react';\nimport ResultsTable from './ResultsTable';\nimport RankingAdjustment from '../RankingAdjustment/RankingAdjustment';\nimport './Results.css';\n\nfunction Results({ ratings, onStartNew, userName, onUpdateRatings, currentTournamentNames }) {\n  const [isAdjusting, setIsAdjusting] = useState(false);\n\n  console.log('Results - Incoming ratings:', ratings);\n  console.log('Results - Current tournament names:', currentTournamentNames);\n\n  // Filter ratings to only show current tournament results\n  const currentRatings = currentTournamentNames \n    ? Object.fromEntries(\n        Object.entries(ratings || {}).filter(([name]) => \n          currentTournamentNames.includes(name)\n        )\n      )\n    : ratings;\n\n  console.log('Results - Filtered currentRatings:', currentRatings);\n\n  const handleAdjustRankings = () => {\n    setIsAdjusting(true);\n  };\n\n  const handleSaveAdjustments = (adjustedRankings) => {\n    console.log('Results - Saving adjustments:', adjustedRankings);\n    if (onUpdateRatings) {\n      onUpdateRatings(adjustedRankings);\n    }\n    setIsAdjusting(false);\n  };\n\n  const handleCancelAdjustments = () => {\n    setIsAdjusting(false);\n  };\n\n  // Convert ratings object to array format for RankingAdjustment\n  const rankingsArray = Object.entries(currentRatings || {})\n    .map(([name, rating]) => ({\n      name,\n      rating: typeof rating === 'number' ? rating : 1500\n    }))\n    .sort((a, b) => b.rating - a.rating);\n\n  console.log('Results - Rankings array:', rankingsArray);\n\n  if (isAdjusting) {\n    return (\n      <RankingAdjustment\n        rankings={rankingsArray}\n        onSave={handleSaveAdjustments}\n        onCancel={handleCancelAdjustments}\n      />\n    );\n  }\n\n  return (\n    <div className=\"results-container\">\n      <h2>Tournament Results</h2>\n      <p className=\"results-info\">\n        Here are your rankings for this tournament, {userName}! You can adjust these rankings\n        or start a new tournament with different names.\n      </p>\n\n      <ResultsTable ratings={currentRatings} />\n\n      <div className=\"results-actions\">\n        <button \n          onClick={handleAdjustRankings} \n          className=\"adjust-button\"\n          disabled={!Object.keys(currentRatings || {}).length}\n        >\n          Adjust Rankings\n        </button>\n        <button \n          onClick={onStartNew} \n          className=\"primary-button\"\n        >\n          Start New Tournament\n        </button>\n        <p className=\"results-tip\">\n          Starting a new tournament will let you rate more names while keeping your current rankings.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}