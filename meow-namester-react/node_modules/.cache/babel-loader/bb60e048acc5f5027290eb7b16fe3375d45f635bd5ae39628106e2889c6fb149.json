{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js\",\n  _s = $RefreshSig$();\n/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport { supabase } from '../../supabase/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_NAMES = [\"Luna\", \"Milo\", \"Bella\", \"Oliver\", \"Lucy\", \"Leo\", \"Lily\", \"Charlie\", \"Nala\", \"Max\", \"Sophie\", \"Simba\", \"Chloe\", \"Jack\", \"Kitty\", \"Tiger\"];\nfunction Tournament({\n  onComplete,\n  existingRatings = [],\n  names = [],\n  userName\n}) {\n  _s();\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [tableExists, setTableExists] = useState(false);\n  useEffect(() => {\n    checkTableExists();\n  }, []);\n  const checkTableExists = async () => {\n    try {\n      // Try to query the table structure\n      const {\n        error\n      } = await supabase.from('tournament_progress').select('id').limit(1);\n\n      // If there's no error, table exists\n      if (!error) {\n        setTableExists(true);\n        loadSavedProgress();\n      } else {\n        console.log('Tournament progress table not found, starting new tournament');\n        startNewTournament();\n      }\n    } catch (err) {\n      console.error('Error checking table:', err);\n      startNewTournament();\n    }\n  };\n  const loadSavedProgress = async () => {\n    if (!tableExists || !userName) {\n      startNewTournament();\n      return;\n    }\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('tournament_progress').select('*').eq('user_name', userName).single();\n      if (error) {\n        if (error.code === 'PGRST116') {\n          // No saved progress found\n          startNewTournament();\n        } else {\n          console.error('Error loading progress:', error);\n          startNewTournament();\n        }\n        return;\n      }\n      if (data) {\n        const shouldResume = window.confirm('You have a saved tournament in progress. Would you like to resume it?');\n        if (shouldResume) {\n          setRoundNumber(data.round_number);\n          setCurrentMatchNumber(data.current_match);\n          setTotalMatches(data.total_matches);\n          const newSorter = new PreferenceSorter(data.names);\n          newSorter.restoreState(data.sorter_state);\n          setSorter(newSorter);\n          runTournament(newSorter);\n        } else {\n          await clearSavedProgress();\n          startNewTournament();\n        }\n      } else {\n        startNewTournament();\n      }\n    } catch (err) {\n      console.error('Error loading progress:', err);\n      startNewTournament();\n    }\n  };\n  const saveTournamentProgress = async () => {\n    if (!tableExists || !userName) {\n      alert('Unable to save progress at this time. The tournament will continue.');\n      return false;\n    }\n    try {\n      const progress = {\n        user_name: userName,\n        round_number: roundNumber,\n        current_match: currentMatchNumber,\n        total_matches: totalMatches,\n        names: names,\n        sorter_state: sorter.getState(),\n        updated_at: new Date().toISOString()\n      };\n      const {\n        error\n      } = await supabase.from('tournament_progress').upsert(progress, {\n        onConflict: 'user_name'\n      });\n      if (error) throw error;\n      return true;\n    } catch (err) {\n      console.error('Error saving progress:', err);\n      return false;\n    }\n  };\n  const clearSavedProgress = async () => {\n    try {\n      await supabase.from('tournament_progress').delete().eq('user_name', userName);\n    } catch (err) {\n      console.error('Error clearing progress:', err);\n    }\n  };\n  const handlePause = async () => {\n    const saved = await saveTournamentProgress();\n    if (saved) {\n      setIsPaused(true);\n      alert('Your progress has been saved. You can resume this tournament later.');\n    } else {\n      alert('There was an error saving your progress. Please try again.');\n    }\n  };\n  const startNewTournament = async () => {\n    const namesToUse = names.length > 0 ? names : DEFAULT_NAMES;\n    const newSorter = new PreferenceSorter(namesToUse);\n    setSorter(newSorter);\n    const n = namesToUse.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n    runTournament(newSorter);\n  };\n  const runTournament = async tournamentSorter => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({\n          left,\n          right\n        });\n        return new Promise(resolve => {\n          setResolveVote(() => resolve);\n        });\n      });\n      await clearSavedProgress();\n      onComplete(sortedResults.map((name, index) => {\n        var _existingRatings$find;\n        const existingRating = ((_existingRatings$find = existingRatings.find(r => r.name === name)) === null || _existingRatings$find === void 0 ? void 0 : _existingRatings$find.rating) || 1500;\n        return {\n          name,\n          rating: existingRating - index * 10\n        };\n      }));\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n  const handleVote = useCallback(result => {\n    if (isTransitioning || !resolveVote) return;\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    const voteValue = result === 'left' ? -1 : result === 'right' ? 1 : result === 'both' ? 0 : 2;\n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (isTransitioning) return;\n      switch (event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n  if (!currentMatch) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading tournament...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 29\n  }, this);\n  const progress = Math.round(currentMatchNumber / totalMatches * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"round-number\",\n          children: [\"Round \", roundNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"match-count\",\n          children: [\"Match \", currentMatchNumber, \" of \", totalMatches]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-info\",\n        children: [progress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), tableExists && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePause,\n        className: \"pause-button\",\n        disabled: isTransitioning,\n        children: \"Save & Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), isPaused ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paused-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tournament Paused\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your progress has been saved. You can safely leave and resume later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPaused(false),\n        className: \"resume-button\",\n        children: \"Resume Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"names-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'left' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('left'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2190 arrow key\",\n            disabled: isTransitioning,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.left\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vs-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vs-text\",\n            children: \"vs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'right' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('right'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2192 arrow key\",\n            disabled: isTransitioning,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.right\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('both'),\n          disabled: isTransitioning,\n          title: \"Press 'B' key\",\n          children: \"Like Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('none'),\n          disabled: isTransitioning,\n          title: \"Press 'N' key\",\n          children: \"No Opinion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on a name to choose it, or select an option below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-hints\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keyboard shortcuts: \\u2190 Left, \\u2192 Right, B (Both), N (No Opinion)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournament, \"euTSzWa3BZCQ8Nnmsn5XnRZcViw=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","PreferenceSorter","EloRating","supabase","jsxDEV","_jsxDEV","DEFAULT_NAMES","Tournament","onComplete","existingRatings","names","userName","_s","currentMatch","setCurrentMatch","isTransitioning","setIsTransitioning","roundNumber","setRoundNumber","currentMatchNumber","setCurrentMatchNumber","totalMatches","setTotalMatches","sorter","setSorter","elo","resolveVote","setResolveVote","selectedOption","setSelectedOption","isPaused","setIsPaused","tableExists","setTableExists","checkTableExists","error","from","select","limit","loadSavedProgress","console","log","startNewTournament","err","data","eq","single","code","shouldResume","window","confirm","round_number","current_match","total_matches","newSorter","restoreState","sorter_state","runTournament","clearSavedProgress","saveTournamentProgress","alert","progress","user_name","getState","updated_at","Date","toISOString","upsert","onConflict","delete","handlePause","saved","namesToUse","length","n","estimatedMatches","Math","ceil","log2","tournamentSorter","sortedResults","sort","left","right","Promise","resolve","map","name","index","_existingRatings$find","existingRating","find","r","rating","handleVote","result","voteValue","prev","setTimeout","handleKeyPress","event","key","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","round","className","onClick","disabled","role","tabIndex","title","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js"],"sourcesContent":["/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport { supabase } from '../../supabase/supabaseClient';\n\nconst DEFAULT_NAMES = [\n  \"Luna\", \"Milo\", \"Bella\", \"Oliver\", \"Lucy\", \"Leo\", \"Lily\", \"Charlie\",\n  \"Nala\", \"Max\", \"Sophie\", \"Simba\", \"Chloe\", \"Jack\", \"Kitty\", \"Tiger\"\n];\n\nfunction Tournament({ onComplete, existingRatings = [], names = [], userName }) {\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const [tableExists, setTableExists] = useState(false);\n\n  useEffect(() => {\n    checkTableExists();\n  }, []);\n\n  const checkTableExists = async () => {\n    try {\n      // Try to query the table structure\n      const { error } = await supabase\n        .from('tournament_progress')\n        .select('id')\n        .limit(1);\n\n      // If there's no error, table exists\n      if (!error) {\n        setTableExists(true);\n        loadSavedProgress();\n      } else {\n        console.log('Tournament progress table not found, starting new tournament');\n        startNewTournament();\n      }\n    } catch (err) {\n      console.error('Error checking table:', err);\n      startNewTournament();\n    }\n  };\n\n  const loadSavedProgress = async () => {\n    if (!tableExists || !userName) {\n      startNewTournament();\n      return;\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('tournament_progress')\n        .select('*')\n        .eq('user_name', userName)\n        .single();\n\n      if (error) {\n        if (error.code === 'PGRST116') { // No saved progress found\n          startNewTournament();\n        } else {\n          console.error('Error loading progress:', error);\n          startNewTournament();\n        }\n        return;\n      }\n\n      if (data) {\n        const shouldResume = window.confirm(\n          'You have a saved tournament in progress. Would you like to resume it?'\n        );\n\n        if (shouldResume) {\n          setRoundNumber(data.round_number);\n          setCurrentMatchNumber(data.current_match);\n          setTotalMatches(data.total_matches);\n          const newSorter = new PreferenceSorter(data.names);\n          newSorter.restoreState(data.sorter_state);\n          setSorter(newSorter);\n          runTournament(newSorter);\n        } else {\n          await clearSavedProgress();\n          startNewTournament();\n        }\n      } else {\n        startNewTournament();\n      }\n    } catch (err) {\n      console.error('Error loading progress:', err);\n      startNewTournament();\n    }\n  };\n\n  const saveTournamentProgress = async () => {\n    if (!tableExists || !userName) {\n      alert('Unable to save progress at this time. The tournament will continue.');\n      return false;\n    }\n\n    try {\n      const progress = {\n        user_name: userName,\n        round_number: roundNumber,\n        current_match: currentMatchNumber,\n        total_matches: totalMatches,\n        names: names,\n        sorter_state: sorter.getState(),\n        updated_at: new Date().toISOString()\n      };\n\n      const { error } = await supabase\n        .from('tournament_progress')\n        .upsert(progress, { onConflict: 'user_name' });\n\n      if (error) throw error;\n      return true;\n    } catch (err) {\n      console.error('Error saving progress:', err);\n      return false;\n    }\n  };\n\n  const clearSavedProgress = async () => {\n    try {\n      await supabase\n        .from('tournament_progress')\n        .delete()\n        .eq('user_name', userName);\n    } catch (err) {\n      console.error('Error clearing progress:', err);\n    }\n  };\n\n  const handlePause = async () => {\n    const saved = await saveTournamentProgress();\n    if (saved) {\n      setIsPaused(true);\n      alert('Your progress has been saved. You can resume this tournament later.');\n    } else {\n      alert('There was an error saving your progress. Please try again.');\n    }\n  };\n\n  const startNewTournament = async () => {\n    const namesToUse = names.length > 0 ? names : DEFAULT_NAMES;\n    const newSorter = new PreferenceSorter(namesToUse);\n    setSorter(newSorter);\n    \n    const n = namesToUse.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n\n    runTournament(newSorter);\n  };\n\n  const runTournament = async (tournamentSorter) => {\n    try {\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({ left, right });\n        return new Promise((resolve) => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      await clearSavedProgress();\n      onComplete(sortedResults.map((name, index) => {\n        const existingRating = existingRatings.find(r => r.name === name)?.rating || 1500;\n        return {\n          name,\n          rating: existingRating - (index * 10)\n        };\n      }));\n    } catch (error) {\n      console.error('Tournament error:', error);\n    }\n  };\n\n  const handleVote = useCallback((result) => {\n    if (isTransitioning || !resolveVote) return;\n\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    \n    const voteValue = result === 'left' ? -1 : result === 'right' ? 1 : result === 'both' ? 0 : 2;\n    resolveVote(voteValue);\n\n    setCurrentMatchNumber(prev => prev + 1);\n    \n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (isTransitioning) return;\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  if (!currentMatch) return <div>Loading tournament...</div>;\n\n  const progress = Math.round((currentMatchNumber / totalMatches) * 100);\n\n  return (\n    <div className=\"tournament\">\n      <div className=\"progress-info\">\n        <div className=\"round-info\">\n          <span className=\"round-number\">Round {roundNumber}</span>\n          <span className=\"match-count\">Match {currentMatchNumber} of {totalMatches}</span>\n        </div>\n        <div className=\"percentage-info\">{progress}% Complete</div>\n        {tableExists && (\n          <button \n            onClick={handlePause}\n            className=\"pause-button\"\n            disabled={isTransitioning}\n          >\n            Save & Pause\n          </button>\n        )}\n      </div>\n\n      {isPaused ? (\n        <div className=\"paused-message\">\n          <h3>Tournament Paused</h3>\n          <p>Your progress has been saved. You can safely leave and resume later.</p>\n          <button \n            onClick={() => setIsPaused(false)}\n            className=\"resume-button\"\n          >\n            Resume Now\n          </button>\n        </div>\n      ) : (\n        <div className=\"matchup\">\n          <div className=\"names-row\">\n            <div className=\"name-container left\">\n              <div \n                className={`name-card ${selectedOption === 'left' ? 'selected' : ''}`}\n                onClick={() => !isTransitioning && handleVote('left')}\n                role=\"button\"\n                tabIndex={0}\n                title=\"Press ← arrow key\"\n                disabled={isTransitioning}\n              >\n                <h3>{currentMatch.left}</h3>\n              </div>\n            </div>\n\n            <div className=\"vs-section\">\n              <div className=\"vs-text\">vs</div>\n            </div>\n\n            <div className=\"name-container right\">\n              <div \n                className={`name-card ${selectedOption === 'right' ? 'selected' : ''}`}\n                onClick={() => !isTransitioning && handleVote('right')}\n                role=\"button\"\n                tabIndex={0}\n                title=\"Press → arrow key\"\n                disabled={isTransitioning}\n              >\n                <h3>{currentMatch.right}</h3>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"center-options\">\n            <button\n              className={`extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('both')}\n              disabled={isTransitioning}\n              title=\"Press 'B' key\"\n            >\n              Like Both\n            </button>\n            <button\n              className={`extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('none')}\n              disabled={isTransitioning}\n              title=\"Press 'N' key\"\n            >\n              No Opinion\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"tournament-instructions\">\n        <p>Click on a name to choose it, or select an option below</p>\n      </div>\n\n      <div className=\"keyboard-hints\">\n        <p>Keyboard shortcuts: ← Left, → Right, B (Both), N (No Opinion)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Tournament; "],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,SAASC,QAAQ,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,aAAa,GAAG,CACpB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EACnE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CACpE;AAED,SAASC,UAAUA,CAAC;EAAEC,UAAU;EAAEC,eAAe,GAAG,EAAE;EAAEC,KAAK,GAAG,EAAE;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACoB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC0B,GAAG,CAAC,GAAG1B,QAAQ,CAAC,MAAM,IAAIG,SAAS,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACdkC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF;MACA,MAAM;QAAEC;MAAM,CAAC,GAAG,MAAMhC,QAAQ,CAC7BiC,IAAI,CAAC,qBAAqB,CAAC,CAC3BC,MAAM,CAAC,IAAI,CAAC,CACZC,KAAK,CAAC,CAAC,CAAC;;MAEX;MACA,IAAI,CAACH,KAAK,EAAE;QACVF,cAAc,CAAC,IAAI,CAAC;QACpBM,iBAAiB,CAAC,CAAC;MACrB,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;QAC3EC,kBAAkB,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZH,OAAO,CAACL,KAAK,CAAC,uBAAuB,EAAEQ,GAAG,CAAC;MAC3CD,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAMH,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACP,WAAW,IAAI,CAACrB,QAAQ,EAAE;MAC7B+B,kBAAkB,CAAC,CAAC;MACpB;IACF;IAEA,IAAI;MACF,MAAM;QAAEE,IAAI;QAAET;MAAM,CAAC,GAAG,MAAMhC,QAAQ,CACnCiC,IAAI,CAAC,qBAAqB,CAAC,CAC3BC,MAAM,CAAC,GAAG,CAAC,CACXQ,EAAE,CAAC,WAAW,EAAElC,QAAQ,CAAC,CACzBmC,MAAM,CAAC,CAAC;MAEX,IAAIX,KAAK,EAAE;QACT,IAAIA,KAAK,CAACY,IAAI,KAAK,UAAU,EAAE;UAAE;UAC/BL,kBAAkB,CAAC,CAAC;QACtB,CAAC,MAAM;UACLF,OAAO,CAACL,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/CO,kBAAkB,CAAC,CAAC;QACtB;QACA;MACF;MAEA,IAAIE,IAAI,EAAE;QACR,MAAMI,YAAY,GAAGC,MAAM,CAACC,OAAO,CACjC,uEACF,CAAC;QAED,IAAIF,YAAY,EAAE;UAChB9B,cAAc,CAAC0B,IAAI,CAACO,YAAY,CAAC;UACjC/B,qBAAqB,CAACwB,IAAI,CAACQ,aAAa,CAAC;UACzC9B,eAAe,CAACsB,IAAI,CAACS,aAAa,CAAC;UACnC,MAAMC,SAAS,GAAG,IAAIrD,gBAAgB,CAAC2C,IAAI,CAAClC,KAAK,CAAC;UAClD4C,SAAS,CAACC,YAAY,CAACX,IAAI,CAACY,YAAY,CAAC;UACzChC,SAAS,CAAC8B,SAAS,CAAC;UACpBG,aAAa,CAACH,SAAS,CAAC;QAC1B,CAAC,MAAM;UACL,MAAMI,kBAAkB,CAAC,CAAC;UAC1BhB,kBAAkB,CAAC,CAAC;QACtB;MACF,CAAC,MAAM;QACLA,kBAAkB,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZH,OAAO,CAACL,KAAK,CAAC,yBAAyB,EAAEQ,GAAG,CAAC;MAC7CD,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAMiB,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAAC3B,WAAW,IAAI,CAACrB,QAAQ,EAAE;MAC7BiD,KAAK,CAAC,qEAAqE,CAAC;MAC5E,OAAO,KAAK;IACd;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG;QACfC,SAAS,EAAEnD,QAAQ;QACnBwC,YAAY,EAAElC,WAAW;QACzBmC,aAAa,EAAEjC,kBAAkB;QACjCkC,aAAa,EAAEhC,YAAY;QAC3BX,KAAK,EAAEA,KAAK;QACZ8C,YAAY,EAAEjC,MAAM,CAACwC,QAAQ,CAAC,CAAC;QAC/BC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACrC,CAAC;MAED,MAAM;QAAE/B;MAAM,CAAC,GAAG,MAAMhC,QAAQ,CAC7BiC,IAAI,CAAC,qBAAqB,CAAC,CAC3B+B,MAAM,CAACN,QAAQ,EAAE;QAAEO,UAAU,EAAE;MAAY,CAAC,CAAC;MAEhD,IAAIjC,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZH,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEQ,GAAG,CAAC;MAC5C,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMe,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMvD,QAAQ,CACXiC,IAAI,CAAC,qBAAqB,CAAC,CAC3BiC,MAAM,CAAC,CAAC,CACRxB,EAAE,CAAC,WAAW,EAAElC,QAAQ,CAAC;IAC9B,CAAC,CAAC,OAAOgC,GAAG,EAAE;MACZH,OAAO,CAACL,KAAK,CAAC,0BAA0B,EAAEQ,GAAG,CAAC;IAChD;EACF,CAAC;EAED,MAAM2B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,KAAK,GAAG,MAAMZ,sBAAsB,CAAC,CAAC;IAC5C,IAAIY,KAAK,EAAE;MACTxC,WAAW,CAAC,IAAI,CAAC;MACjB6B,KAAK,CAAC,qEAAqE,CAAC;IAC9E,CAAC,MAAM;MACLA,KAAK,CAAC,4DAA4D,CAAC;IACrE;EACF,CAAC;EAED,MAAMlB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAM8B,UAAU,GAAG9D,KAAK,CAAC+D,MAAM,GAAG,CAAC,GAAG/D,KAAK,GAAGJ,aAAa;IAC3D,MAAMgD,SAAS,GAAG,IAAIrD,gBAAgB,CAACuE,UAAU,CAAC;IAClDhD,SAAS,CAAC8B,SAAS,CAAC;IAEpB,MAAMoB,CAAC,GAAGF,UAAU,CAACC,MAAM;IAC3B,MAAME,gBAAgB,GAAGC,IAAI,CAACC,IAAI,CAACH,CAAC,GAAGE,IAAI,CAACE,IAAI,CAACJ,CAAC,CAAC,CAAC;IACpDpD,eAAe,CAACqD,gBAAgB,CAAC;IACjCvD,qBAAqB,CAAC,CAAC,CAAC;IACxBF,cAAc,CAAC,CAAC,CAAC;IAEjBuC,aAAa,CAACH,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMG,aAAa,GAAG,MAAOsB,gBAAgB,IAAK;IAChD,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMD,gBAAgB,CAACE,IAAI,CAAC,OAAOC,IAAI,EAAEC,KAAK,KAAK;QACvErE,eAAe,CAAC;UAAEoE,IAAI;UAAEC;QAAM,CAAC,CAAC;QAChC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;UAC9B1D,cAAc,CAAC,MAAM0D,OAAO,CAAC;QAC/B,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,MAAM3B,kBAAkB,CAAC,CAAC;MAC1BlD,UAAU,CAACwE,aAAa,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAAA,IAAAC,qBAAA;QAC5C,MAAMC,cAAc,GAAG,EAAAD,qBAAA,GAAAhF,eAAe,CAACkF,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,IAAI,KAAKA,IAAI,CAAC,cAAAE,qBAAA,uBAA1CA,qBAAA,CAA4CI,MAAM,KAAI,IAAI;QACjF,OAAO;UACLN,IAAI;UACJM,MAAM,EAAEH,cAAc,GAAIF,KAAK,GAAG;QACpC,CAAC;MACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOrD,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,MAAM2D,UAAU,GAAGhG,WAAW,CAAEiG,MAAM,IAAK;IACzC,IAAIhF,eAAe,IAAI,CAACW,WAAW,EAAE;IAErCG,iBAAiB,CAACkE,MAAM,CAAC;IACzB/E,kBAAkB,CAAC,IAAI,CAAC;IAExB,MAAMgF,SAAS,GAAGD,MAAM,KAAK,MAAM,GAAG,CAAC,CAAC,GAAGA,MAAM,KAAK,OAAO,GAAG,CAAC,GAAGA,MAAM,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC;IAC7FrE,WAAW,CAACsE,SAAS,CAAC;IAEtB5E,qBAAqB,CAAC6E,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAEvCC,UAAU,CAAC,MAAM;MACflF,kBAAkB,CAAC,KAAK,CAAC;MACzBa,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,CAACH,WAAW,EAAEX,eAAe,CAAC,CAAC;EAElCf,SAAS,CAAC,MAAM;IACd,MAAMmG,cAAc,GAAIC,KAAK,IAAK;MAChC,IAAIrF,eAAe,EAAE;MAErB,QAAOqF,KAAK,CAACC,GAAG;QACd,KAAK,WAAW;UACdP,UAAU,CAAC,MAAM,CAAC;UAClB;QACF,KAAK,YAAY;UACfA,UAAU,CAAC,OAAO,CAAC;UACnB;QACF,KAAK,GAAG;QACR,KAAK,GAAG;UACNA,UAAU,CAAC,MAAM,CAAC;UAClB;QACF,KAAK,GAAG;QACR,KAAK,GAAG;UACNA,UAAU,CAAC,MAAM,CAAC;UAClB;QACF;UACE;MACJ;IACF,CAAC;IAED7C,MAAM,CAACqD,gBAAgB,CAAC,SAAS,EAAEH,cAAc,CAAC;IAClD,OAAO,MAAMlD,MAAM,CAACsD,mBAAmB,CAAC,SAAS,EAAEJ,cAAc,CAAC;EACpE,CAAC,EAAE,CAACL,UAAU,EAAE/E,eAAe,CAAC,CAAC;EAEjC,IAAI,CAACF,YAAY,EAAE,oBAAOR,OAAA;IAAAmG,QAAA,EAAK;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE1D,MAAM/C,QAAQ,GAAGe,IAAI,CAACiC,KAAK,CAAE1F,kBAAkB,GAAGE,YAAY,GAAI,GAAG,CAAC;EAEtE,oBACEhB,OAAA;IAAKyG,SAAS,EAAC,YAAY;IAAAN,QAAA,gBACzBnG,OAAA;MAAKyG,SAAS,EAAC,eAAe;MAAAN,QAAA,gBAC5BnG,OAAA;QAAKyG,SAAS,EAAC,YAAY;QAAAN,QAAA,gBACzBnG,OAAA;UAAMyG,SAAS,EAAC,cAAc;UAAAN,QAAA,GAAC,QAAM,EAACvF,WAAW;QAAA;UAAAwF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDvG,OAAA;UAAMyG,SAAS,EAAC,aAAa;UAAAN,QAAA,GAAC,QAAM,EAACrF,kBAAkB,EAAC,MAAI,EAACE,YAAY;QAAA;UAAAoF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACNvG,OAAA;QAAKyG,SAAS,EAAC,iBAAiB;QAAAN,QAAA,GAAE3C,QAAQ,EAAC,YAAU;MAAA;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC1D5E,WAAW,iBACV3B,OAAA;QACE0G,OAAO,EAAEzC,WAAY;QACrBwC,SAAS,EAAC,cAAc;QACxBE,QAAQ,EAAEjG,eAAgB;QAAAyF,QAAA,EAC3B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAEL9E,QAAQ,gBACPzB,OAAA;MAAKyG,SAAS,EAAC,gBAAgB;MAAAN,QAAA,gBAC7BnG,OAAA;QAAAmG,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BvG,OAAA;QAAAmG,QAAA,EAAG;MAAoE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3EvG,OAAA;QACE0G,OAAO,EAAEA,CAAA,KAAMhF,WAAW,CAAC,KAAK,CAAE;QAClC+E,SAAS,EAAC,eAAe;QAAAN,QAAA,EAC1B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENvG,OAAA;MAAKyG,SAAS,EAAC,SAAS;MAAAN,QAAA,gBACtBnG,OAAA;QAAKyG,SAAS,EAAC,WAAW;QAAAN,QAAA,gBACxBnG,OAAA;UAAKyG,SAAS,EAAC,qBAAqB;UAAAN,QAAA,eAClCnG,OAAA;YACEyG,SAAS,EAAE,aAAalF,cAAc,KAAK,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;YACtEmF,OAAO,EAAEA,CAAA,KAAM,CAAChG,eAAe,IAAI+E,UAAU,CAAC,MAAM,CAAE;YACtDmB,IAAI,EAAC,QAAQ;YACbC,QAAQ,EAAE,CAAE;YACZC,KAAK,EAAC,wBAAmB;YACzBH,QAAQ,EAAEjG,eAAgB;YAAAyF,QAAA,eAE1BnG,OAAA;cAAAmG,QAAA,EAAK3F,YAAY,CAACqE;YAAI;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENvG,OAAA;UAAKyG,SAAS,EAAC,YAAY;UAAAN,QAAA,eACzBnG,OAAA;YAAKyG,SAAS,EAAC,SAAS;YAAAN,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAENvG,OAAA;UAAKyG,SAAS,EAAC,sBAAsB;UAAAN,QAAA,eACnCnG,OAAA;YACEyG,SAAS,EAAE,aAAalF,cAAc,KAAK,OAAO,GAAG,UAAU,GAAG,EAAE,EAAG;YACvEmF,OAAO,EAAEA,CAAA,KAAM,CAAChG,eAAe,IAAI+E,UAAU,CAAC,OAAO,CAAE;YACvDmB,IAAI,EAAC,QAAQ;YACbC,QAAQ,EAAE,CAAE;YACZC,KAAK,EAAC,wBAAmB;YACzBH,QAAQ,EAAEjG,eAAgB;YAAAyF,QAAA,eAE1BnG,OAAA;cAAAmG,QAAA,EAAK3F,YAAY,CAACsE;YAAK;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENvG,OAAA;QAAKyG,SAAS,EAAC,gBAAgB;QAAAN,QAAA,gBAC7BnG,OAAA;UACEyG,SAAS,EAAE,wBAAwBlF,cAAc,KAAK,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;UACjFmF,OAAO,EAAEA,CAAA,KAAM,CAAChG,eAAe,IAAI+E,UAAU,CAAC,MAAM,CAAE;UACtDkB,QAAQ,EAAEjG,eAAgB;UAC1BoG,KAAK,EAAC,eAAe;UAAAX,QAAA,EACtB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTvG,OAAA;UACEyG,SAAS,EAAE,wBAAwBlF,cAAc,KAAK,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;UACjFmF,OAAO,EAAEA,CAAA,KAAM,CAAChG,eAAe,IAAI+E,UAAU,CAAC,MAAM,CAAE;UACtDkB,QAAQ,EAAEjG,eAAgB;UAC1BoG,KAAK,EAAC,eAAe;UAAAX,QAAA,EACtB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDvG,OAAA;MAAKyG,SAAS,EAAC,yBAAyB;MAAAN,QAAA,eACtCnG,OAAA;QAAAmG,QAAA,EAAG;MAAuD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAENvG,OAAA;MAAKyG,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC7BnG,OAAA;QAAAmG,QAAA,EAAG;MAA6D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChG,EAAA,CA7TQL,UAAU;AAAA6G,EAAA,GAAV7G,UAAU;AA+TnB,eAAeA,UAAU;AAAC,IAAA6G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}