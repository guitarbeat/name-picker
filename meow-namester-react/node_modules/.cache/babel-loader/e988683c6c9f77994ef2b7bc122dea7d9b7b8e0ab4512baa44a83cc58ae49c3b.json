{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js\",\n  _s = $RefreshSig$();\n/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport './Tournament.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tournament({\n  onComplete,\n  existingRatings = {},\n  names = [],\n  userName\n}) {\n  _s();\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showEndEarlyConfirmation, setShowEndEarlyConfirmation] = useState(false);\n  useEffect(() => {\n    console.log('Tournament received names:', names);\n  }, [names]);\n  useEffect(() => {\n    startNewTournament();\n  }, [names]);\n  const startNewTournament = () => {\n    if (!names || names.length === 0) {\n      console.log('No names provided for tournament');\n      return;\n    }\n    console.log('Starting new tournament with names:', names);\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n    runTournament(newSorter);\n  };\n  const runTournament = async tournamentSorter => {\n    try {\n      // Save initial state for recovery\n      const initialState = {\n        names,\n        existingRatings,\n        currentMatchNumber: 1,\n        roundNumber: 1\n      };\n      localStorage.setItem('tournamentState', JSON.stringify(initialState));\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({\n          left,\n          right\n        });\n        return new Promise(resolve => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // Calculate ratings with dynamic blend factor based on matches played\n      const ratingsArray = sortedResults.map((name, index) => {\n        // Get existing rating data\n        const existingData = typeof existingRatings[name] === 'object' ? existingRatings[name] : {\n          rating: existingRatings[name] || 1500,\n          matches: 0\n        };\n        const totalNames = sortedResults.length;\n        const position = index;\n\n        // Dynamic rating spread based on tournament size\n        const ratingSpread = Math.min(1000, totalNames * 25);\n\n        // Calculate position-based rating\n        const positionValue = (totalNames - position - 1) / (totalNames - 1) * ratingSpread;\n        const newPositionRating = 1500 + positionValue;\n\n        // Calculate blend factor based on number of matches played\n        // More matches = more weight on new rating\n        const matchesPlayed = currentMatchNumber;\n        const maxMatches = totalMatches;\n        const blendFactor = Math.min(0.8, matchesPlayed / maxMatches * 0.9);\n\n        // Weighted average of existing and new ratings\n        const newRating = Math.round(blendFactor * newPositionRating + (1 - blendFactor) * existingData.rating);\n\n        // Ensure rating stays within reasonable bounds\n        const minRating = 1000;\n        const maxRating = 2000;\n        const finalRating = Math.max(minRating, Math.min(maxRating, newRating));\n        return {\n          name,\n          rating: finalRating,\n          confidence: matchesPlayed / maxMatches // Add confidence score\n        };\n      });\n\n      // Clear saved state on successful completion\n      localStorage.removeItem('tournamentState');\n      onComplete(ratingsArray);\n    } catch (error) {\n      console.error('Tournament error:', error);\n      // Attempt to recover from saved state\n      const savedState = localStorage.getItem('tournamentState');\n      if (savedState) {\n        const state = JSON.parse(savedState);\n        setCurrentMatchNumber(state.currentMatchNumber);\n        setRoundNumber(state.roundNumber);\n        // Could implement more recovery logic here\n      }\n    }\n  };\n  const handleVote = useCallback(result => {\n    if (isTransitioning || !resolveVote) return;\n    setSelectedOption(result);\n    setIsTransitioning(true);\n\n    // Enhanced vote value calculation\n    let voteValue;\n    switch (result) {\n      case 'left':\n        voteValue = -1;\n        break;\n      case 'right':\n        voteValue = 1;\n        break;\n      case 'both':\n        // Randomize slight preference for variety\n        voteValue = Math.random() * 0.2 - 0.1;\n        break;\n      case 'none':\n        // True neutral with slight random variation\n        voteValue = Math.random() * 0.1 - 0.05;\n        break;\n      default:\n        voteValue = 0;\n    }\n\n    // Save progress\n    localStorage.setItem('lastVote', JSON.stringify({\n      matchNumber: currentMatchNumber,\n      result: voteValue,\n      timestamp: Date.now()\n    }));\n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n\n    // Update round number if needed\n    if (currentMatchNumber % Math.ceil(names.length / 2) === 0) {\n      setRoundNumber(prev => prev + 1);\n    }\n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning, currentMatchNumber, names.length]);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (isTransitioning) return;\n      switch (event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n  const handleEndEarly = () => {\n    setShowEndEarlyConfirmation(true);\n  };\n  const handleConfirmEnd = () => {\n    // Calculate current rankings based on completed matches\n    const currentRankings = sorter.getCurrentRankings().map((nameObj, index) => {\n      // Get existing rating or default\n      const currentRating = typeof existingRatings[nameObj.name] === 'object' ? existingRatings[nameObj.name].rating : existingRatings[nameObj.name] || 1500;\n\n      // Calculate new rating based on position\n      const totalNames = names.length;\n      const position = index;\n      const ratingSpread = 500;\n      const positionValue = (totalNames - position - 1) / (totalNames - 1) * ratingSpread;\n\n      // Blend existing rating with new position-based rating\n      const blendFactor = 0.7;\n      const newRating = Math.round(blendFactor * (1500 + positionValue) + (1 - blendFactor) * currentRating);\n\n      // Ensure rating stays within bounds\n      const finalRating = Math.max(1000, Math.min(2000, newRating));\n      return {\n        name: nameObj.name,\n        rating: finalRating,\n        description: nameObj.description\n      };\n    });\n    onComplete(currentRankings);\n  };\n  const handleCancelEnd = () => {\n    setShowEndEarlyConfirmation(false);\n  };\n  if (!currentMatch) {\n    console.log('No current match');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading tournament...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 12\n    }, this);\n  }\n  console.log('Current match:', currentMatch);\n  const progress = Math.round(currentMatchNumber / totalMatches * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"round-number\",\n          children: [\"Round \", roundNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"match-count\",\n          children: [\"Match \", currentMatchNumber, \" of \", totalMatches]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-info\",\n        children: [progress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-early-button\",\n        onClick: handleEndEarly,\n        disabled: isTransitioning,\n        children: \"End Tournament Early\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), showEndEarlyConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"end-early-confirmation\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to end the tournament early? Current progress will be saved and you can adjust rankings manually.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirm-end-button\",\n          onClick: handleConfirmEnd,\n          children: \"Yes, End Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-end-button\",\n          onClick: handleCancelEnd,\n          children: \"No, Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"names-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'left' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('left'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2190 arrow key\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.left.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"name-description\",\n              children: currentMatch.left.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vs-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vs-text\",\n            children: \"vs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-container right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `name-card ${selectedOption === 'right' ? 'selected' : ''}`,\n            onClick: () => !isTransitioning && handleVote('right'),\n            role: \"button\",\n            tabIndex: 0,\n            title: \"Press \\u2192 arrow key\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentMatch.right.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"name-description\",\n              children: currentMatch.right.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('both'),\n          disabled: isTransitioning,\n          title: \"Press 'B' key\",\n          children: \"Like Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`,\n          onClick: () => !isTransitioning && handleVote('none'),\n          disabled: isTransitioning,\n          title: \"Press 'N' key\",\n          children: \"No Opinion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on a name to choose it, or select an option below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-hints\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keyboard shortcuts: \\u2190 Left, \\u2192 Right, B (Both), N (No Opinion)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournament, \"LoLUXQa547h+8i2lpNR6CIB3f/Q=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","PreferenceSorter","EloRating","jsxDEV","_jsxDEV","Tournament","onComplete","existingRatings","names","userName","_s","currentMatch","setCurrentMatch","isTransitioning","setIsTransitioning","roundNumber","setRoundNumber","currentMatchNumber","setCurrentMatchNumber","totalMatches","setTotalMatches","sorter","setSorter","elo","resolveVote","setResolveVote","selectedOption","setSelectedOption","showEndEarlyConfirmation","setShowEndEarlyConfirmation","console","log","startNewTournament","length","newSorter","n","estimatedMatches","Math","ceil","log2","runTournament","tournamentSorter","initialState","localStorage","setItem","JSON","stringify","sortedResults","sort","left","right","Promise","resolve","ratingsArray","map","name","index","existingData","rating","matches","totalNames","position","ratingSpread","min","positionValue","newPositionRating","matchesPlayed","maxMatches","blendFactor","newRating","round","minRating","maxRating","finalRating","max","confidence","removeItem","error","savedState","getItem","state","parse","handleVote","result","voteValue","random","matchNumber","timestamp","Date","now","prev","setTimeout","handleKeyPress","event","key","window","addEventListener","removeEventListener","handleEndEarly","handleConfirmEnd","currentRankings","getCurrentRankings","nameObj","currentRating","description","handleCancelEnd","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","className","onClick","disabled","role","tabIndex","title","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js"],"sourcesContent":["/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport './Tournament.css';\n\nfunction Tournament({ onComplete, existingRatings = {}, names = [], userName }) {\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showEndEarlyConfirmation, setShowEndEarlyConfirmation] = useState(false);\n\n  useEffect(() => {\n    console.log('Tournament received names:', names);\n  }, [names]);\n\n  useEffect(() => {\n    startNewTournament();\n  }, [names]);\n\n  const startNewTournament = () => {\n    if (!names || names.length === 0) {\n      console.log('No names provided for tournament');\n      return;\n    }\n\n    console.log('Starting new tournament with names:', names);\n    const newSorter = new PreferenceSorter(names);\n    setSorter(newSorter);\n    \n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n\n    runTournament(newSorter);\n  };\n\n  const runTournament = async (tournamentSorter) => {\n    try {\n      // Save initial state for recovery\n      const initialState = {\n        names,\n        existingRatings,\n        currentMatchNumber: 1,\n        roundNumber: 1\n      };\n      localStorage.setItem('tournamentState', JSON.stringify(initialState));\n\n      const sortedResults = await tournamentSorter.sort(async (left, right) => {\n        setCurrentMatch({ left, right });\n        return new Promise((resolve) => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // Calculate ratings with dynamic blend factor based on matches played\n      const ratingsArray = sortedResults.map((name, index) => {\n        // Get existing rating data\n        const existingData = typeof existingRatings[name] === 'object'\n          ? existingRatings[name]\n          : { rating: existingRatings[name] || 1500, matches: 0 };\n\n        const totalNames = sortedResults.length;\n        const position = index;\n        \n        // Dynamic rating spread based on tournament size\n        const ratingSpread = Math.min(1000, totalNames * 25);\n        \n        // Calculate position-based rating\n        const positionValue = ((totalNames - position - 1) / (totalNames - 1)) * ratingSpread;\n        const newPositionRating = 1500 + positionValue;\n\n        // Calculate blend factor based on number of matches played\n        // More matches = more weight on new rating\n        const matchesPlayed = currentMatchNumber;\n        const maxMatches = totalMatches;\n        const blendFactor = Math.min(0.8, (matchesPlayed / maxMatches) * 0.9);\n\n        // Weighted average of existing and new ratings\n        const newRating = Math.round(\n          (blendFactor * newPositionRating) +\n          ((1 - blendFactor) * existingData.rating)\n        );\n\n        // Ensure rating stays within reasonable bounds\n        const minRating = 1000;\n        const maxRating = 2000;\n        const finalRating = Math.max(minRating, Math.min(maxRating, newRating));\n\n        return {\n          name,\n          rating: finalRating,\n          confidence: (matchesPlayed / maxMatches) // Add confidence score\n        };\n      });\n\n      // Clear saved state on successful completion\n      localStorage.removeItem('tournamentState');\n      \n      onComplete(ratingsArray);\n    } catch (error) {\n      console.error('Tournament error:', error);\n      // Attempt to recover from saved state\n      const savedState = localStorage.getItem('tournamentState');\n      if (savedState) {\n        const state = JSON.parse(savedState);\n        setCurrentMatchNumber(state.currentMatchNumber);\n        setRoundNumber(state.roundNumber);\n        // Could implement more recovery logic here\n      }\n    }\n  };\n\n  const handleVote = useCallback((result) => {\n    if (isTransitioning || !resolveVote) return;\n\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    \n    // Enhanced vote value calculation\n    let voteValue;\n    switch (result) {\n      case 'left':\n        voteValue = -1;\n        break;\n      case 'right':\n        voteValue = 1;\n        break;\n      case 'both':\n        // Randomize slight preference for variety\n        voteValue = Math.random() * 0.2 - 0.1;\n        break;\n      case 'none':\n        // True neutral with slight random variation\n        voteValue = Math.random() * 0.1 - 0.05;\n        break;\n      default:\n        voteValue = 0;\n    }\n    \n    // Save progress\n    localStorage.setItem('lastVote', JSON.stringify({\n      matchNumber: currentMatchNumber,\n      result: voteValue,\n      timestamp: Date.now()\n    }));\n\n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    \n    // Update round number if needed\n    if (currentMatchNumber % Math.ceil(names.length / 2) === 0) {\n      setRoundNumber(prev => prev + 1);\n    }\n    \n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning, currentMatchNumber, names.length]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (isTransitioning) return;\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  const handleEndEarly = () => {\n    setShowEndEarlyConfirmation(true);\n  };\n\n  const handleConfirmEnd = () => {\n    // Calculate current rankings based on completed matches\n    const currentRankings = sorter.getCurrentRankings().map((nameObj, index) => {\n      // Get existing rating or default\n      const currentRating = typeof existingRatings[nameObj.name] === 'object'\n        ? existingRatings[nameObj.name].rating\n        : (existingRatings[nameObj.name] || 1500);\n      \n      // Calculate new rating based on position\n      const totalNames = names.length;\n      const position = index;\n      const ratingSpread = 500;\n      const positionValue = ((totalNames - position - 1) / (totalNames - 1)) * ratingSpread;\n      \n      // Blend existing rating with new position-based rating\n      const blendFactor = 0.7;\n      const newRating = Math.round(\n        (blendFactor * (1500 + positionValue)) +\n        ((1 - blendFactor) * currentRating)\n      );\n\n      // Ensure rating stays within bounds\n      const finalRating = Math.max(1000, Math.min(2000, newRating));\n      \n      return {\n        name: nameObj.name,\n        rating: finalRating,\n        description: nameObj.description\n      };\n    });\n\n    onComplete(currentRankings);\n  };\n\n  const handleCancelEnd = () => {\n    setShowEndEarlyConfirmation(false);\n  };\n\n  if (!currentMatch) {\n    console.log('No current match');\n    return <div>Loading tournament...</div>;\n  }\n\n  console.log('Current match:', currentMatch);\n\n  const progress = Math.round((currentMatchNumber / totalMatches) * 100);\n\n  return (\n    <div className=\"tournament\">\n      <div className=\"progress-info\">\n        <div className=\"round-info\">\n          <span className=\"round-number\">Round {roundNumber}</span>\n          <span className=\"match-count\">Match {currentMatchNumber} of {totalMatches}</span>\n        </div>\n        <div className=\"percentage-info\">{progress}% Complete</div>\n      </div>\n\n      <div className=\"tournament-controls\">\n        <button \n          className=\"end-early-button\"\n          onClick={handleEndEarly}\n          disabled={isTransitioning}\n        >\n          End Tournament Early\n        </button>\n\n        {showEndEarlyConfirmation && (\n          <div className=\"end-early-confirmation\">\n            <p>Are you sure you want to end the tournament early? Current progress will be saved and you can adjust rankings manually.</p>\n            <button \n              className=\"confirm-end-button\"\n              onClick={handleConfirmEnd}\n            >\n              Yes, End Now\n            </button>\n            <button \n              className=\"cancel-end-button\"\n              onClick={handleCancelEnd}\n            >\n              No, Continue\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"matchup\">\n        <div className=\"names-row\">\n          <div className=\"name-container left\">\n            <div \n              className={`name-card ${selectedOption === 'left' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('left')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press ← arrow key\"\n            >\n              <h3>{currentMatch.left.name}</h3>\n              <p className=\"name-description\">{currentMatch.left.description}</p>\n            </div>\n          </div>\n\n          <div className=\"vs-section\">\n            <div className=\"vs-text\">vs</div>\n          </div>\n\n          <div className=\"name-container right\">\n            <div \n              className={`name-card ${selectedOption === 'right' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('right')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press → arrow key\"\n            >\n              <h3>{currentMatch.right.name}</h3>\n              <p className=\"name-description\">{currentMatch.right.description}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"center-options\">\n          <button\n            className={`extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('both')}\n            disabled={isTransitioning}\n            title=\"Press 'B' key\"\n          >\n            Like Both\n          </button>\n          <button\n            className={`extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('none')}\n            disabled={isTransitioning}\n            title=\"Press 'N' key\"\n          >\n            No Opinion\n          </button>\n        </div>\n      </div>\n\n      <div className=\"tournament-instructions\">\n        <p>Click on a name to choose it, or select an option below</p>\n      </div>\n\n      <div className=\"keyboard-hints\">\n        <p>Keyboard shortcuts: ← Left, → Right, B (Both), N (No Opinion)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Tournament; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}