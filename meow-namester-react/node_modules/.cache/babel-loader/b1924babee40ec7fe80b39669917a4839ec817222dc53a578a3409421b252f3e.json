{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Results/Results.js\",\n  _s = $RefreshSig$();\n/**\n * @module Results\n * @description Main results component that displays the final rankings of cat names.\n * Shows the tournament results with ratings and provides option to restart.\n * \n * @example\n * <Results \n *   ratings={{ \"Whiskers\": 1450, \"Mittens\": 1380 }}\n *   onRestart={() => handleRestart()}\n * />\n * \n * @component\n * @param {Object} props\n * @param {Object} props.ratings - Object mapping cat names to their Elo ratings\n * @param {Function} props.onRestart - Callback function to restart the tournament\n * @returns {JSX.Element} Results view with rankings and restart option\n */\n\nimport React, { useState } from 'react';\nimport ResultsTable from './ResultsTable';\nimport RankingAdjustment from '../RankingAdjustment/RankingAdjustment';\nimport './Results.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Results({\n  ratings,\n  onStartNew,\n  userName,\n  onUpdateRatings,\n  currentTournamentNames\n}) {\n  _s();\n  const [currentRankings, setCurrentRankings] = useState(() => {\n    console.log('Initializing Results with:', {\n      ratings,\n      currentTournamentNames\n    });\n\n    // Ensure we have valid ratings data\n    if (!ratings || typeof ratings !== 'object') {\n      console.warn('Invalid ratings data received:', ratings);\n      return [];\n    }\n\n    // Convert ratings to array format if it's an object\n    let rankingsArray = Array.isArray(ratings) ? ratings : Object.entries(ratings).map(([name, value]) => ({\n      name,\n      rating: typeof value === 'object' ? value.rating : value || 1500,\n      name_id: value === null || value === void 0 ? void 0 : value.name_id\n    }));\n\n    // Filter to only show current tournament names if provided\n    if (currentTournamentNames && currentTournamentNames.length > 0) {\n      console.log('Filtering rankings to tournament names:', currentTournamentNames);\n      rankingsArray = rankingsArray.filter(item => currentTournamentNames.includes(item.name));\n    }\n    return rankingsArray.sort((a, b) => b.rating - a.rating);\n  });\n\n  // Update rankings immediately when adjustments are made\n  const handleSaveAdjustments = async adjustedRankings => {\n    console.log('Saving adjusted rankings:', adjustedRankings);\n    setCurrentRankings(adjustedRankings);\n\n    // Convert the array to the expected ratings object format\n    const newRatings = adjustedRankings.map(({\n      name,\n      rating\n    }) => {\n      const existingRating = Array.isArray(ratings) ? ratings.find(r => r.name === name) : ratings[name];\n      return {\n        name_id: existingRating === null || existingRating === void 0 ? void 0 : existingRating.name_id,\n        name: name,\n        rating: Math.round(rating),\n        wins: (existingRating === null || existingRating === void 0 ? void 0 : existingRating.wins) || 0,\n        losses: (existingRating === null || existingRating === void 0 ? void 0 : existingRating.losses) || 0\n      };\n    });\n    if (onUpdateRatings) {\n      try {\n        await onUpdateRatings(newRatings);\n      } catch (error) {\n        console.error('Failed to update ratings:', error);\n        // Optionally show error to user\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Name Rankings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"results-info\",\n      children: [\"Adjust your name rankings here\", userName ? `, ${userName}` : '', \"! Drag and drop to reorder names.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RankingAdjustment, {\n      rankings: currentRankings,\n      onSave: handleSaveAdjustments,\n      onCancel: () => {},\n      userName: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onStartNew,\n        className: \"primary-button\",\n        children: \"Start New Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"results-tip\",\n        children: \"Starting a new tournament will let you rate more names while keeping your current rankings.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Results, \"hVb5+hG2AIVwLFUfY4Cvy2MvOLk=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","ResultsTable","RankingAdjustment","jsxDEV","_jsxDEV","Results","ratings","onStartNew","userName","onUpdateRatings","currentTournamentNames","_s","currentRankings","setCurrentRankings","console","log","warn","rankingsArray","Array","isArray","Object","entries","map","name","value","rating","name_id","length","filter","item","includes","sort","a","b","handleSaveAdjustments","adjustedRankings","newRatings","existingRating","find","r","Math","round","wins","losses","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rankings","onSave","onCancel","onClick","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Results/Results.js"],"sourcesContent":["/**\n * @module Results\n * @description Main results component that displays the final rankings of cat names.\n * Shows the tournament results with ratings and provides option to restart.\n * \n * @example\n * <Results \n *   ratings={{ \"Whiskers\": 1450, \"Mittens\": 1380 }}\n *   onRestart={() => handleRestart()}\n * />\n * \n * @component\n * @param {Object} props\n * @param {Object} props.ratings - Object mapping cat names to their Elo ratings\n * @param {Function} props.onRestart - Callback function to restart the tournament\n * @returns {JSX.Element} Results view with rankings and restart option\n */\n\nimport React, { useState } from 'react';\nimport ResultsTable from './ResultsTable';\nimport RankingAdjustment from '../RankingAdjustment/RankingAdjustment';\nimport './Results.css';\n\nfunction Results({ ratings, onStartNew, userName, onUpdateRatings, currentTournamentNames }) {\n  const [currentRankings, setCurrentRankings] = useState(() => {\n    console.log('Initializing Results with:', { ratings, currentTournamentNames });\n    \n    // Ensure we have valid ratings data\n    if (!ratings || typeof ratings !== 'object') {\n      console.warn('Invalid ratings data received:', ratings);\n      return [];\n    }\n\n    // Convert ratings to array format if it's an object\n    let rankingsArray = Array.isArray(ratings) ? ratings : Object.entries(ratings)\n      .map(([name, value]) => ({\n        name,\n        rating: typeof value === 'object' ? value.rating : (value || 1500),\n        name_id: value?.name_id\n      }));\n\n    // Filter to only show current tournament names if provided\n    if (currentTournamentNames && currentTournamentNames.length > 0) {\n      console.log('Filtering rankings to tournament names:', currentTournamentNames);\n      rankingsArray = rankingsArray.filter(item => \n        currentTournamentNames.includes(item.name)\n      );\n    }\n\n    return rankingsArray.sort((a, b) => b.rating - a.rating);\n  });\n\n  // Update rankings immediately when adjustments are made\n  const handleSaveAdjustments = async (adjustedRankings) => {\n    console.log('Saving adjusted rankings:', adjustedRankings);\n    setCurrentRankings(adjustedRankings);\n    \n    // Convert the array to the expected ratings object format\n    const newRatings = adjustedRankings.map(({ name, rating }) => {\n      const existingRating = Array.isArray(ratings) \n        ? ratings.find(r => r.name === name)\n        : ratings[name];\n\n      return {\n        name_id: existingRating?.name_id,\n        name: name,\n        rating: Math.round(rating),\n        wins: existingRating?.wins || 0,\n        losses: existingRating?.losses || 0\n      };\n    });\n    \n    if (onUpdateRatings) {\n      try {\n        await onUpdateRatings(newRatings);\n      } catch (error) {\n        console.error('Failed to update ratings:', error);\n        // Optionally show error to user\n      }\n    }\n  };\n\n  return (\n    <div className=\"results-container\">\n      <h2>Name Rankings</h2>\n      <p className=\"results-info\">\n        Adjust your name rankings here{userName ? `, ${userName}` : ''}! Drag and drop to reorder names.\n      </p>\n\n      <RankingAdjustment\n        rankings={currentRankings}\n        onSave={handleSaveAdjustments}\n        onCancel={() => {}} \n        userName={userName}\n      />\n\n      <div className=\"results-actions\">\n        <button onClick={onStartNew} className=\"primary-button\">\n          Start New Tournament\n        </button>\n        <p className=\"results-tip\">\n          Starting a new tournament will let you rate more names while keeping your current rankings.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAuB,CAAC,EAAE;EAAAC,EAAA;EAC3F,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,MAAM;IAC3Dc,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE;MAAET,OAAO;MAAEI;IAAuB,CAAC,CAAC;;IAE9E;IACA,IAAI,CAACJ,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC3CQ,OAAO,CAACE,IAAI,CAAC,gCAAgC,EAAEV,OAAO,CAAC;MACvD,OAAO,EAAE;IACX;;IAEA;IACA,IAAIW,aAAa,GAAGC,KAAK,CAACC,OAAO,CAACb,OAAO,CAAC,GAAGA,OAAO,GAAGc,MAAM,CAACC,OAAO,CAACf,OAAO,CAAC,CAC3EgB,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,KAAK,CAAC,MAAM;MACvBD,IAAI;MACJE,MAAM,EAAE,OAAOD,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACC,MAAM,GAAID,KAAK,IAAI,IAAK;MAClEE,OAAO,EAAEF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE;IAClB,CAAC,CAAC,CAAC;;IAEL;IACA,IAAIhB,sBAAsB,IAAIA,sBAAsB,CAACiB,MAAM,GAAG,CAAC,EAAE;MAC/Db,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEL,sBAAsB,CAAC;MAC9EO,aAAa,GAAGA,aAAa,CAACW,MAAM,CAACC,IAAI,IACvCnB,sBAAsB,CAACoB,QAAQ,CAACD,IAAI,CAACN,IAAI,CAC3C,CAAC;IACH;IAEA,OAAON,aAAa,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACR,MAAM,GAAGO,CAAC,CAACP,MAAM,CAAC;EAC1D,CAAC,CAAC;;EAEF;EACA,MAAMS,qBAAqB,GAAG,MAAOC,gBAAgB,IAAK;IACxDrB,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEoB,gBAAgB,CAAC;IAC1DtB,kBAAkB,CAACsB,gBAAgB,CAAC;;IAEpC;IACA,MAAMC,UAAU,GAAGD,gBAAgB,CAACb,GAAG,CAAC,CAAC;MAAEC,IAAI;MAAEE;IAAO,CAAC,KAAK;MAC5D,MAAMY,cAAc,GAAGnB,KAAK,CAACC,OAAO,CAACb,OAAO,CAAC,GACzCA,OAAO,CAACgC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,IAAI,KAAKA,IAAI,CAAC,GAClCjB,OAAO,CAACiB,IAAI,CAAC;MAEjB,OAAO;QACLG,OAAO,EAAEW,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEX,OAAO;QAChCH,IAAI,EAAEA,IAAI;QACVE,MAAM,EAAEe,IAAI,CAACC,KAAK,CAAChB,MAAM,CAAC;QAC1BiB,IAAI,EAAE,CAAAL,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEK,IAAI,KAAI,CAAC;QAC/BC,MAAM,EAAE,CAAAN,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEM,MAAM,KAAI;MACpC,CAAC;IACH,CAAC,CAAC;IAEF,IAAIlC,eAAe,EAAE;MACnB,IAAI;QACF,MAAMA,eAAe,CAAC2B,UAAU,CAAC;MACnC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACd9B,OAAO,CAAC8B,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD;MACF;IACF;EACF,CAAC;EAED,oBACExC,OAAA;IAAKyC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC1C,OAAA;MAAA0C,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB9C,OAAA;MAAGyC,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,gCACI,EAACtC,QAAQ,GAAG,KAAKA,QAAQ,EAAE,GAAG,EAAE,EAAC,mCACjE;IAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEJ9C,OAAA,CAACF,iBAAiB;MAChBiD,QAAQ,EAAEvC,eAAgB;MAC1BwC,MAAM,EAAElB,qBAAsB;MAC9BmB,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAE;MACnB7C,QAAQ,EAAEA;IAAS;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAEF9C,OAAA;MAAKyC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B1C,OAAA;QAAQkD,OAAO,EAAE/C,UAAW;QAACsC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAExD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9C,OAAA;QAAGyC,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAE3B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvC,EAAA,CAnFQN,OAAO;AAAAkD,EAAA,GAAPlD,OAAO;AAqFhB,eAAeA,OAAO;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}