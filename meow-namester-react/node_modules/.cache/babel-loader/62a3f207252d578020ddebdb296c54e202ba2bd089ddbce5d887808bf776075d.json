{"ast":null,"code":"var _s = $RefreshSig$();\n/**\n * @module useKeyboardControls\n * @description A custom hook that handles keyboard controls for the tournament interface\n */\n\nimport { useEffect } from 'react';\nexport function useKeyboardControls({\n  onLeft,\n  onRight,\n  onBoth,\n  onNone,\n  onUndo,\n  isDisabled = false\n}) {\n  _s();\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (isDisabled) return;\n      switch (event.key.toLowerCase()) {\n        case 'arrowleft':\n          event.preventDefault();\n          onLeft === null || onLeft === void 0 ? void 0 : onLeft();\n          break;\n        case 'arrowright':\n          event.preventDefault();\n          onRight === null || onRight === void 0 ? void 0 : onRight();\n          break;\n        case 'b':\n          event.preventDefault();\n          onBoth === null || onBoth === void 0 ? void 0 : onBoth();\n          break;\n        case 'n':\n          event.preventDefault();\n          onNone === null || onNone === void 0 ? void 0 : onNone();\n          break;\n        case 'u':\n          event.preventDefault();\n          onUndo === null || onUndo === void 0 ? void 0 : onUndo();\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [onLeft, onRight, onBoth, onNone, onUndo, isDisabled]);\n}\n_s(useKeyboardControls, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","useKeyboardControls","onLeft","onRight","onBoth","onNone","onUndo","isDisabled","_s","handleKeyDown","event","key","toLowerCase","preventDefault","window","addEventListener","removeEventListener"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/hooks/useKeyboardControls.js"],"sourcesContent":["/**\n * @module useKeyboardControls\n * @description A custom hook that handles keyboard controls for the tournament interface\n */\n\nimport { useEffect } from 'react';\n\nexport function useKeyboardControls({\n  onLeft,\n  onRight,\n  onBoth,\n  onNone,\n  onUndo,\n  isDisabled = false\n}) {\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (isDisabled) return;\n      \n      switch(event.key.toLowerCase()) {\n        case 'arrowleft':\n          event.preventDefault();\n          onLeft?.();\n          break;\n        case 'arrowright':\n          event.preventDefault();\n          onRight?.();\n          break;\n        case 'b':\n          event.preventDefault();\n          onBoth?.();\n          break;\n        case 'n':\n          event.preventDefault();\n          onNone?.();\n          break;\n        case 'u':\n          event.preventDefault();\n          onUndo?.();\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [onLeft, onRight, onBoth, onNone, onUndo, isDisabled]);\n} "],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AAEjC,OAAO,SAASC,mBAAmBA,CAAC;EAClCC,MAAM;EACNC,OAAO;EACPC,MAAM;EACNC,MAAM;EACNC,MAAM;EACNC,UAAU,GAAG;AACf,CAAC,EAAE;EAAAC,EAAA;EACDR,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAIC,KAAK,IAAK;MAC/B,IAAIH,UAAU,EAAE;MAEhB,QAAOG,KAAK,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC;QAC5B,KAAK,WAAW;UACdF,KAAK,CAACG,cAAc,CAAC,CAAC;UACtBX,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC;UACV;QACF,KAAK,YAAY;UACfQ,KAAK,CAACG,cAAc,CAAC,CAAC;UACtBV,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAG,CAAC;UACX;QACF,KAAK,GAAG;UACNO,KAAK,CAACG,cAAc,CAAC,CAAC;UACtBT,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC;UACV;QACF,KAAK,GAAG;UACNM,KAAK,CAACG,cAAc,CAAC,CAAC;UACtBR,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC;UACV;QACF,KAAK,GAAG;UACNK,KAAK,CAACG,cAAc,CAAC,CAAC;UACtBP,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC;UACV;QACF;UACE;MACJ;IACF,CAAC;IAEDQ,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;IACjD,OAAO,MAAMK,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;EACnE,CAAC,EAAE,CAACP,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,UAAU,CAAC,CAAC;AAC3D;AAACC,EAAA,CAzCeP,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}