{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Results/ResultsTable.js\";\n/**\n * @module ResultsTable\n * @description A component that displays a sorted table of cat names and their ratings.\n * Handles the sorting and formatting of ratings data.\n * \n * @example\n * <ResultsTable \n *   ratings={[{ name: \"Whiskers\", rating: 1450 }, { name: \"Mittens\", rating: 1380 }]}\n * />\n * \n * @component\n * @param {Object} props\n * @param {Object} props.ratings - Object with name and rating properties\n * @param {Array} props.orderedNames - Array of ordered cat names\n * @returns {JSX.Element} Formatted table of cat names and their ratings\n */\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsTable({\n  ratings = {},\n  orderedNames\n}) {\n  const formatRating = rating => {\n    if (typeof rating === 'number') return rating;\n    if (typeof rating === 'object' && rating !== null) return rating.rating;\n    return 1500;\n  };\n  const formatName = name => {\n    if (typeof name === 'string') return name;\n    if (typeof name === 'object' && name !== null) return name.name;\n    return String(name);\n  };\n  const sortedRatings = orderedNames ? orderedNames.map(name => ({\n    name: formatName(name),\n    rating: Math.round(formatRating(ratings[name]))\n  })) : Object.entries(ratings).map(([name, rating]) => ({\n    name: formatName(name),\n    rating: Math.round(formatRating(rating))\n  })).sort((a, b) => b.rating - a.rating);\n  if (!sortedRatings.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ratings available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"help-text\",\n        children: \"Complete a tournament to see rankings here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ratings-list\",\n    children: sortedRatings.map(({\n      name,\n      rating\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rank\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rating\",\n        children: [\"Rating: \", Math.round(rating)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultsTable","ratings","orderedNames","formatRating","rating","formatName","name","String","sortedRatings","map","Math","round","Object","entries","sort","a","b","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Results/ResultsTable.js"],"sourcesContent":["/**\n * @module ResultsTable\n * @description A component that displays a sorted table of cat names and their ratings.\n * Handles the sorting and formatting of ratings data.\n * \n * @example\n * <ResultsTable \n *   ratings={[{ name: \"Whiskers\", rating: 1450 }, { name: \"Mittens\", rating: 1380 }]}\n * />\n * \n * @component\n * @param {Object} props\n * @param {Object} props.ratings - Object with name and rating properties\n * @param {Array} props.orderedNames - Array of ordered cat names\n * @returns {JSX.Element} Formatted table of cat names and their ratings\n */\n\nimport React from 'react';\n\nfunction ResultsTable({ ratings = {}, orderedNames }) {\n  const formatRating = (rating) => {\n    if (typeof rating === 'number') return rating;\n    if (typeof rating === 'object' && rating !== null) return rating.rating;\n    return 1500;\n  };\n\n  const formatName = (name) => {\n    if (typeof name === 'string') return name;\n    if (typeof name === 'object' && name !== null) return name.name;\n    return String(name);\n  };\n\n  const sortedRatings = orderedNames\n    ? orderedNames.map(name => ({\n        name: formatName(name),\n        rating: Math.round(formatRating(ratings[name]))\n      }))\n    : Object.entries(ratings)\n        .map(([name, rating]) => ({\n          name: formatName(name),\n          rating: Math.round(formatRating(rating))\n        }))\n        .sort((a, b) => b.rating - a.rating);\n\n  if (!sortedRatings.length) {\n    return (\n      <div className=\"no-results\">\n        <p>No ratings available yet.</p>\n        <p className=\"help-text\">Complete a tournament to see rankings here.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ratings-list\">\n      {sortedRatings.map(({ name, rating }, index) => (\n        <div key={name} className=\"rating-item\">\n          <span className=\"rank\">{index + 1}</span>\n          <span className=\"name\">{name}</span>\n          <span className=\"rating\">Rating: {Math.round(rating)}</span>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ResultsTable; "],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAC;EAAEC,OAAO,GAAG,CAAC,CAAC;EAAEC;AAAa,CAAC,EAAE;EACpD,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/B,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE,OAAOA,MAAM;IAC7C,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,KAAK,IAAI,EAAE,OAAOA,MAAM,CAACA,MAAM;IACvE,OAAO,IAAI;EACb,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE,OAAOA,IAAI;IACzC,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAOA,IAAI,CAACA,IAAI;IAC/D,OAAOC,MAAM,CAACD,IAAI,CAAC;EACrB,CAAC;EAED,MAAME,aAAa,GAAGN,YAAY,GAC9BA,YAAY,CAACO,GAAG,CAACH,IAAI,KAAK;IACxBA,IAAI,EAAED,UAAU,CAACC,IAAI,CAAC;IACtBF,MAAM,EAAEM,IAAI,CAACC,KAAK,CAACR,YAAY,CAACF,OAAO,CAACK,IAAI,CAAC,CAAC;EAChD,CAAC,CAAC,CAAC,GACHM,MAAM,CAACC,OAAO,CAACZ,OAAO,CAAC,CACpBQ,GAAG,CAAC,CAAC,CAACH,IAAI,EAAEF,MAAM,CAAC,MAAM;IACxBE,IAAI,EAAED,UAAU,CAACC,IAAI,CAAC;IACtBF,MAAM,EAAEM,IAAI,CAACC,KAAK,CAACR,YAAY,CAACC,MAAM,CAAC;EACzC,CAAC,CAAC,CAAC,CACFU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACZ,MAAM,GAAGW,CAAC,CAACX,MAAM,CAAC;EAE1C,IAAI,CAACI,aAAa,CAACS,MAAM,EAAE;IACzB,oBACElB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpB,OAAA;QAAAoB,QAAA,EAAG;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChCxB,OAAA;QAAGmB,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAEV;EAEA,oBACExB,OAAA;IAAKmB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BX,aAAa,CAACC,GAAG,CAAC,CAAC;MAAEH,IAAI;MAAEF;IAAO,CAAC,EAAEoB,KAAK,kBACzCzB,OAAA;MAAgBmB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACrCpB,OAAA;QAAMmB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEK,KAAK,GAAG;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzCxB,OAAA;QAAMmB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEb;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCxB,OAAA;QAAMmB,SAAS,EAAC,QAAQ;QAAAC,QAAA,GAAC,UAAQ,EAACT,IAAI,CAACC,KAAK,CAACP,MAAM,CAAC;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAHpDjB,IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIT,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACE,EAAA,GA7CQzB,YAAY;AA+CrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}