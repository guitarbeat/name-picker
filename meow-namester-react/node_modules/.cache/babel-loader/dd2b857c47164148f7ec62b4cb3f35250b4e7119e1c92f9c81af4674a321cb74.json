{"ast":null,"code":"/**\n * @module Bracket\n * @description A React component that displays a tournament bracket visualization.\n * Shows the progression of matches, winners, and results in a bracket format.\n * Supports different match outcomes including wins, ties, and skipped matches.\n * \n * @example\n * <Bracket\n *   matches={[\n *     { id: 1, name1: \"Whiskers\", name2: \"Mittens\", winner: -1 },\n *     { id: 2, name1: \"Luna\", name2: \"Shadow\", winner: 1 }\n *   ]}\n * />\n * \n * @param {Object} props\n * @param {Array} props.matches - Array of match objects containing match details\n * @param {number} props.matches[].id - Unique identifier for the match\n * @param {string} props.matches[].name1 - First name in the match\n * @param {string} props.matches[].name2 - Second name in the match\n * @param {number} props.matches[].winner - Winner indicator (-1: first, 1: second, 0: both, 2: skip)\n */import React from'react';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function Bracket(_ref){let{matches}=_ref;const getMatchStatus=match=>{if(!match.winner)return'pending';if(match.winner===-1)return'first';if(match.winner===1)return'second';if(match.winner===0)return'both';return'skip';};const getCardVariant=(match,isFirst)=>{if(!match.winner)return'default';const status=getMatchStatus(match);if(status==='first')return isFirst?'winner':'loser';if(status==='second')return isFirst?'loser':'winner';if(status==='both')return'winner';return'default';};const rounds=matches.reduce((acc,match)=>{const lastRound=acc[acc.length-1];if(!lastRound||lastRound.length===Math.pow(2,acc.length-1)){acc.push([match]);}else{lastRound.push(match);}return acc;},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"bracket\",children:rounds.map((round,roundIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bracket-round\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"round-title\",children:[\"Round \",roundIndex+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"bracket-matches\",children:round.map(match=>/*#__PURE__*/_jsxs(\"div\",{className:\"bracket-match\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bracket-player \".concat(getCardVariant(match,true)),children:[/*#__PURE__*/_jsx(\"span\",{children:match.name1}),getMatchStatus(match)==='first'&&/*#__PURE__*/_jsx(\"span\",{className:\"winner-badge\",children:\"Winner\"}),getMatchStatus(match)==='both'&&/*#__PURE__*/_jsx(\"span\",{className:\"tie-badge\",children:\"Tie\"})]}),match.name2?/*#__PURE__*/_jsxs(\"div\",{className:\"bracket-player \".concat(getCardVariant(match,false)),children:[/*#__PURE__*/_jsx(\"span\",{children:match.name2}),getMatchStatus(match)==='second'&&/*#__PURE__*/_jsx(\"span\",{className:\"winner-badge\",children:\"Winner\"}),getMatchStatus(match)==='both'&&/*#__PURE__*/_jsx(\"span\",{className:\"tie-badge\",children:\"Tie\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"bracket-player bye\",children:/*#__PURE__*/_jsx(\"span\",{className:\"bye-text\",children:\"Bye\"})}),getMatchStatus(match)==='skip'&&/*#__PURE__*/_jsx(\"div\",{className:\"skip-badge\",children:\"Skipped\"})]},match.id))})]},roundIndex))});}export default Bracket;","map":{"version":3,"names":["React","jsxs","_jsxs","jsx","_jsx","Bracket","_ref","matches","getMatchStatus","match","winner","getCardVariant","isFirst","status","rounds","reduce","acc","lastRound","length","Math","pow","push","className","children","map","round","roundIndex","concat","name1","name2","id"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Bracket/Bracket.js"],"sourcesContent":["/**\n * @module Bracket\n * @description A React component that displays a tournament bracket visualization.\n * Shows the progression of matches, winners, and results in a bracket format.\n * Supports different match outcomes including wins, ties, and skipped matches.\n * \n * @example\n * <Bracket\n *   matches={[\n *     { id: 1, name1: \"Whiskers\", name2: \"Mittens\", winner: -1 },\n *     { id: 2, name1: \"Luna\", name2: \"Shadow\", winner: 1 }\n *   ]}\n * />\n * \n * @param {Object} props\n * @param {Array} props.matches - Array of match objects containing match details\n * @param {number} props.matches[].id - Unique identifier for the match\n * @param {string} props.matches[].name1 - First name in the match\n * @param {string} props.matches[].name2 - Second name in the match\n * @param {number} props.matches[].winner - Winner indicator (-1: first, 1: second, 0: both, 2: skip)\n */\n\nimport React from 'react';\n\nfunction Bracket({ matches }) {\n  const getMatchStatus = (match) => {\n    if (!match.winner) return 'pending';\n    if (match.winner === -1) return 'first';\n    if (match.winner === 1) return 'second';\n    if (match.winner === 0) return 'both';\n    return 'skip';\n  };\n\n  const getCardVariant = (match, isFirst) => {\n    if (!match.winner) return 'default';\n    const status = getMatchStatus(match);\n    if (status === 'first') return isFirst ? 'winner' : 'loser';\n    if (status === 'second') return isFirst ? 'loser' : 'winner';\n    if (status === 'both') return 'winner';\n    return 'default';\n  };\n\n  const rounds = matches.reduce((acc, match) => {\n    const lastRound = acc[acc.length - 1];\n    if (!lastRound || lastRound.length === Math.pow(2, acc.length - 1)) {\n      acc.push([match]);\n    } else {\n      lastRound.push(match);\n    }\n    return acc;\n  }, []);\n\n  return (\n    <div className=\"bracket\">\n      {rounds.map((round, roundIndex) => (\n        <div key={roundIndex} className=\"bracket-round\">\n          <div className=\"round-title\">\n            Round {roundIndex + 1}\n          </div>\n          <div className=\"bracket-matches\">\n            {round.map((match) => (\n              <div key={match.id} className=\"bracket-match\">\n                <div\n                  className={`bracket-player ${getCardVariant(match, true)}`}\n                >\n                  <span>{match.name1}</span>\n                  {getMatchStatus(match) === 'first' && <span className=\"winner-badge\">Winner</span>}\n                  {getMatchStatus(match) === 'both' && <span className=\"tie-badge\">Tie</span>}\n                </div>\n                {match.name2 ? (\n                  <div\n                    className={`bracket-player ${getCardVariant(match, false)}`}\n                  >\n                    <span>{match.name2}</span>\n                    {getMatchStatus(match) === 'second' && <span className=\"winner-badge\">Winner</span>}\n                    {getMatchStatus(match) === 'both' && <span className=\"tie-badge\">Tie</span>}\n                  </div>\n                ) : (\n                  <div className=\"bracket-player bye\">\n                    <span className=\"bye-text\">Bye</span>\n                  </div>\n                )}\n                {getMatchStatus(match) === 'skip' && (\n                  <div className=\"skip-badge\">Skipped</div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Bracket; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}