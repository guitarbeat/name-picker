{"ast":null,"code":"/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */import React,{useCallback,useState,useEffect}from'react';import{PreferenceSorter}from'../../utils/sortingAlgorithm';import EloRating from'../../utils/EloRating';import'./Tournament.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Tournament(_ref){let{onComplete,existingRatings={},names=[],userName}=_ref;const[currentMatch,setCurrentMatch]=useState(null);const[isTransitioning,setIsTransitioning]=useState(false);const[roundNumber,setRoundNumber]=useState(1);const[currentMatchNumber,setCurrentMatchNumber]=useState(1);const[totalMatches,setTotalMatches]=useState(1);const[sorter,setSorter]=useState(null);const[elo]=useState(()=>new EloRating());const[resolveVote,setResolveVote]=useState(null);const[selectedOption,setSelectedOption]=useState(null);const[showEndEarlyConfirmation,setShowEndEarlyConfirmation]=useState(false);useEffect(()=>{console.log('Tournament received names:',names);},[names]);useEffect(()=>{if(!names||names.length===0){console.log('No names provided for tournament');return;}console.log('Starting new tournament with names:',names);// Create a new sorter with just the name strings for compatibility\nconst nameStrings=names.map(n=>n.name);const newSorter=new PreferenceSorter(nameStrings);setSorter(newSorter);const n=names.length;const estimatedMatches=Math.ceil(n*Math.log2(n));setTotalMatches(estimatedMatches);setCurrentMatchNumber(1);setRoundNumber(1);runTournament(newSorter);},[names]);const runTournament=async tournamentSorter=>{try{// Save initial state for recovery\nconst initialState={names,existingRatings,currentMatchNumber:1,roundNumber:1};localStorage.setItem('tournamentState',JSON.stringify(initialState));const sortedResults=await tournamentSorter.sort(async(leftName,rightName)=>{// Find the full name objects for the current match\nconst left=names.find(n=>n.name===leftName);const right=names.find(n=>n.name===rightName);setCurrentMatch({left,right});return new Promise(resolve=>{setResolveVote(()=>resolve);});});// Calculate ratings with dynamic blend factor based on matches played\nconst ratingsArray=sortedResults.map((name,index)=>{// Get existing rating data\nconst existingData=typeof existingRatings[name]==='object'?existingRatings[name]:{rating:existingRatings[name]||1500,matches:0};const totalNames=sortedResults.length;const position=index;// Dynamic rating spread based on tournament size\nconst ratingSpread=Math.min(1000,totalNames*25);// Calculate position-based rating\nconst positionValue=(totalNames-position-1)/(totalNames-1)*ratingSpread;const newPositionRating=1500+positionValue;// Calculate blend factor based on number of matches played\n// More matches = more weight on new rating\nconst matchesPlayed=currentMatchNumber;const maxMatches=totalMatches;const blendFactor=Math.min(0.8,matchesPlayed/maxMatches*0.9);// Weighted average of existing and new ratings\nconst newRating=Math.round(blendFactor*newPositionRating+(1-blendFactor)*existingData.rating);// Ensure rating stays within reasonable bounds\nconst minRating=1000;const maxRating=2000;const finalRating=Math.max(minRating,Math.min(maxRating,newRating));return{name,rating:finalRating,confidence:matchesPlayed/maxMatches// Add confidence score\n};});// Clear saved state on successful completion\nlocalStorage.removeItem('tournamentState');onComplete(ratingsArray);}catch(error){console.error('Tournament error:',error);// Attempt to recover from saved state\nconst savedState=localStorage.getItem('tournamentState');if(savedState){const state=JSON.parse(savedState);setCurrentMatchNumber(state.currentMatchNumber);setRoundNumber(state.roundNumber);// Could implement more recovery logic here\n}}};const handleVote=useCallback(result=>{if(isTransitioning||!resolveVote)return;setSelectedOption(result);setIsTransitioning(true);// Enhanced vote value calculation\nlet voteValue;switch(result){case'left':voteValue=-1;break;case'right':voteValue=1;break;case'both':// Randomize slight preference for variety\nvoteValue=Math.random()*0.2-0.1;break;case'none':// True neutral with slight random variation\nvoteValue=Math.random()*0.1-0.05;break;default:voteValue=0;}// Save progress\nlocalStorage.setItem('lastVote',JSON.stringify({matchNumber:currentMatchNumber,result:voteValue,timestamp:Date.now()}));resolveVote(voteValue);setCurrentMatchNumber(prev=>prev+1);// Update round number if needed\nif(currentMatchNumber%Math.ceil(names.length/2)===0){setRoundNumber(prev=>prev+1);}setTimeout(()=>{setIsTransitioning(false);setSelectedOption(null);},500);},[resolveVote,isTransitioning,currentMatchNumber,names.length]);useEffect(()=>{const handleKeyPress=event=>{if(isTransitioning)return;switch(event.key){case'ArrowLeft':handleVote('left');break;case'ArrowRight':handleVote('right');break;case'b':case'B':handleVote('both');break;case'n':case'N':handleVote('none');break;default:break;}};window.addEventListener('keydown',handleKeyPress);return()=>window.removeEventListener('keydown',handleKeyPress);},[handleVote,isTransitioning]);const handleEndEarly=()=>{setShowEndEarlyConfirmation(true);};const handleConfirmEnd=()=>{// Calculate current rankings based on completed matches\nconst currentRankings=sorter.getCurrentRankings().map((nameObj,index)=>{// Get existing rating or default\nconst currentRating=typeof existingRatings[nameObj.name]==='object'?existingRatings[nameObj.name].rating:existingRatings[nameObj.name]||1500;// Calculate new rating based on position\nconst totalNames=names.length;const position=index;const ratingSpread=500;const positionValue=(totalNames-position-1)/(totalNames-1)*ratingSpread;// Blend existing rating with new position-based rating\nconst blendFactor=0.7;const newRating=Math.round(blendFactor*(1500+positionValue)+(1-blendFactor)*currentRating);// Ensure rating stays within bounds\nconst finalRating=Math.max(1000,Math.min(2000,newRating));return{name:nameObj.name,rating:finalRating,description:nameObj.description};});onComplete(currentRankings);};const handleCancelEnd=()=>{setShowEndEarlyConfirmation(false);};if(!currentMatch){console.log('No current match');return/*#__PURE__*/_jsx(\"div\",{children:\"Loading tournament...\"});}console.log('Current match:',currentMatch);const progress=Math.round(currentMatchNumber/totalMatches*100);return/*#__PURE__*/_jsxs(\"div\",{className:\"tournament\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"round-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"round-number\",children:[\"Round \",roundNumber]}),/*#__PURE__*/_jsxs(\"span\",{className:\"match-count\",children:[\"Match \",currentMatchNumber,\" of \",totalMatches]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"percentage-info\",children:[progress,\"% Complete\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"end-early-button\",onClick:handleEndEarly,disabled:isTransitioning,children:\"End Tournament Early\"}),showEndEarlyConfirmation&&/*#__PURE__*/_jsxs(\"div\",{className:\"end-early-confirmation\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Are you sure you want to end the tournament early? Current progress will be saved and you can adjust rankings manually.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"confirm-end-button\",onClick:handleConfirmEnd,children:\"Yes, End Now\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-end-button\",onClick:handleCancelEnd,children:\"No, Continue\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"matchup\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"names-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"name-container left\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"name-card \".concat(selectedOption==='left'?'selected':''),onClick:()=>!isTransitioning&&handleVote('left'),role:\"button\",tabIndex:0,title:\"Press \\u2190 arrow key\",children:[/*#__PURE__*/_jsx(\"h3\",{children:currentMatch.left.name}),/*#__PURE__*/_jsx(\"p\",{className:\"name-description\",children:currentMatch.left.description})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"vs-section\",children:/*#__PURE__*/_jsx(\"div\",{className:\"vs-text\",children:\"vs\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"name-container right\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"name-card \".concat(selectedOption==='right'?'selected':''),onClick:()=>!isTransitioning&&handleVote('right'),role:\"button\",tabIndex:0,title:\"Press \\u2192 arrow key\",children:[/*#__PURE__*/_jsx(\"h3\",{children:currentMatch.right.name}),/*#__PURE__*/_jsx(\"p\",{className:\"name-description\",children:currentMatch.right.description})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"center-options\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"extra-options-button \".concat(selectedOption==='both'?'selected':''),onClick:()=>!isTransitioning&&handleVote('both'),disabled:isTransitioning,title:\"Press 'B' key\",children:\"Like Both\"}),/*#__PURE__*/_jsx(\"button\",{className:\"extra-options-button \".concat(selectedOption==='none'?'selected':''),onClick:()=>!isTransitioning&&handleVote('none'),disabled:isTransitioning,title:\"Press 'N' key\",children:\"No Opinion\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tournament-instructions\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Click on a name to choose it, or select an option below\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"keyboard-hints\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Keyboard shortcuts: \\u2190 Left, \\u2192 Right, B (Both), N (No Opinion)\"})})]});}export default Tournament;","map":{"version":3,"names":["React","useCallback","useState","useEffect","PreferenceSorter","EloRating","jsx","_jsx","jsxs","_jsxs","Tournament","_ref","onComplete","existingRatings","names","userName","currentMatch","setCurrentMatch","isTransitioning","setIsTransitioning","roundNumber","setRoundNumber","currentMatchNumber","setCurrentMatchNumber","totalMatches","setTotalMatches","sorter","setSorter","elo","resolveVote","setResolveVote","selectedOption","setSelectedOption","showEndEarlyConfirmation","setShowEndEarlyConfirmation","console","log","length","nameStrings","map","n","name","newSorter","estimatedMatches","Math","ceil","log2","runTournament","tournamentSorter","initialState","localStorage","setItem","JSON","stringify","sortedResults","sort","leftName","rightName","left","find","right","Promise","resolve","ratingsArray","index","existingData","rating","matches","totalNames","position","ratingSpread","min","positionValue","newPositionRating","matchesPlayed","maxMatches","blendFactor","newRating","round","minRating","maxRating","finalRating","max","confidence","removeItem","error","savedState","getItem","state","parse","handleVote","result","voteValue","random","matchNumber","timestamp","Date","now","prev","setTimeout","handleKeyPress","event","key","window","addEventListener","removeEventListener","handleEndEarly","handleConfirmEnd","currentRankings","getCurrentRankings","nameObj","currentRating","description","handleCancelEnd","children","progress","className","onClick","disabled","concat","role","tabIndex","title"],"sources":["/Users/aaron/Desktop/Side Projects/name-picker/meow-namester-react/src/components/Tournament/Tournament.js"],"sourcesContent":["/**\n * @module Tournament\n * @description A React component that handles the tournament-style voting interface for cat names.\n * Provides a UI for comparing two names, with options for liking both or neither.\n * Includes keyboard controls and progress tracking.\n * \n * @example\n * <Tournament\n *   currentMatch={{ left: \"Whiskers\", right: \"Mittens\" }}\n *   onVote={(result) => handleVote(result)}\n *   roundNumber={1}\n *   totalMatches={10}\n *   currentMatchNumber={3}\n * />\n * \n * @param {Object} props\n * @param {Object} props.currentMatch - Object containing left and right name options\n * @param {Function} props.onVote - Callback function when a vote is made\n * @param {number} [props.roundNumber=1] - Current round number\n * @param {number} [props.totalMatches=1] - Total number of matches in the tournament\n * @param {number} [props.currentMatchNumber=1] - Current match number\n * @param {Function} [props.onNavigate] - Optional callback for navigation between matches\n */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { PreferenceSorter } from '../../utils/sortingAlgorithm';\nimport EloRating from '../../utils/EloRating';\nimport './Tournament.css';\n\nfunction Tournament({ onComplete, existingRatings = {}, names = [], userName }) {\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [currentMatchNumber, setCurrentMatchNumber] = useState(1);\n  const [totalMatches, setTotalMatches] = useState(1);\n  const [sorter, setSorter] = useState(null);\n  const [elo] = useState(() => new EloRating());\n  const [resolveVote, setResolveVote] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showEndEarlyConfirmation, setShowEndEarlyConfirmation] = useState(false);\n\n  useEffect(() => {\n    console.log('Tournament received names:', names);\n  }, [names]);\n\n  useEffect(() => {\n    if (!names || names.length === 0) {\n      console.log('No names provided for tournament');\n      return;\n    }\n\n    console.log('Starting new tournament with names:', names);\n    // Create a new sorter with just the name strings for compatibility\n    const nameStrings = names.map(n => n.name);\n    const newSorter = new PreferenceSorter(nameStrings);\n    setSorter(newSorter);\n    \n    const n = names.length;\n    const estimatedMatches = Math.ceil(n * Math.log2(n));\n    setTotalMatches(estimatedMatches);\n    setCurrentMatchNumber(1);\n    setRoundNumber(1);\n\n    runTournament(newSorter);\n  }, [names]);\n\n  const runTournament = async (tournamentSorter) => {\n    try {\n      // Save initial state for recovery\n      const initialState = {\n        names,\n        existingRatings,\n        currentMatchNumber: 1,\n        roundNumber: 1\n      };\n      localStorage.setItem('tournamentState', JSON.stringify(initialState));\n\n      const sortedResults = await tournamentSorter.sort(async (leftName, rightName) => {\n        // Find the full name objects for the current match\n        const left = names.find(n => n.name === leftName);\n        const right = names.find(n => n.name === rightName);\n        setCurrentMatch({ left, right });\n        return new Promise((resolve) => {\n          setResolveVote(() => resolve);\n        });\n      });\n\n      // Calculate ratings with dynamic blend factor based on matches played\n      const ratingsArray = sortedResults.map((name, index) => {\n        // Get existing rating data\n        const existingData = typeof existingRatings[name] === 'object'\n          ? existingRatings[name]\n          : { rating: existingRatings[name] || 1500, matches: 0 };\n\n        const totalNames = sortedResults.length;\n        const position = index;\n        \n        // Dynamic rating spread based on tournament size\n        const ratingSpread = Math.min(1000, totalNames * 25);\n        \n        // Calculate position-based rating\n        const positionValue = ((totalNames - position - 1) / (totalNames - 1)) * ratingSpread;\n        const newPositionRating = 1500 + positionValue;\n\n        // Calculate blend factor based on number of matches played\n        // More matches = more weight on new rating\n        const matchesPlayed = currentMatchNumber;\n        const maxMatches = totalMatches;\n        const blendFactor = Math.min(0.8, (matchesPlayed / maxMatches) * 0.9);\n\n        // Weighted average of existing and new ratings\n        const newRating = Math.round(\n          (blendFactor * newPositionRating) +\n          ((1 - blendFactor) * existingData.rating)\n        );\n\n        // Ensure rating stays within reasonable bounds\n        const minRating = 1000;\n        const maxRating = 2000;\n        const finalRating = Math.max(minRating, Math.min(maxRating, newRating));\n\n        return {\n          name,\n          rating: finalRating,\n          confidence: (matchesPlayed / maxMatches) // Add confidence score\n        };\n      });\n\n      // Clear saved state on successful completion\n      localStorage.removeItem('tournamentState');\n      \n      onComplete(ratingsArray);\n    } catch (error) {\n      console.error('Tournament error:', error);\n      // Attempt to recover from saved state\n      const savedState = localStorage.getItem('tournamentState');\n      if (savedState) {\n        const state = JSON.parse(savedState);\n        setCurrentMatchNumber(state.currentMatchNumber);\n        setRoundNumber(state.roundNumber);\n        // Could implement more recovery logic here\n      }\n    }\n  };\n\n  const handleVote = useCallback((result) => {\n    if (isTransitioning || !resolveVote) return;\n\n    setSelectedOption(result);\n    setIsTransitioning(true);\n    \n    // Enhanced vote value calculation\n    let voteValue;\n    switch (result) {\n      case 'left':\n        voteValue = -1;\n        break;\n      case 'right':\n        voteValue = 1;\n        break;\n      case 'both':\n        // Randomize slight preference for variety\n        voteValue = Math.random() * 0.2 - 0.1;\n        break;\n      case 'none':\n        // True neutral with slight random variation\n        voteValue = Math.random() * 0.1 - 0.05;\n        break;\n      default:\n        voteValue = 0;\n    }\n    \n    // Save progress\n    localStorage.setItem('lastVote', JSON.stringify({\n      matchNumber: currentMatchNumber,\n      result: voteValue,\n      timestamp: Date.now()\n    }));\n\n    resolveVote(voteValue);\n    setCurrentMatchNumber(prev => prev + 1);\n    \n    // Update round number if needed\n    if (currentMatchNumber % Math.ceil(names.length / 2) === 0) {\n      setRoundNumber(prev => prev + 1);\n    }\n    \n    setTimeout(() => {\n      setIsTransitioning(false);\n      setSelectedOption(null);\n    }, 500);\n  }, [resolveVote, isTransitioning, currentMatchNumber, names.length]);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (isTransitioning) return;\n      \n      switch(event.key) {\n        case 'ArrowLeft':\n          handleVote('left');\n          break;\n        case 'ArrowRight':\n          handleVote('right');\n          break;\n        case 'b':\n        case 'B':\n          handleVote('both');\n          break;\n        case 'n':\n        case 'N':\n          handleVote('none');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleVote, isTransitioning]);\n\n  const handleEndEarly = () => {\n    setShowEndEarlyConfirmation(true);\n  };\n\n  const handleConfirmEnd = () => {\n    // Calculate current rankings based on completed matches\n    const currentRankings = sorter.getCurrentRankings().map((nameObj, index) => {\n      // Get existing rating or default\n      const currentRating = typeof existingRatings[nameObj.name] === 'object'\n        ? existingRatings[nameObj.name].rating\n        : (existingRatings[nameObj.name] || 1500);\n      \n      // Calculate new rating based on position\n      const totalNames = names.length;\n      const position = index;\n      const ratingSpread = 500;\n      const positionValue = ((totalNames - position - 1) / (totalNames - 1)) * ratingSpread;\n      \n      // Blend existing rating with new position-based rating\n      const blendFactor = 0.7;\n      const newRating = Math.round(\n        (blendFactor * (1500 + positionValue)) +\n        ((1 - blendFactor) * currentRating)\n      );\n\n      // Ensure rating stays within bounds\n      const finalRating = Math.max(1000, Math.min(2000, newRating));\n      \n      return {\n        name: nameObj.name,\n        rating: finalRating,\n        description: nameObj.description\n      };\n    });\n\n    onComplete(currentRankings);\n  };\n\n  const handleCancelEnd = () => {\n    setShowEndEarlyConfirmation(false);\n  };\n\n  if (!currentMatch) {\n    console.log('No current match');\n    return <div>Loading tournament...</div>;\n  }\n\n  console.log('Current match:', currentMatch);\n\n  const progress = Math.round((currentMatchNumber / totalMatches) * 100);\n\n  return (\n    <div className=\"tournament\">\n      <div className=\"progress-info\">\n        <div className=\"round-info\">\n          <span className=\"round-number\">Round {roundNumber}</span>\n          <span className=\"match-count\">Match {currentMatchNumber} of {totalMatches}</span>\n        </div>\n        <div className=\"percentage-info\">{progress}% Complete</div>\n      </div>\n\n      <div className=\"tournament-controls\">\n        <button \n          className=\"end-early-button\"\n          onClick={handleEndEarly}\n          disabled={isTransitioning}\n        >\n          End Tournament Early\n        </button>\n\n        {showEndEarlyConfirmation && (\n          <div className=\"end-early-confirmation\">\n            <p>Are you sure you want to end the tournament early? Current progress will be saved and you can adjust rankings manually.</p>\n            <button \n              className=\"confirm-end-button\"\n              onClick={handleConfirmEnd}\n            >\n              Yes, End Now\n            </button>\n            <button \n              className=\"cancel-end-button\"\n              onClick={handleCancelEnd}\n            >\n              No, Continue\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"matchup\">\n        <div className=\"names-row\">\n          <div className=\"name-container left\">\n            <div \n              className={`name-card ${selectedOption === 'left' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('left')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press ← arrow key\"\n            >\n              <h3>{currentMatch.left.name}</h3>\n              <p className=\"name-description\">{currentMatch.left.description}</p>\n            </div>\n          </div>\n\n          <div className=\"vs-section\">\n            <div className=\"vs-text\">vs</div>\n          </div>\n\n          <div className=\"name-container right\">\n            <div \n              className={`name-card ${selectedOption === 'right' ? 'selected' : ''}`}\n              onClick={() => !isTransitioning && handleVote('right')}\n              role=\"button\"\n              tabIndex={0}\n              title=\"Press → arrow key\"\n            >\n              <h3>{currentMatch.right.name}</h3>\n              <p className=\"name-description\">{currentMatch.right.description}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"center-options\">\n          <button\n            className={`extra-options-button ${selectedOption === 'both' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('both')}\n            disabled={isTransitioning}\n            title=\"Press 'B' key\"\n          >\n            Like Both\n          </button>\n          <button\n            className={`extra-options-button ${selectedOption === 'none' ? 'selected' : ''}`}\n            onClick={() => !isTransitioning && handleVote('none')}\n            disabled={isTransitioning}\n            title=\"Press 'N' key\"\n          >\n            No Opinion\n          </button>\n        </div>\n      </div>\n\n      <div className=\"tournament-instructions\">\n        <p>Click on a name to choose it, or select an option below</p>\n      </div>\n\n      <div className=\"keyboard-hints\">\n        <p>Keyboard shortcuts: ← Left, → Right, B (Both), N (No Opinion)</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Tournament; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}